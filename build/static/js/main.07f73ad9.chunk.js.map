{"version":3,"sources":["App/components/Login.jsx","App/components/ForgotPassword.jsx","App/components/Landingpage.jsx","App/components/UserDropdownMenu.jsx","App/components/ApplicationMenu.jsx","App/components/Profile.jsx","App/components/Preferences.jsx","App/components/ChangePassword.jsx","App/components/socket-address.js","App/components/Notifications.jsx","App/components/NavLink.js","App/components/DatatableMenu.jsx","App/modules/ccs/menus/status/Status.jsx","App/modules/ccs/menus/status/index.js","App/log/InsertLog.js","App/modules/ccs/menus/categories/Categories.jsx","App/modules/ccs/menus/categories/index.js","App/modules/ccs/menus/priorities/Priorities.jsx","App/modules/ccs/menus/priorities/index.js","App/modules/ccs/menus/ticket/Ticket.jsx","App/modules/ccs/menus/ticket/Detail.jsx","App/modules/ccs/menus/ticket/Form.jsx","App/modules/ccs/menus/ticket/FormForward.jsx","App/modules/ccs/menus/ticket/FormSplit.jsx","App/modules/ccs/menus/ticket/FormReply.jsx","App/modules/ccs/menus/ticket/FormRating.jsx","App/modules/ccs/menus/ticket/AllTickets.jsx","App/modules/ccs/menus/ticket/Completed.jsx","App/modules/ccs/menus/ticket/Rejected.jsx","App/modules/ccs/menus/ticket/Approval.jsx","App/modules/ccs/menus/ticket/MyHandle.jsx","App/modules/ccs/menus/ticket/FInished.jsx","App/modules/ccs/menus/ticket/Forwarded.jsx","App/modules/ccs/menus/ticket/FormEditReply.jsx","App/modules/ccs/menus/ticket/Queued.jsx","App/modules/ccs/menus/ticket/FormReject.jsx","App/modules/ccs/menus/ticket/FormSetHandler.jsx","App/modules/ccs/menus/ticket/FormEditTicket.jsx","App/modules/ccs/components/KebabMenu.jsx","App/modules/ccs/home/DetailAllTicket.jsx","App/modules/ccs/home/DetailOnProgress.jsx","App/modules/ccs/home/DetailAllCompleted.jsx","App/modules/ccs/menus/statistics/Statistics.jsx","App/modules/ccs/menus/task/Task.jsx","App/modules/ccs/menus/task/index.js","App/modules/ccs/menus/about/Help.jsx","App/modules/ccs/menus/about/help.js","App/modules/ccs/menus/report/Filter.jsx","App/modules/ccs/log/InsertLog.js","App/modules/ccs/menus/report/Team.jsx","App/modules/ccs/menus/report/Customers.jsx","App/modules/ccs/menus/report/Report.jsx","App/modules/ccs/menus/report/index.js","App/modules/ccs/home/Dashboard.jsx","App/modules/ccs/home/CCS.jsx","App/modules/ccs/home/index.js","App/modules/ccs/menus/preferences.js","App/modules/ccs/menus/profile.js","App/modules/ccs/menus/changepwd.js","App/modules/ccs/menus/ticket/detail.js","App/modules/ccs/menus/ticket/DetailApproval.jsx","App/modules/ccs/menus/ticket/detailapproval.js","App/modules/ccs/menus/ticket/DetailCompleted.jsx","App/modules/ccs/menus/ticket/detailcompleted.js","App/modules/ccs/menus/ticket/DetailFinished.jsx","App/modules/ccs/menus/ticket/detailfinished.js","App/modules/ccs/menus/ticket/DetailHandle.jsx","App/modules/ccs/menus/ticket/detailhandle.js","App/modules/ccs/menus/ticket/DetailRejected.jsx","App/modules/ccs/menus/ticket/detailrejected.js","App/modules/ccs/menus/ticket/form.js","App/modules/ccs/menus/ticket/formeditticket.js","App/modules/ccs/menus/customer/AllTicket.jsx","App/modules/ccs/menus/customer/Completed.jsx","App/modules/ccs/menus/customer/Customer.jsx","App/modules/ccs/menus/customer/index.js","App/modules/ccs/menus/staff/OnProgress.jsx","App/modules/ccs/menus/staff/Completed.jsx","App/modules/ccs/menus/staff/Profile.jsx","App/modules/ccs/menus/staff/index.js","App/modules/ccs/home/detail_all.js","App/modules/ccs/home/DetailAllRejected.jsx","App/modules/ccs/home/detail_rejected.js","App/modules/ccs/home/DetailAllFinished.jsx","App/modules/ccs/home/detail_finished.js","App/modules/ccs/home/DetailAllForwarded.jsx","App/modules/ccs/home/detail_forwarded.js","App/modules/ccs/home/detail_progress.js","App/modules/ccs/home/detail_completed.js","App/modules/ccs/menus/log/Logs.jsx","App/modules/ccs/menus/log/index.js","App/modules/ccs/menus/teams/index.js","App/modules/ccs/menus/teams/Teams.jsx","App/modules/ccs/menus/client-respond-time/ClientRespondTimeConfig.jsx","App/modules/ccs/menus/client-respond-time/index.js","App/modules/ccs/menus/notifications/Notifications.jsx","App/modules/ccs/menus/index.js","App/modules/ccs/menus/notifications/index.js","App/modules/ccs/home/Home.jsx","App/modules/ccs/index.js","App/modules/clients/menus/clients/Clients.jsx","App/modules/clients/menus/clients/index.js","App/modules/clients/components/KebabMenu.jsx","App/modules/clients/menus/status/Status.jsx","App/modules/clients/menus/status/index.js","App/modules/clients/menus/report/Report.jsx","App/modules/clients/menus/report/index.js","App/modules/clients/home/Container.jsx","App/modules/clients/home/index.js","App/modules/clients/menus/preferences.js","App/modules/clients/menus/profile.js","App/modules/clients/menus/changepwd.js","App/modules/clients/menus/clients/Form.jsx","App/modules/clients/menus/clients/form.js","App/modules/clients/menus/notifications/Notifications.jsx","App/modules/clients/menus/index.js","App/modules/clients/menus/notifications/index.js","App/modules/clients/home/Home.jsx","App/modules/clients/index.js","App/modules/control/components/KebabMenu.jsx","App/modules/control/menus/menu/Menus.jsx","App/modules/control/menus/menu/index.js","App/modules/control/menus/modules/Modules.jsx","App/modules/control/menus/modules/index.js","App/modules/control/menus/roles/Roles.jsx","App/modules/control/menus/roles/index.js","App/modules/control/menus/users/Users.jsx","App/modules/control/menus/users/index.js","App/modules/control/menus/help/Help.jsx","App/modules/control/menus/log/Logs.jsx","App/modules/control/menus/announcements/Announcements.jsx","App/modules/control/home/Container.jsx","App/modules/control/home/index.js","App/modules/control/menus/help/index.js","App/modules/control/menus/help/Form.jsx","App/modules/control/menus/help/form.js","App/modules/control/menus/announcements/Form.jsx","App/modules/control/menus/announcements/form.js","App/modules/control/menus/profile.js","App/modules/control/menus/preferences.js","App/modules/control/menus/changepwd.js","App/modules/control/menus/log/index.js","App/modules/control/menus/announcements/index.js","App/modules/control/menus/notifications/Notifications.jsx","App/modules/control/menus/index.js","App/modules/control/menus/notifications/index.js","App/modules/control/home/Home.jsx","App/modules/control/index.js","App/modules/employees/menus/employees/Employees.jsx","App/modules/employees/menus/employees/index.js","App/modules/employees/components/KebabMenu.jsx","App/modules/employees/menus/status/Status.jsx","App/modules/employees/menus/status/index.js","App/modules/employees/menus/report/Report.jsx","App/modules/employees/menus/report/index.js","App/modules/employees/menus/structure/Structure.jsx","App/modules/employees/home/Container.jsx","App/modules/employees/home/index.js","App/modules/employees/menus/preferences.js","App/modules/employees/menus/profile.js","App/modules/employees/menus/changepwd.js","App/modules/employees/menus/employees/Form.jsx","App/modules/employees/menus/employees/form.js","App/modules/employees/menus/notifications/Notifications.jsx","App/modules/employees/menus/index.js","App/modules/employees/menus/notifications/index.js","App/modules/employees/home/Home.jsx","App/modules/employees/index.js","App/modules/sism/menus/letter-in/LetterIn.jsx","App/modules/sism/menus/letter-in/index.js","App/modules/sism/menus/letter-in/FormDisposition.jsx","App/modules/sism/menus/letter-in/FormForward.jsx","App/modules/sism/menus/letter-in/Detail.jsx","App/modules/sism/menus/letter-in/detail.js","App/modules/sism/menus/letter-in/detail_unapprove.js","App/modules/sism/menus/letter-in/DetailUnApprove.jsx","App/modules/sism/menus/letter-in/Form.jsx","App/modules/sism/menus/letter-in/form.js","App/modules/sism/menus/letter-in/formedit.js","App/modules/sism/menus/letter-out/LetterOut.jsx","App/modules/sism/menus/letter-out/index.js","App/modules/sism/menus/letter-out/FormRejectApproval.jsx","App/modules/sism/menus/letter-out/Detail.jsx","App/modules/sism/menus/letter-out/detail.js","App/modules/sism/menus/letter-out/Form.jsx","App/modules/sism/menus/letter-out/form.js","App/modules/sism/menus/letter-out/formedit.js","App/modules/sism/menus/tracking/Tracking.jsx","App/modules/sism/menus/tracking/index.js","App/modules/sism/menus/archives/Archives.jsx","App/modules/sism/menus/archives/index.js","App/modules/sism/menus/report/LetterIn.jsx","App/modules/sism/menus/report/LetterOut.jsx","App/modules/sism/menus/report/Filter.jsx","App/modules/sism/menus/report/Report.jsx","App/modules/sism/menus/report/index.js","App/modules/sism/components/KebabMenu.jsx","App/modules/sism/menus/status/Status.jsx","App/modules/sism/menus/status/index.js","App/modules/sism/menus/sending-methods/SendingMethods.jsx","App/modules/sism/menus/sending-methods/index.js","App/modules/sism/home/Dashboard.jsx","App/modules/sism/home/SISM.jsx","App/modules/sism/home/index.js","App/modules/sism/menus/preferences.js","App/modules/sism/menus/profile.js","App/modules/sism/menus/changepwd.js","App/modules/sism/menus/letter-in/LetterInUnApproved.jsx","App/modules/sism/menus/letter-in/unapproved-letter-in.js","App/modules/sism/menus/archives/detail_archive.js","App/modules/sism/menus/archives/Detail.jsx","App/modules/sism/menus/tracking/detail_tracking.js","App/modules/sism/menus/tracking/Detail.jsx","App/modules/sism/menus/log/Logs.jsx","App/modules/sism/menus/log/index.js","App/modules/sism/menus/notifications/Notifications.jsx","App/modules/sism/menus/index.js","App/modules/sism/menus/notifications/index.js","App/modules/sism/home/Home.jsx","App/modules/sism/index.js","App/modules/landing/home/Landingpage.jsx","App/modules/landing/home/Container.jsx","App/modules/landing/menus/index.js","App/modules/landing/home/index.js","App/modules/landing/menus/preferences.js","App/modules/landing/menus/profile.js","App/modules/landing/menus/changepwd.js","App/modules/landing/home/Home.jsx","App/modules/landing/index.js","App/notifications/Notifications.jsx","App/modules/index.js","App/notifications/index.js","App/modules/setting/ChangePassword.jsx","App/modules/setting/Profile.jsx","App/modules/setting/Preferences.jsx","App/index.js","index.js"],"names":["Login","props","onChangeUsername","evt","setState","username","onChangePassword","s","password","doLogin","a","body","state","axios","post","then","response","data","status","Session","start","payload","dataLogin","expiration","window","location","href","message","isNotification","console","log","forgotPwd","onKeyUpLogin","keyCode","isLoading","style","backgroundImage","opacity","background","height","maxWidth","marginTop","marginBottom","className","title","subtitle","this","onClick","id","label","placeholder","value","onChange","type","onKeyUp","raised","primary","Link","to","flat","PureComponent","ForgotPassword","notify","toast","TYPE","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","new_password","onChangePasswordConfim","new_password_confirm","confirmReset","dialogVisible","doCheckUsername","responseEmployee","length","validUsername","_id","doChange","password_hash","put","history","go","width","visible","onHide","actions","get","Landingpage","searchModule","componentDidMount","userId","modules","total_notifications","map","item","i","avatar_url","error","total","colors","Redirect","colored","backgroundColor","UserDropdownMenu","avatar","alignItems","src","fontSize","target","size","leftIcon","fullWidth","padding","justifyContent","module","link","key","screen","borderRadius","marginRight","marginLeft","fontWeight","icon","userInfo","SomeCustomMenu","loc","split","undefined","menuItems","primaryText","textDecoration","divider","destroy","getSession","isValid","anchor","x","DropdownMenuColumn","HorizontalAnchors","CENTER","y","VerticalAnchors","BOTTOM","sameWidth","Positions","TOP_RIGHT","animationPosition","component","IconSeparator","iconBefore","alt","role","Component","ApplicationMenu","dt","obj","listStyle","MenuButtonColumn","TOP_LEFT","listClassName","Form","onChangeFullName","full_name","onChangePhoneNumber","phone_number","onChangeEmail","email","onChangeAddress","address","save","bodyEmployee","bodyClient","client_name","updated_by","created_by","employee_id","client_id","handleLoad","uploadedFile","uploadedData","deleteFile","file","formdata","temp_avatar","parsed","qs","parse","search","user_id","nav","rows","removable","accept","name","onLoad","handleSubmit","onChangeOldPassword","old_password","onChangeNewPassword","onChangeNewPasswordConfim","checkPassword","validOldPassword","socket_address","Notifications","readNotif","notif_id","is_read","e","readNavbarNotif","total_notif","socket","io","on","to_user_id","dateformat","created_at","notification","onMenuBlur","data-badge","NavLink","exact","Route","path","match","RouterLink","active","KebabMenu","setUpdate","setDelete","rightIcon","top","listInline","centered","justifyItems","routeProps","val","addToast","text","toasts","slice","push","showForm","label_color","description","onChangeLabelCOlor","onChangeStatus","onChangeDescription","dialogDeleteVisible","delete","module_short_name","children","right","bottom","float","secondary","floating","iconClassName","offset","color","autohideTimeout","from_ip","IP","insertLog","module_id","app_version","onChangeCategory","category","onChangeWeight","weight","showNotif","notifComponent","paddingRight","moduleName","onChangePriority","priority","onChangeMaxRespondTime","max_respond_time","onChangeLabelColor","Detail","closeDetail","cancelEditTicket","isEditTicket","successEditTicket","act","formAction","finishReply","finishReject","finishForward","setAction","splitAdded","total_split","sendAsLetterConfirm","dialogSendAsLetterVisible","sendAsIncomingLetter","subject","sender","file_url","status_id","response_ticket","og","updateCategory","category_id_edit","updatePriority","priority_id_edit","updatePriority_Category","priority_id","category_id","dialogEditCategoryVisible","alert","handled_by_user_id","rejectReply","ticket_reply_id","ticket_id","replyAnswer","saveTimeResolution","resolution_at","Date","finishSplit","showModalAttachment","attach_id","document","getElementById","classList","toggle","editHandler","scrollTo","failed_loading_data","parent_ticket_id","data_parent","child_ticket","attachment","answers_attachment","modalRating","rating","reviews","answers","attachment_parent","rejectAnswer","client_id_from_user","priorities","categories","ticket_forward","ticket_forward_from_support","ticket_forward_from_supervisor","ticket_forward_from_helpdesk","label_color_priority","badRating","dialogFinishSplitVisible","role_create","role_read","role_update","role_delete","role_id","role_controls","type_control","$","summernote","includes","paddingBottom","paddingLeft","trigger","content","componentRef","ref","el","created_full_name","created_client_name","dangerouslySetInnerHTML","__html","t","item_parent","i_parent","label_color_status","handled_by","time_left_adjusted","time_left","item_forward","i_formard","note","ticket","client_email","Answers","cancelReject","cancelEditReply","editMode","changeRating","newRating","changeReview","replyEdited","acceptReply","emails","email_to_client","email_to","addRating","review","remove","dialogAcceptVisible","item_answer","i_answer","replies","avatar_url_rating","parseFloat","toString","starRatedColor","starDimension","numberOfStars","newrating","required","errorText","reply","AnswerAttachments","new_url","splited_fie_url","extension_file","splited_fie_url_slash","replace","encodeURIComponent","origin","frameborder","aria-label","NoteAttachments","Attachments","clients","FormData","onChangeClientId","index","indexOf","invalidClientId","onChangeTitle","invalidTitle","preventDefault","editor","getElementsByClassName","isProcessing","innerHTML","append","success","lastModified","result","filter","splice","isCustomer","bind","client_code","maxLength","defaultValue","TOP","Autocomplete","fuzzyFilter","multiple","helpdesks","onChangeMaxTimeRespond","max_resolution_time","onChangeHandlerId","onChangeForwardto","saveTimeRespond","respond_at","setTicketHandler","isAuto","response_upload","err_file_upload","helpdesk","implementator","specialists","leftAvatar","j","k","dt_support","dt_supervisor","dt_helpdesk","forwarded_by_user_id","defaultChecked","helpOnFocus","helpText","onAutocomplete","dialogSplitVisible","showToast","ticket_replies","assign","LoadChild","full_name_handler","AllTickets","showDetail","filterString","date_from","date_to","total_data","total_child","response_child","currentPage","displayPerPage","handle","onChangeDateFrom","onChangeDateTo","onChangeCategoryId","onChangePriorityId","onChangeStatusId","resetFilter","toggleLoadChild","loadChild","setSorting","asc","sortArray","array","property","direction","sort","b","comparison","setActivePage","loadDataByPage","tableData","current","offsetTop","isActive","setPageEnd","endPage","Math","ceil","setPageStart","setPageNext","nextPage","setPagePrevious","prevPage","exportXLS","dataToExport","max_respond_at","max_resolution_at","fileName","ws","XLSX","json_to_sheet","wb","Sheets","SheetNames","excelBuffer","bookType","Blob","FileSaver","beforeGetContent","dataToExportPDF","beforeGetPrint","printable","loadData","datatoPDF","isFilter","React","createRef","pages","m","n","onBeforeGetContent","MenuButton","display","displayMode","page","Printable","updated_at","Completed","filter_from_date","filter_to_date","filter_category_id","filter_priority_id","getTotalCompleted","overflowX","Home","filter_client_id","onChangeFormDate","onChangeToDate","Approval","componentDidUpdate","load","afterGetContent","MyHandle","Finished","Forwarded","filter_status_id","forwarded_at","limitBottom","limitTop","files","Queued","DetailAllTicket","initialFetch","getUserRole","dialogDeleteTicketVisible","processDelete","item_child","i_child","doFilter","Statistics","getTotalQueued","total_queue","getTotalApprove","total_approve","getTotalRejected","total_rejected","getAverageRating","avg_rating","average_rating","getPerRating","rate_per_rating","total_finished","getTotalTickets","total_tickets","getTotalSplittedTickets","getTotalHandle","total_handle","getTotalFinish","total_answered","getTotalForwarded","total_forwarded","team_activities","total_available","total_queued","textAlign","toFixed","overflowY","secondaryText","timestamp","threeLines","count_rating","Task","getTotalTicketProcessedSuperadmin","getTotalAvailable","getTotalForward","contain","setTabList","list_contain","announcements","tab_name","pathname","star_date","end_date","tabList","action","tooltip","badge","data-tooltip","border","borderBottom","borderTopRightRadius","borderTopLeftRadius","Help","scrollHelp","getBoundingClientRect","scrollY","scroll","behavior","borderRight","Team","onChangeOvertimeRespond","overtime_respond","onChangeOvertimeResolution","overtime_resolution","total_onprogress","total_respond_time","total_resolution_time","total_overtime_respond","total_overtime_resolution","total_score","collapsed","showFilter","filterOvertime","filterOvertimeRespond","alignContent","colSpan","Report","addLog","changeKey","child","Dashboard","getTicketRunningDate","date","lastDay","getFullYear","getMonth","Onprogress","data_ticket_running","total_teams","team_ranks","total_per_client","total_unrated","total_completed","margin","left","strokeDasharray","dataKey","fill","CCS","Preferences","Profile","ChangePassword","item_attachment_parent","i_attachment_parent","INNER_LEFT","DetailApproval","DetailCompleted","DetailFinished","DetailHandle","DetailRejected","AllTicket","user_id_client","profile","tab","setTab","client_address","Customer","OnProgress","scrollToTabs","time_left_","tabTask","rejected_at","DetailOnProgress","DetailAllCompleted","Logs","user_agent","action_delete","onChangeCLientId","report","task","home","preferences","changepwd","detail","form","formeditticket","detailapproval","detailcompleted","detailfinished","detailhandle","detailrejected","help","customer","staff","detail_all","detail_finished","detail_forwarded","detail_progress","detail_rejected","detail_completed","teams","client_respond_time","loadMore","totalShowed","inboxListItems","module_title","openDrawerLeft","closeDrawer","handleVisibility","notifications","menu","isLeft","closeBtn","fixed","bg_color","Switch","menus","_","Drawer","DrawerTypes","TEMPORARY","onVisibilityChange","navItems","header","Menus","renderRole","roles","sorting","Clients","Status","onChangeLink","onChangeModule","onChangeModuleShort","directory_path","onChangeClientCode","onChangeClientName","onChangeJoinDate","join_date","structures","parent_menu","is_active","role_ids","dt_role_ctrl","obj_role_ctrl","Object","response_role","role_control","onChangeModuleId","onChangeMenu","onChangeIcon","onChangeParentMenu","onChangeIsActive","onChangeRoleControl","r","reload","loadRoleIdValue","i_role","menu_id","contentStyle","inline","controls","LoadRoleControl","type_controls","Modules","Roles","onChangeRole","Users","user_roles","onChangeUserRoles","deleteRole","onChangeEmployeeID","selectUserType","user_type","edit_password","employees","structure","client_phone_number","dataValue","dataLabel","collapse","HelpMenu","is_reply_required","Announcements","start_date","onChangeRoleId","help_id","onChangeStartDate","onChangeEndDate","announcement_id","users","form_help","form_announcements","Employees","nick_name","structure_id","Structure","onChangeLevel","level","onChangeparentId","parent_id","onChangeStructureId","onChangeNickName","LetterIn","loadRole","fetchData","searchDisposition","keyDisposition","date_from_disposition","date_to_disposition","client_id_disposition","total_data_disposition","currentPageDisposition","data_disposition","deleteLetter","setActivePageDisposition","loadDataByPageDisposition","isActiveDisposition","setPageEndDisposition","setPageStartDisposition","setPageNextDisposition","setPagePreviousDisposition","letter_number","letter_date","exportXLSDisposition","beforeGetContentDispoition","dataToExportPDFDisposition","onChangeFromDate","onChangeClientIdDisposition","onChangeFromDateDisposition","onChangeToDateDisposition","filterDisposition","resetFilterDisposition","LetterInAll","columns","col","i_col","charAt","total_reply","LetterInDisposition","isFilterDisposition","dataToExportDisposition","loadROleControl","loadClients","LetterInMenu","FormDisposition","useState","setId","setStuctureId","setModuleId","setEmployees","setToUserId","from_user_id","loadEmployees","useEffect","initialFecth","letter_in_id","disposition","closeFormDisposition","i_sender","rowSpan","accepted_time","i_disposition","minHeight","cellPadding","minWidth","setRoleId","setRole","setLetterNumber","setRoleCreate","setRoleRead","setRoleUpdate","setRoleDelete","setData","setFileUrl","tags","setTags","setReplies","setSender","setDisposition","isFormDisposition","setIsFormDisposition","useRef","loadLetterOut","loadLetterOutFile","loadLetterIn","loadLetterInFile","loadLetterInTag","loadLetterInSender","loadLetterInDisposition","loadLetterOutReplies","prinfFileAttachment","zip","JsZIP","count","url","JsZIPUtils","err","filename","binary","generateAsync","paddingTop","snd","i_snd","i_file","frameBorder","tag","i_tag","item_reply","i_reply","to_division","letter_number_original","tv","i_tv","date_in","sender_name","date_taken","disposition_1","disposition_2","tagInputKey","setTagInputKey","setClients","setFormdata","isNotCustomer","setIsNotCustomer","setClientId","setLetterDate","setAcceptedTime","setMessage","setSubject","tagsInput","setTagsInput","setCreatedBy","loadDataCustomer","loadCLients","loadTags","msg","loadMessage","acceptedTime","toLocaleString","tag_id","changeLetterDate","changeAcceptedTime","findIndex","changeSender","handleLoadFile","fileUrl","formData","startSearching","handleChange","handleKeyDown","addTag","handleAutocomplete","p","_tags","_formData","disabled","inputClassName","locales","deleteTag","autoComplete","clearOnAutocomplete","onFocus","onKeyDown","FormEdit","LetterOut","client_name_non_bpr","LetterOutAll","total_approved","unapproved_letter_in","LetterOutMenu","letter_out_id","reviewed_by_user_id","is_approved","closeFormRejectApproval","successRejectApproval","recipient","letter_in_number","setLetterInNumber","letter_in_subject","setLetterInSubject","letter_created_by","approval","setApproval","isApproved","setIsApproved","setRecipient","isConfirmApproval","setIsConfirmApproval","isRejectApproval","setIsRejectApproval","loadLetterOutTag","loadLetterOutRecipient","loadLetterOutApproval","loadLetterInPrevious","sent_time","recipientInputKey","setRecipientInputKey","setLetterInId","recipientInput","setRecipientInput","handleChangeRecipient","handleKeyDownRecipient","addRecipient1","handleAutocompleteRecipient","_recipients","deleteRecipient","onChangeKey","searchLetterIn","clicked","dispositions","response_replies","response_disposition","full_name_to","searchClient","total_letter_in","total_letter_out_lainnya","total_letter_out","changeClientId","changeStatusId","changeDateFrom","changeDateTo","date_letter","onChangeMethod","method","keys","adjusted","simplifiedMenu","repositionOnScroll","DropdownMenu","RIGHT","approveLetter","LetterInUnApproved","keyIncoming","keyOutgoing","letter_in","letter_out","total_dataOutgoing","currentPageOutgoing","displayPerPageOutgoing","searchIncoming","searchOutgoing","setActivePageIncoming","loadDataByPageIncoming","isActiveIncoming","setPageEndIncoming","setPageStartIncoming","setActivePageOutgoing","loadDataByPageOutgoing","isActiveOutgoing","setPageEndOutgoing","setPageStartOutgoing","pagesOutgoing","mOutgoing","endPageOutgoing","nOutgoing","setPagePreviousIncoming","setPageNextIncoming","setPagePreviousOutgoing","setPageNextOutgoing","tracking","archives","sending_methods","detail_letter_in","detail_letter_out","form_letter_in","form_edit_letter_in","form_letter_out","form_edit_letter_out","detail_archive","detail_tracking","detail_unapprove","themed","ccs","control","sism","landing","session","App","Audio","loggedIn","WebFontLoader","google","families","ReactDOM","render"],"mappings":"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","file":"static/js/main.07f73ad9.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Card, CardTitle, CardText, CardActions, TextField, Grid } from 'react-md'\nimport axios from 'axios'\nimport { Session } from 'bc-react-session'\n\n\nexport default class Login extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username: '',\n            password: '',\n            isLoading: '',\n            isNotification: false,\n            message: ''\n        }\n    }\n\n    onChangeUsername = (evt) => {\n        this.setState({ username: evt })\n    }\n\n    onChangePassword = (evt, s) => {\n        this.setState({ password: evt })\n\n\n    }\n\n    doLogin = async () => {\n        const body = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        try {\n            await axios.post('/login', body)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        Session.start({\n                            payload: response.data.dataLogin,\n                            expiration: 86400000\n                        })\n                        window.location.href = '/'\n                    } else {\n                        this.setState({ message: response.data.message, isNotification: !this.state.isNotification })\n                    }\n                })\n        } catch (e) {\n            console.log('failed login ', e)\n        }\n\n\n    }\n\n    forgotPwd = () => {\n\n    }\n\n    onKeyUpLogin = async (a) => {\n\n        if (a.keyCode === 13) {\n            this.doLogin()\n        }\n\n    }\n\n\n    render() {\n        const Notification = () => (\n            <div className={\"notification is-danger \"}>\n                {this.state.message}\n                <button className=\"delete\" onClick={() => this.setState({ isNotification: false })}></button>\n            </div>\n        )\n        return (\n            <div style={{ backgroundImage: \"url('/images/home.jpg')\", }}>\n                <Grid style={{ opacity: '0.90', background: 'lightblue', height: '100vh' }}>\n\n                    <Card style={{ maxWidth: '400px', marginTop: '12.5%', marginBottom: '12.5%' }} className=\"md-block-centered\">\n                        <CardTitle className=\"is-centered\" title={<div ><h2>Login</h2><h3>Management Information System</h3></div>} subtitle=\"PT MSO Purwokerto\" />\n                        <CardText>\n                            {this.state.isNotification ? Notification() : ''}\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"Username\"\n                                placeholder=\"e.g ahmad OR meisya77 OR admin \"\n                                value={this.state.username}\n                                onChange={this.onChangeUsername}\n                            />\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                onKeyUp={this.onKeyUpLogin}\n                            />\n\n                        </CardText>\n                        <CardActions >\n                            <Button raised primary onClick={this.doLogin}>Login</Button>\n                            <Link to='/forgot-pwd'><Button flat onClick={this.forgotPwd}>Forgot Password</Button></Link>\n                        </CardActions>\n                    </Card>\n                </Grid>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent, Fragment } from 'react'\nimport { Button, Card, CardTitle, CardText, CardActions, TextField, Grid, DialogContainer } from 'react-md'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport default class ForgotPassword extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            username: '',\n            new_password: '',\n            new_password_confirm: '',\n            isLoading: '',\n            isNotification: false,\n            validUsername: false,\n            message: '',\n            dialogVisible: false\n        }\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    onChangeUsername = (evt) => {\n        this.setState({ username: evt })\n    }\n\n    onChangePassword = (evt, s) => {\n        this.setState({ new_password: evt })\n\n    }\n    onChangePasswordConfim = (evt, s) => {\n        this.setState({ new_password_confirm: evt })\n\n    }\n\n    confirmReset = () => {\n        if (this.state.new_password === this.state.new_password_confirm) {\n            this.setState({\n                dialogVisible: true\n            })\n        } else {\n            this.setState({ message: 'Invalid Password Confirmation !', isNotification: true })\n        }\n\n    }\n\n    doCheckUsername = async () => {\n        const body = {\n            username: this.state.username\n        }\n        try {\n            await axios.post(`/api/check_username`, body)\n                .then(responseEmployee => {\n                    if (responseEmployee.data.status == 200) {\n                        if (responseEmployee.data.data.length === 1) {\n                            this.setState({ validUsername: true, _id: responseEmployee.data.data[0]._id })\n                            this.setState({ message: '', isNotification: false })\n                        } else {\n                            this.setState({ message: 'No User Found!', isNotification: true })\n                        }\n\n                    } else {\n                        this.notify('ERROR', 'Wrong Username!')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    doChange = async () => {\n        if (this.state.validUsername) {\n\n\n            if (this.state.new_password === this.state.new_password_confirm) {\n                const body = {\n                    password_hash: this.state.new_password,\n\n                }\n                try {\n                    await axios.put(`/api/edit_profile/${this.state._id}`, body)\n                        .then(async response => {\n                            if (response.data.status === 200) {\n\n\n                                this.setState({\n                                    _id: '',\n                                    validUsername: false,\n                                    dialogVisible: false,\n                                    username: '',\n                                    new_password: '',\n                                    new_password_confirm: ''\n                                })\n                                this.notify('SUCCESS', 'Password Reseted!')\n                            } else {\n                                this.setState({ message: 'Failed Reseting Password!', isNotification: true })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            } else {\n                this.setState({ message: 'Invalid Password Confirmation!', isNotification: true })\n            }\n\n        } else {\n            this.setState({ message: 'No User Found!', isNotification: true })\n        }\n    }\n\n\n\n    render() {\n        const Notification = () => (\n            <div className={\"notification is-danger \"}>\n                {this.state.message}\n                <button className=\"delete\" onClick={() => this.setState({ isNotification: false })}></button>\n            </div>\n        )\n        return (\n            <div style={{ backgroundImage: \"url('/images/home.jpg')\", }}>\n                <Grid style={{ opacity: '0.90', background: 'lightblue', height: '100vh' }}>\n\n                    <Card style={{ maxWidth: '400px', marginTop: '12.5%', marginBottom: '12.5%' }} className=\"md-block-centered\">\n                        <CardTitle title=\"Forgot Password\" subtitle=\"PT MSO Purwokerto\" />\n                        <CardText>\n                            {this.state.isNotification ? Notification() : ''}\n                            {this.state.validUsername ? (\n                                <Fragment>\n                                    <TextField\n                                        id=\"simple-action-dialog-field\"\n                                        label=\"Reset Password\"\n                                        placeholder=\"Reset Password\"\n                                        type=\"password\"\n                                        value={this.state.new_password}\n                                        onChange={this.onChangePassword}\n                                    />\n                                    <TextField\n                                        id=\"simple-action-dialog-field\"\n                                        label=\"Retype Password\"\n                                        placeholder=\"Retype Password\"\n                                        type=\"password\"\n                                        value={this.state.new_password_confirm}\n                                        onChange={this.onChangePasswordConfim}\n                                    />\n                                    <br />\n                                    <Button raised primary onClick={this.confirmReset}>Submit</Button>\n                                </Fragment>\n                            ) : (\n                                    <Fragment>\n                                        <TextField\n                                            id=\"simple-action-dialog-field\"\n                                            label=\"Username\"\n                                            placeholder=\"e.g John Doe\"\n                                            value={this.state.username}\n                                            onChange={this.onChangeUsername}\n                                        />\n                                        <br />\n                                        <Button raised primary onClick={this.doCheckUsername}>Check</Button>\n                                    </Fragment>\n                                )}\n                            <Button flat onClick={() => window.history.go(-1)}>Cancel</Button>\n\n\n                        </CardText>\n\n                    </Card>\n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={[<Button raised primary onClick={this.doChange} >YES</Button>, <Button onClick={() => this.setState({ dialogVisible: false })} >NO</Button>]}\n                    title=\"Confirmation\"\n                >\n                    <p>Are you sure RESET the password?</p>\n                </DialogContainer>\n            </div>\n        )\n    }\n}\n","import React, { PureComponent , Fragment} from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport { Card, CardTitle, CardText, TextField, Toolbar, Button, FontIcon, Cell } from 'react-md'\nimport axios from 'axios'\nimport { ApplicationMenu, Notifications, UserDropdownMenu } from './index'\nimport 'bulma-extensions/bulma-badge/dist/css/bulma-badge.min.css'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Landingpage extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            modules: [],\n            total_notifications: [],\n        }\n    }\n    async componentDidMount() {\n        try {\n            await axios.get(`/api/modules-by-user-id/${payload.userId}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ modules: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/user/${payload.userId}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        response.data.data.map((item, i) => {\n                            this.setState({\n                                avatar_url: item.avatar_url\n                            })\n                        })\n\n                    }\n\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        this.state.modules.map(async (item, i) => {\n            try {\n                await axios.get(`/api/notifications-unread-per-user-navbar-total/${payload.userId}?module_id=${item._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.state.total_notifications[i] = response.data.data[0].total\n                            item.total_notifications = response.data.data[0].total\n                            console.log(item.total_notifications)\n                        }\n\n                    })\n            } catch (error) {\n                console.error('Data Not Loaded ', error)\n            }\n        })\n\n\n    }\n\n    searchModule = async (evt) => {\n        if (evt === '') {\n            this.componentDidMount()\n        } else {\n            try {\n                await axios.get(`/api/api/modules-by-user-id/${payload.userId}?key=${evt}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ modules: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n\n\n    render() {\n\n        const colors = [\n            '#ebbe8a',\n            '#7bede2',\n            '#bff0a3',\n            '#edc2c2',\n            '#9ec8f7',\n            '#be86f7',\n            '#e693d8'\n        ]\n\n\n        const { modules } = this.state\n\n        return (\n            <div style={{\n                backgroundImage: \"url('/images/home.jpg')\"\n            }} >\n                {(() => {\n                    if (payload.userId === null) {\n                        return (<Redirect to={'/'} />)\n                    } else {\n                        return (\n                            <Fragment>\n                                <Toolbar\n\n                                    colored\n\n                                    title=''\n                                    style={{ backgroundColor: '#4aa6ed' }}\n                                    style={{ backgroundColor: '#fff' }}\n                                    actions={[(<ApplicationMenu />), (<Notifications />), (<UserDropdownMenu avatar={this.state.avatar_url} />)]}\n                                />\n                                <Card primary style={{ opacity: '0.85', backgroundColor: 'rgba(52, 52, 52, alpha)', background: 'lightblue', height: '90vh', }} className=\"md-block-centered\">\n\n                                    <div className=\"container\">\n                                        <div className=\"columns is-vcentered\">\n                                            <div className=\"column is-1\" style={{ alignItems: \"center\" }}>\n                                                <figure>\n                                                    <img width=\"100px\" src=\"/LogoMSObaru.png\" />\n                                                </figure>\n                                            </div>\n                                            <div className=\"column is-11\">\n                                                <h4>\n                                                    <b>PT MITRANET SOFTWARE ONLINE</b>\n                                                </h4>\n                                                <p style={{ fontSize: '8pt' }}><b>IT Consultant & Software Develpment</b></p>\n                                                <p style={{ fontSize: '8pt' }}><a target=\"_blank\" href=\"https://www.microbanking-online.com\" >www.microbanking-online.com</a></p>\n                                            </div>\n                                        </div>\n\n\n                                    </div>\n                                    <CardText>\n                                        <Cell size={12} className=\"box \">\n                                            <div className=\"level\">\n                                                <div className=\"level-item\">\n                                                    <div className=\"field\">\n                                                        <div className=\"control\">\n                                                            <TextField\n                                                                leftIcon={<FontIcon>search</FontIcon>}\n                                                                className=\"md-cell md-cell-tablet--8\"\n                                                                placeholder=\"Search ...\"\n                                                                fullWidth\n                                                                style={{ width: '400px' }}\n                                                                onChange={this.searchModule}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </Cell>\n\n                                        <Cell size={12} className=\"box \" style={{ height: 300, padding: 50 }}>\n\n                                            <div className=\"columns  is-multiline\" style={{ justifyContent: 'center', }}>\n                                                {modules.map((item, i) => {\n                                                    if (item.module !== 'Home') return (\n\n                                                        <Link to={item.link} key={i}>\n                                                            <Card style={{\n                                                                width: window.screen.width * 0.18, height: window.screen.height * 0.15,\n                                                                borderRadius: '8px',\n                                                                //border: '1px solid grey',\n                                                                padding: '20px',\n                                                                alignItems: 'center',\n                                                                marginRight: '5px',\n                                                                marginLeft: '5px',\n                                                                marginTop: '5px',\n                                                                backgroundColor: colors[i % colors.length]\n                                                            }}>\n                                                                <div className=\"columns\" style={{}}>\n                                                                    <div className=\"column is-6\">\n                                                                        <p style={{ height: '0.8', fontWeight: 'bold' }}>{item.module}</p> <br />\n                                                                    </div>\n                                                                    <div className=\"column is-6\">\n                                                                        <div className=\"media\">\n                                                                            <div className=\"media-content\" style={{ borderRadius: '10px' }}>\n                                                                                <img className=\"image\" width={'100%'} style={{\n                                                                                    borderRadius: '10px',\n                                                                                    maxWidth: '100%',\n                                                                                    height: 'auto',\n                                                                                    width: 'auto'\n                                                                                }} /*height={window.screen.height * 0.1} */ src={item.icon} />\n                                                                            </div>\n                                                                        </div>\n                                                                        {/* <FontIcon style={{ fontSize: 64, color: colors[i] }}>{item.icon}</FontIcon> */}\n                                                                    </div>\n                                                                </div>\n                                                            </Card>\n                                                        </Link>\n\n                                                    )\n                                                })}\n                                            </div>\n                                        </Cell>\n\n                                    </CardText>\n                                </Card>\n                            </Fragment>\n                        )\n                    }\n                })()}\n\n            </div>\n        )\n    }\n}\n\nconst styleMenu = {\n    mainFeatureWrapper: {\n        marginHorizontal: 20,\n        marginTop: 20,\n        flexDirection: 'row',\n        // flexWrap: 'wrap',\n    },\n    mainFeatureMenuTop: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        width: '100%',\n        marginBottom: 18,\n        flexWrap: 'wrap',\n\n    },\n    mainFeatureMenu: {\n\n        marginHorizontal: 8,\n        marginVertical: 8,\n        borderColor: 'grey',\n        borderWidth: 1,\n        borderRadius: 18,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  AccessibleFakeButton,\n  IconSeparator,\n  DropdownMenuColumn,\n  FontIcon, MenuButtonColumn\n} from 'react-md'\nimport axios from 'axios'\nimport { Session } from 'bc-react-session'\nimport { Component } from 'react';\nconst { payload } = Session.get()\n\n\nasync function userInfo() {\n\n  await axios.get(`/api/user/${payload.userId}`).then(response => {\n    if (response.data.status === 200) {\n      if (response.data.data.length > 0) {\n        return response.data.data[0].avatar_url\n      }\n\n    }\n  })\n}\n\n\nuserInfo()\n\n\nclass SomeCustomMenu extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      log: ''\n    }\n\n  }\n  componentDidMount = () => {\n    const loc = window.location.href\n    this.state.log = loc.split('/')[3] !== '' && loc.split('/')[3] !== undefined && loc.split('/')[3] !== 'setting' ? '/' + loc.split('/')[3] : ''\n\n  }\n\n  render() {\n    const { avatar } = this.props\n    return (\n      <MenuButtonColumn\n        style={{ marginLeft: '5px' }}\n\n        menuItems={[\n\n          {\n            leftIcon: '',\n            primaryText: <Link to={this.state.log + '/setting/profile?user_id=' + payload.userId} style={{ textDecoration: 'none' }} >Profile</Link>\n          }, {\n            leftIcon: '',\n            primaryText: <Link to={this.state.log + '/setting/changepwd?user_id=' + payload.userId} style={{ textDecoration: 'none' }} >Change Password</Link>\n          }, { divider: true }, {\n            primaryText: 'Logout',\n            onClick: (() => {\n              Session.destroy()\n              if (!Session.getSession().isValid) {\n                window.location.href = '/'\n              }\n            })\n          },]}\n        anchor={{\n          x: DropdownMenuColumn.HorizontalAnchors.CENTER,\n          y: DropdownMenuColumn.VerticalAnchors.BOTTOM,\n        }}\n        sameWidth={false}\n        position={DropdownMenuColumn.Positions.TOP_RIGHT}\n        animationPosition=\"below\"\n\n      >\n        <AccessibleFakeButton\n          style={{ marginTop: '10px' }}\n          component={IconSeparator}\n          iconBefore\n          label={<FontIcon></FontIcon>\n          }\n        >\n          <IconSeparator label={'Hi, ' + payload.username}>\n            <Avatar src={avatar !== '' && avatar !== undefined ? avatar : '/avatar/user.png'} alt='user_avatar' role=\"presentation\" />\n          </IconSeparator>\n\n        </AccessibleFakeButton>\n      </MenuButtonColumn>\n    );\n  }\n}\n\nexport default SomeCustomMenu;","/* KebabMenu.jsx */\nimport React, { Component } from 'react'\nimport { MenuButtonColumn,  Avatar, IconSeparator } from 'react-md';\nimport axios from 'axios'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nvar menuItems = []\n\nclass ApplicationMenu extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n\n    }\n  }\n  async componentDidMount() {\n    var dt = []\n    try {\n      await axios.get(`/api/modules-by-user-id/${payload.userId}`).then(response => {\n\n        if (response.data.status === 200) {\n          var obj = {}\n          obj.primaryText =\n            dt = [{ primaryText: <b>Applications</b> }, { primaryText: '', divider: true }]\n\n          response.data.data.map((item, i) => {\n            var obj = {}\n            //obj.leftIcon = <Avatar src={item.icon}></Avatar>\n            obj.primaryText = <IconSeparator iconBefore label={(<a href={item.link} >{item.module}</a>)} style={{marginTop:'20px',marginBottom:'20px'}}>\n              <Avatar src={item.icon}></Avatar>\n            </IconSeparator>\n            dt[i + 2] = obj\n          })\n\n          menuItems = dt\n\n        }\n      })\n    } catch (error) {\n      console.log(error)\n    }\n\n  }\n\n\n  render() {\n    return (\n      <MenuButtonColumn\n        label=\"Applications\"\n        icon\n        menuItems={menuItems}\n        listStyle={{marginBottom:'20px', marginTop:'20px'}}\n        anchor={{\n          x: MenuButtonColumn.HorizontalAnchors.CENTER,\n          y: MenuButtonColumn.VerticalAnchors.BOTTOM,\n        }}\n        position={MenuButtonColumn.Positions.TOP_LEFT}\n        animationPosition=\"below\"\n        listClassName=\"tables__with-menus__kebab-list\">\n        {/* <FontIcon style={{marginTop:'6px',marginRight:'10px'}}>apps</FontIcon> */}\n        <i className=\"fa fa-th\" style={{ marginTop: '6px', marginRight: '10px' }}></i>\n      </MenuButtonColumn>\n    )\n  }\n}\n\nexport default ApplicationMenu;","import React,{Component,Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid, Cell, Card, TextField,Autocomplete, Chip,DatePicker,MenuButtonColumn,FileUpload, Button, SelectField, TimePicker,Toolbar} from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\nimport dateformat from \"dateformat\";\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nimport {Session} from 'bc-react-session'\nconst {payload}  = Session.get()\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            _id :'',\n            client_id:'',\n            avatar_url:'',\n            username:'',\n            employee_id:'',\n            full_name:'',\n            temp_avatar:'',\n            created_by:payload.userId\n        }\n    }\n\n    async componentDidMount() {\n        var parsed = qs.parse(window.location.search)\n        this.setState({_id:parsed.user_id})\n        try{\n            await axios.get(`/api/user/${parsed.user_id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        \n                        this.setState({\n                            _id: item._id,\n                            username:item.username,\n                            employee_id:item.employee_id,\n                            client_id:item.client_id,\n                            avatar_url:item.avatar_url,\n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        if (this.state.employee_id !== null ) {\n            try{\n                await axios.get(`/api/employee/${this.state.employee_id}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            \n                            this.setState({\n                                full_name:item.full_name,\n                                email:item.email,\n                                phone_number:item.phone_number,\n                                \n                            })\n                            return false\n                        })\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else if (this.state.client_id !== null) {\n            try{\n                await axios.get(`/api/client/${this.state.client_id}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            \n                            this.setState({\n                                full_name:item.client_name,\n                                email:item.email,\n                                phone_number:item.phone_number,\n                                address:item.address\n                            })\n                            return false\n                        })\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    onChangeUsername = (evt) => {\n        this.setState({username:evt})\n    }\n\n    onChangeFullName = (evt) => {\n        this.setState({full_name:evt})\n    }\n\n    onChangePhoneNumber = (evt) => {\n        this.setState({phone_number:evt})\n    }\n\n    onChangeEmail = (evt) => {\n        this.setState({email:evt})\n    }\n\n    onChangeAddress = (evt) => {\n        this.setState({address:evt})\n    }\n\n    save  = async() => {\n        const body = {\n            username : this.state.username,\n            avatar_url:this.state.avatar_url\n        }\n\n        const bodyEmployee = {\n            email : this.state.email,\n            phone_number:this.state.phone_number,\n            full_name : this.state.full_name\n        }\n\n        const bodyClient = {\n            email : this.state.email,\n            phone_number:this.state.phone_number,\n            client_name : this.state.full_name,\n            address:this.state.address\n        }\n        \n        \n        body.updated_by = this.state.created_by\n        try {\n            await axios.put(`/api/edit_profile/${this.state._id}`,body)\n            .then( async response => {\n                if (response.data.status === 200 ) {\n                  \n                   \n                    \n                    if (this.state.employee_id !== null ) {\n                        try{\n                            await axios.put(`/api/employee/${this.state.employee_id}`,bodyEmployee)\n                            .then(responseEmployee => {\n                                if(responseEmployee.data.status ==200) {\n                                    this.notify('SUCCESS',response.data.message)\n                                }else {\n                                    this.notify('ERROR','FAILED')\n                                }\n                            })\n                        }catch(e){\n                            console.log(e)\n                        }\n                    }else  if (this.state.client_id !== null ) {\n                        try{\n                            await axios.put(`/api/client/${this.state.client_id}`,bodyClient)\n                            .then(responseEmployee => {\n                                if(responseEmployee.data.status ==200) {\n                                    this.notify('SUCCESS',response.data.message)\n                                }else {\n                                    this.notify('ERROR','FAILED')\n                                }\n                            })\n                        }catch(e){\n                            console.log(e)\n                        }\n                    }\n                    this.componentDidMount()\n\n                }else {\n                    this.notify('ERROR','FAILED')\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        \n        \n    }\n\n    handleLoad = (uploadedFile, uploadedData) => {\n\n        this.setState({\n            avatar_url : (uploadedData),\n            \n        })\n\n        \n    }\n\n    deleteFile = (file) => {\n        \n       this.setState({\n           avatar_url:'',\n           formdata:{}\n       })\n    }\n\n   \n    \n\n    render(){\n        return(\n            <div>\n                 <ToastContainer />\n                <Grid className=\"grid-example\">\n                    <Toolbar \n                        title={<b>Profile</b>}\n                        nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    \n                        <Cell size={12}>\n                            <Card style={{padding:'2.5vw'}}>\n                                <Grid>\n                                <Cell size={9}>\n                                    \n                                    <TextField \n                                        label=\"Username\"\n                                        placeholder=\"Username\"\n                                        value={this.state.username}\n                                        onChange={this.onChangeUsername}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                       \n                                    />\n                                    <TextField \n                                        label=\"Full Name\"\n                                        placeholder=\"Full Name\"\n                                        value={this.state.full_name}\n                                        onChange={this.onChangeFullName}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <TextField \n                                        label=\"Phone Number\"\n                                        placeholder=\"Phone Number\"\n                                        value={this.state.phone_number}\n                                        onChange={this.onChangePhoneNumber}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n\n                                    <TextField \n                                        label=\"Email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.onChangeEmail}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    {this.state.client_id !== null ? (\n                                        <TextField \n                                            rows={3}\n                                            label=\"Address\"\n                                            placeholder=\"Address\"\n                                            value={this.state.address}\n                                            onChange={this.onChangeAddress}\n                                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                        />\n                                    ):''}\n                                     \n                                    <br />\n                                    \n                                    <Button primary raised onClick={this.save} >Update Profile</Button>\n                                    </Cell>\n                                    <Cell size={3}>\n                                        {this.state.avatar_url !== ''  ? (\n                                            <div>\n                                                <img src={this.state.temp_avatar !== '' ? this.state.temp_avatar : this.state.avatar_url} width='100vw' />\n                                                <br />\n                                                <Chip  className=\"state-chip\" label={'remove'} removable    onClick={() =>this.deleteFile(this.state.avatar_url)} />\n                                                <br />\n                                                \n                                            </div>\n                                        ):(\n                                            <div>\n                                                \n                                                <br />\n                                                <FileUpload label=\"Select Avatar\"  id=\"a-file-upload\"\n                                                    accept=\"image/*\" name=\"images\"\n                                                    onLoad={this.handleLoad}\n                                                    style={{backgroundColor:'#359ce6'}}/>\n                                            </div>\n                                            \n                                        )}\n                                    </Cell>\n                                    </Grid>\n                            </Card>\n                        </Cell>\n                      \n                            \n\n                           \n                        \n                   \n                </Grid>\n            </div>\n        )\n    }\n}\n\n","import React,{Component,Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid, Cell, Card, TextField,Autocomplete, Chip,DatePicker,MenuButtonColumn,FileUpload, Button, SelectField, TimePicker,Toolbar} from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\nimport dateformat from \"dateformat\";\nimport $ from 'jquery/dist/jquery.js'\n\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nimport {Session} from 'bc-react-session'\nconst {payload}  = Session.get()\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            _id :'',\n           \n        }\n    }\n\n    async componentDidMount() {\n       \n    }\n\n   \n    \n\n    render(){\n        return(\n            <div>\n                <Grid className=\"grid-example\">\n                    <Toolbar \n                        title={<b>Preferences</b>}\n                        nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    \n                        <Cell size={12}>\n                        <Card style={{padding:'2.5vw'}}>\n                            \n                            <TextField \n                                placeholder=\"Old Password\"\n                                \n                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                            />\n                            <TextField \n                                placeholder=\"New Password\"\n                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                            />\n                            <TextField \n                                placeholder=\"Confirm New Password\"\n                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                            />\n                            <br />\n                            \n                            <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                            <Button primary raised onClick={this.handleSubmit} >Change</Button>\n                            <Button  raised onClick={() => window.history.go(-1)}  >Cancel</Button>\n                        </Card>\n                    </Cell>\n                    \n                </Grid>\n            </div>\n        )\n    }\n}\n\n","import React,{Component,Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid, Cell, Card, TextField,DialogContainer, Button,Toolbar} from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nimport {Session} from 'bc-react-session'\nconst {payload}  = Session.get()\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            _id :'',\n           validOldPassword:false,\n           dialogVisible:false,\n           old_password:'',\n           new_password:'',\n           new_password_confirm :'',\n           created_by : payload.userId\n        }\n    }\n\n    async componentDidMount() {\n        var parsed = qs.parse(window.location.search)\n        this.setState({_id:parsed.user_id})\n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    onChangeOldPassword = (evt) => {\n        this.setState({old_password:evt})\n    }\n    onChangeNewPassword= (evt) => {\n        this.setState({new_password:evt})\n    }\n    onChangeNewPasswordConfim = (evt) => {\n        this.setState({new_password_confirm:evt})\n    }\n\n    confirmReset = () => {\n        if (this.state.new_password === this.state.new_password_confirm) {\n             this.setState({\n                 dialogVisible:true\n             })\n        }else{\n            this.notify('ERROR','Invalid New Password Confirmation !')\n        }\n        \n    }\n\n    \n\n\n    checkPassword = async () => {\n        const body = {\n            password_hash : this.state.old_password\n        }\n        try{\n            await axios.post(`/api/check_password/${this.state._id}`,body)\n            .then(responseEmployee => {\n                if(responseEmployee.data.status ==200) {\n                    if (responseEmployee.data.data.length === 1) {\n                        this.setState({validOldPassword:true})\n                    }else {\n                        this.notify('ERROR','Wrong Old Password!')\n                    }\n                    \n                }else {\n                    this.notify('ERROR','Wrong Old Password!')\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save  = async() => {\n        if (this.state.validOldPassword) {\n            if (this.state.new_password === this.state.new_password_confirm) {\n                const body = {\n                    password_hash : this.state.new_password,\n                    updated_by : this.state.created_by\n                }\n                try {\n                    await axios.put(`/api/edit_profile/${this.state._id}`,body)\n                    .then( async response => {\n                        if (response.data.status === 200 ) {\n                        \n                            this.componentDidMount()\n                            this.setState({\n                                validOldPassword:false,\n                                dialogVisible:false,\n                                old_password:'',\n                                new_password:'',\n                                new_password_confirm:''\n                            })\n                            this.notify('SUCCESS','Password Changed!')\n                        }else {\n                            this.notify('ERROR','Failed Change Password !')\n                        }\n                    })\n                }catch(e){\n                    console.log(e)\n                }\n            }else {\n                this.notify('ERROR','Invalid New Password Confirmation !')\n            }\n        }else {\n            this.notify('ERROR','Invalid Old Password !')\n        }\n    }\n       \n   \n    \n\n    render(){\n        return(\n            <div>\n                <ToastContainer />\n                <Grid className=\"grid-example\">\n                    <Toolbar \n                        title={<b>Change Password</b>}\n                        nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    \n                        <Cell size={12}>\n                        <Card style={{padding:'2.5vw'}}>\n                            \n                            \n                            \n                           \n                            {this.state.validOldPassword ? (\n                                <Fragment>\n                                    <TextField \n                                        label=\"New Password\"\n                                        placeholder=\"New Password\"\n                                        type=\"password\"\n                                        value={this.state.new_password}\n                                        onChange={this.onChangeNewPassword}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <TextField \n                                        type=\"password\"\n                                        label=\"Confirm New Password\"\n                                        placeholder=\"Confirm New Password\"\n                                        value={this.state.new_password_confirm}\n                                        onChange={this.onChangeNewPasswordConfim}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <br />\n                                    <Button primary raised onClick={this.confirmReset} >Change</Button>\n                                </Fragment>\n                            ): (\n                                <Fragment>\n                                    <TextField \n                                        placeholder=\"Old Password\"\n                                        type=\"password\"\n                                        label=\"Old Password\"\n                                        value={this.state.old_password}\n                                        onChange={this.onChangeOldPassword}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <br />\n                                    <Button primary raised onClick={this.checkPassword} >Submit</Button>\n                                </Fragment>\n                            )}\n                           \n                            \n                        </Card>\n                    </Cell>\n                    \n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={[<Button raised primary onClick={this.save} >YES</Button>,<Button onClick={() => this.setState({dialogVisible :false})} >NO</Button>]}\n                    title=\"Confirmation\"\n                    >\n                    <p>Are you sure CHANGE the password?</p>\n                </DialogContainer>\n            </div>\n        )\n    }\n}\n\n","// const socket_address = 'http://localhost:4000'\nconst socket_address = 'http://17.5.16.28:9001'\n\nexport {\n    socket_address\n}","/* KebabMenu.jsx */\nimport React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom'\nimport { MenuButtonColumn, Badge,  Avatar, IconSeparator } from 'react-md';\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport { socket_address } from './socket-address'\nimport dateformat from 'dateformat'\nimport 'bulma-extensions/bulma-badge/dist/css/bulma-badge.min.css'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nvar menuItems = []\n\nclass Notifications extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      total_notif: 0,\n    }\n\n    this.socket = io(socket_address)\n\n    this.socket.on('RECEIVE_NOTIFICATION', (data) => {\n      if (data.to_user_id === payload.userId) {\n        this.componentDidMount()\n      }\n\n    })\n    this.socket.on('READ_NOTIFICATION', (data) => {\n      this.componentDidMount()\n    })\n  }\n  componentDidMount() {\n\n    var loc = window.location.href.split('/')[3] !== '' && window.location.href.split('/')[3] !== null && window.location.href.split('/')[3] !== undefined ? '/' + window.location.href.split('/')[3] : ''\n\n\n    var dt = []\n    var obj = {}\n    obj.primaryText =\n      dt = [{ primaryText: <span><b>Notifications</b> &nbsp; <Link to={loc + '/notifications'}>See All Notifications</Link></span> }, { primaryText: '', divider: true }]\n    axios.get(`/api/notifications-per-user-navbar/${payload.userId}`).then(response => {\n      try {\n        if (response.data.status === 200) {\n          this.setState({ isLoading: false })\n          response.data.data.map((item, i) => {\n            var obj =\n              (<div className=\"container\" style={{ padding: '20px', borderRadius:'8px' }}>\n                <div className=\"media\" >\n                  <div className=\"media-content\">\n                    <div className=\"content\">\n                      <a href={item.link} onClick={() => this.readNotif(item._id)}>\n                        <IconSeparator label={(<div><p><b>{item.full_name !== '' && item.full_name !== null ? item.full_name : item.client_name}</b>&nbsp;{dateformat(item.created_at, 'dd mmm yy, HH:MM')}</p><p>{item.notification}</p></div>)} iconBefore>\n                          <Avatar src={item.avatar_url} alt='user_img' />\n                        </IconSeparator>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              )\n            dt[i + 1] = obj\n\n          })\n\n          menuItems = dt\n\n        } else {\n\n        }\n      } catch (error) {\n        console.log(error)\n      }\n    })\n\n    try {\n      axios.get(`/api/notifications-unread-per-user-navbar-total/${payload.userId}`).then(response => {\n        if (response.data.status === 200) {\n          this.setState({ total_notif: response.data.data[0].total })\n        }\n      })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  readNotif = async (notif_id) => {\n    const body = {\n      is_read: 1\n    }\n    try {\n      axios.put(`/api/notification/${notif_id}`, body)\n        .then(response => {\n          if (response.data.status === 200) {\n\n          }\n        })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  readNavbarNotif = async () => {\n    const body = {\n      is_read: 1\n    }\n    try {\n      axios.put(`/api/read-notification-navbar/${payload.userId}`, body)\n        .then(response => {\n          if (response.data.status === 200) {\n            this.componentDidMount()\n          }\n        })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    const { isLoading } = this.state\n    if (isLoading) {\n      menuItems = ['loading .... ']\n    }\n    return (\n      <Fragment>\n        <MenuButtonColumn label='ddsg' icon menuItems={menuItems} anchor={{\n          x: MenuButtonColumn.HorizontalAnchors.CENTER,\n          y: MenuButtonColumn.VerticalAnchors.BOTTOM,\n        }}\n          position={MenuButtonColumn.Positions.TOP_RIGHT}\n          animationPosition=\"below\"\n          listClassName=\"tables__with-menus__kebab-list\"\n          onMenuBlur={this.readNavbarNotif}\n        >\n          {/* <IconSeparator label={10} invisibleOnZero iconBefore primary badgeId=\"notifications-1\" badgeStyle={{backgroundColor:'lightblue', color:'#000',fontWeight:'bold'}}> */}\n          <i className=\"fa fa-bell has-badge has-badge-large has-badge-warning has-badge-rounded\" style={{ marginTop: '7px' }} data-badge={this.state.total_notif}></i>\n          {/* </IconSeparator> */}\n\n        </MenuButtonColumn>\n\n      </Fragment>\n    )\n  }\n}\n\nexport default Notifications;","import React from 'react';\nimport { Link as RouterLink, Route } from 'react-router-dom';\nimport { FontIcon, ListItem } from 'react-md';\n\nconst NavLink = ({ label, to, exact, icon }) => (\n  <Route path={to} exact={exact}>\n    {({ match }) => {\n      let leftIcon;\n      if (icon) {\n        leftIcon = <FontIcon>{icon}</FontIcon>;\n      }\n\n      return (\n        <ListItem\n          component={RouterLink}\n          active={!!match}\n          to={to}\n          primaryText={label}\n          leftIcon={leftIcon}\n        />\n      );\n    }}\n  </Route>\n);\n\nexport default NavLink;\n\n","/* KebabMenu.jsx */\nimport React,{Component} from 'react';\nimport { MenuButtonColumn, FontIcon,SVGIcon } from 'react-md';\n\n\nconst menuItems = [{\n  leftIcon: <FontIcon primary>create</FontIcon>,\n  primaryText: <span className=\"md-text--primary\">Edit</span>,\n},  { divider: true }, {\n  leftIcon: <FontIcon error >delete</FontIcon>,\n  primaryText: <span className=\"md-text--error\">Delete</span>,\n}];\n\nclass KebabMenu extends Component {\n  constructor(props){\n    super(props)\n\n  }\n  render() {\n    return (\n      <MenuButtonColumn {...this.props} icon menuItems={menuItems} listClassName=\"tables__with-menus__kebab-list\">\n        <FontIcon>more_vert</FontIcon>\n      </MenuButtonColumn>\n    )\n  }\n}\nexport default KebabMenu;","import React, { Component } from 'react'\nimport { Grid, TextField, Button, DialogContainer, ListItem, MenuButton, Snackbar, Cell } from 'react-md'\nimport axios from 'axios'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n\n    setUpdate = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render() {\n        const menuItems = [\n            <ListItem key={1} primaryText='Edit' rightIcon={(<i className='fa fa-pencil' />)} style={{ backgroundColor: 'lightblue' }} onClick={() =>\n                this.setUpdate(this.props.id)} />,\n            <ListItem key={1} primaryText='Delete' rightIcon={(<i className='fa fa-trash' />)} style={{ top: 0, backgroundColor: 'pink', marginTop: '0em' }} onClick={() =>\n                this.setDelete(this.props.id)} />,\n        ]\n        return (\n            <MenuButton id='kebabmenu' icon menuItems={menuItems}\n                listInline centered\n                listStyle={{ textDecoration: 'none', listStyle: 'none', justifyItems: 'center' }}\n\n\n            > more_vert</MenuButton>\n        )\n    }\n}\n\nexport default class Status extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            _id: '',\n            data: [],\n            modules: [],\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            status: '',\n            label_color: '',\n            description: '',\n            module_short_name: '',\n            created_by: payload.userId\n        }\n    }\n    async componentDidMount() {\n\n        try {\n            await axios.get(`/api/ccs-status`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    search = async (val) => {\n        if (val === '') {\n            this.componentDidMount()\n        } else {\n            try {\n                await axios.get(`/api/ccs-status?key=${val}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    showForm = () => {\n\n        this.setState({\n            _id: '', dialogVisible: true, status: '',\n            label_color: '',\n            description: '',\n        })\n    }\n\n    onChangeLabelCOlor = (evt) => {\n        this.setState({ label_color: evt })\n    }\n\n    onChangeStatus = (evt) => {\n        this.setState({ status: evt })\n    }\n\n\n\n    onChangeDescription = (evt) => {\n        this.setState({ description: evt })\n    }\n\n    setUpdate = async (id) => {\n        try {\n            await axios.get(`/api/ccs-status/${id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        response.data.data.map((item) => {\n                            this.setState({\n                                status: item.status,\n                                label_color: item.label_color,\n                                description: item.description,\n                            })\n\n                            return null\n                        })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        this.setState({\n            _id: id,\n            dialogVisible: true\n        })\n    }\n\n    setDelete = (id) => {\n        this.setState({\n            _id: id,\n            dialogDeleteVisible: true\n        })\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/ccs-status/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogDeleteVisible: false,\n                            status: '',\n                            label_color: '',\n                            description: '',\n                        })\n\n                    } else {\n                        this.addToast(response.data.message)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    save = async () => {\n        const body = {\n            status: this.state.status,\n            label_color: this.state.label_color,\n            description: this.state.description,\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/ccs-status`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                status: '',\n                                label_color: '',\n                                description: '',\n\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/ccs-status/${this.state._id}`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                status: '',\n                                label_color: '',\n                                description: '',\n\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' }, { label: 'Status', width: '8%' }, { label: 'Description', width: '35%' }, { label: '', width: '2%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        ;\n        return (\n            <div style={{ marginBottom: '30px' }}>\n                <Button\n                    onClick={this.showForm}\n                    style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '20px',\n                        float: 'bottom'\n                    }} secondary floating iconClassName=\"fa fa-plus\"></Button>\n\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Status\n                    </h2>\n                    <Cell size={4}>\n\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            onChange={this.search}\n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{i + 1}</td>\n                                    <td><p style={{ color: item.label_color }}>{item.status}</p></td>\n                                    <td>{item.description}</td>\n                                    <td><KebabMenu id={item._id}\n                                        setDelete={(id) => this.setDelete(id)}\n                                        setUpdate={(id) => this.setUpdate(id)} />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={actions}\n                    title=\"Manage Status\"\n                >\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Status\"\n                        placeholder=\"Status\"\n                        value={this.state.status}\n                        onChange={this.onChangeStatus}\n                    />\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Label Color\"\n                        placeholder=\"e.g. red or white or #fff\"\n                        value={this.state.label_color}\n                        onChange={this.onChangeLabelCOlor}\n                    />\n                    <TextField\n                        rows={2}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Description\"\n                        placeholder=\"Description\"\n                        value={this.state.description}\n                        onChange={this.onChangeDescription}\n                    />\n                </DialogContainer>\n                <Snackbar\n                    id=\"example-snackbar\"\n                    toasts={this.state.toasts}\n                    autohideTimeout={300}\n                />\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogDeleteVisible}\n                    onHide={() => !this.state.dialogDeleteVisible}\n                    actions={[<Button raised primary onClick={this.delete} >YES</Button>, <Button onClick={() => this.setState({ dialogDeleteVisible: false })} >NO</Button>]}\n                    title=\"Confirmation\"\n                >\n                    <p>Are you sure delete this item?</p>\n                </DialogContainer>\n            </div>\n\n        )\n    }\n}","import Status from './Status'\n\nexport default {\n    routeProps: {\n        path: '/ccs/status',\n        exact: true,\n        component: Status,\n    },\n    name: 'Status',\n}","\nimport axios from 'axios'\nimport {Session} from 'bc-react-session'\nimport publicIp from 'public-ip'\nconst {payload} = Session.get()\nvar from_ip = ''\n\ntry {\n     axios.get(`/api/get-client-ip`)\n    .then(response => {\n       if (response.status === 200) {\n            from_ip = (response.data.IP)\n       }\n        \n    \n    })\n}catch(error){\n    console.log(error)\n}\n\nconst  insertLog   = async (log,module_id) => {\n    const body = {\n        user_id : payload.userId,\n        log : log !== '' ? log : '',\n        app_version : '1.0.0',\n        module_id:  module_id !== '' ? module_id :'',\n        from_ip : from_ip\n    }\n    console.log(body)\n    try {\n        await axios.post(`/api/log`,body)\n        .then(response => {\n            if (response.data.status ===200 ) {\n\n            }\n        })\n    }catch(e){\n        console.log(e)\n    }\n}\n\nexport   {\n    \n    insertLog\n\n   \n}","import React,{Component,useEffect} from 'react'\nimport {Grid,Button,Cell,TextField, Snackbar,ListItem,MenuButton,\n    DialogContainer } from 'react-md'\nimport axios from 'axios'\nimport {insertLog} from '../../../../log/InsertLog'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\nclass KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                <ListItem key={1}  primaryText='Edit' rightIcon ={(<i className='fa fa-pencil' />)} style={{backgroundColor:'lightblue'}} onClick={ () => \n                     this.setUpdate(this.props.id)} /> , \n                <ListItem key={1} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> ,\n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}\n\nexport default class Categories extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            toasts: [],\n            _id:'',\n            weight:'',\n            isLoading:true,\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            category:'',\n            description:'',\n            created_by : payload.userId\n        }\n\n        \n    }\n\n    \n   \n    \n     async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                   \n                    response.data.data.map((item,i) => {\n                        module_id = item._id\n                    })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n         try{\n            await axios.get(`/api/ccs-categories`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    this.setState({data:response.data.data,isLoading:false})\n                   \n                }\n            })\n         }catch(e){\n             console.log(e)\n         }\n        \n        insertLog('Access Categories Page',module_id)\n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n\n\n    \n\n    search = async(val) => {\n        if (val==='') {\n            this.componentDidMount()\n        }else{\n            try{\n                await axios.get(`/api/ccs-categories?key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                })\n             }catch(e){\n                 console.log(e)\n             }\n        }\n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n      };\n\n    onChangeCategory = (val) => {\n        this.setState({category:val})\n    }\n    onChangeWeight= (val) => {\n        this.setState({weight:val})\n    }\n    onChangeDescription = (val) => {\n        this.setState({description:val})\n    }\n\n    setUpdate  = async(id) => {\n        try{\n            await axios.get(`/api/ccs-category/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item) => {\n                        this.setState({\n                            category : item.category,\n                            description:item.description,\n                            weight : item.weight\n                        })\n                        return false\n                    })\n                    \n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        this.setState({\n            _id:id,\n            dialogVisible:true\n        })\n    }\n\n    setDelete = (id) => {\n        this.setState({\n            _id:id,\n            dialogDeleteVisible:true\n        })\n    }\n\n    delete = async () => {\n        this.setState({isLoading:true})\n        try {\n            await axios.delete(`/api/ccs-category/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        isLoading:false,\n                        dialogDeleteVisible:false,\n                        status : '',\n                        label_color : '',\n                        description:'',\n                        _id:'',\n                        weight:'',\n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save = async () => {\n        this.setState({isLoading:true})\n        const body = {\n            weight:this.state.weight,\n            category : this.state.category,\n            description:this.state.description,\n            created_by : this.state.created_by,\n        }\n        if (this.state._id === ''){\n            try{\n                await axios.post(`/api/ccs-category`,body)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            isLoading:false,\n                            dialogVisible:!this.state.dialogVisible,\n                            category:'',\n                            description:'',\n                            weight:'',\n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/ccs-category/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            isLoading:false,\n                            dialogVisible:!this.state.dialogVisible,\n                            category:'',\n                            description:'',\n                            _id:'',\n                            weight:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    showNotif = () => {\n        var notifComponent = (\n            <div className=\"container\" style={{paddingRight:'20px',width:'30vw',height:'15vh',borderRadius:'2vw'}}>\n              <div className=\"media\" >\n                <div className=\"media-content\">\n                  <b>FUll Name</b>\n                  <p>data.notification</p>\n                  </div>\n                  <div className=\"media-right\">\n                    <p>{/*dateformat(data.created_at,'dd mmm hh:MM')*/}</p>\n                  </div>\n              </div>\n            </div>\n              \n          )  \n          \n          this.notify('',notifComponent)\n    }\n\n    showForm = () => {\n        this.setState({_id:'',dialogVisible:true, category:'',\n        description:'',})\n    }\n\n    render() \n    {\n       \n        const columns = [{label:'No',width:'2%'},{label:'Status',width:'8%'},{label:'Description',width:'35%'},{label:'Weight',width:'5%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Processing ....</p>\n                </div>\n            )\n        }else\n        return(\n           \n            <div style={{marginBottom:'30px'}}>\n                <ToastContainer />\n\n                <Button\n                    onClick={this.showForm}\n                    //onClick={this.showNotif}\n                    style={{\n                    position:'fixed',\n                    right:'10px',\n                    bottom:'20px',\n                    float:'bottom'\n                }} secondary floating iconClassName=\"fa fa-plus\"></Button>\n                 <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Categories\n                    </h2>\n                    <Cell size={4}>\n                       \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                        onChange={this.search}\n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td><p style={{color:item.label_color}}>{item.category}</p></td>\n                                    <td>{item.description}</td>\n                                    <td>{item.weight}</td>\n                                    <td><KebabMenu id={item._id} \n                                        setDelete={(id) => this.setDelete(id)}\n                                        setUpdate={(id) => this.setUpdate(id)} />\n                                     </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n            <DialogContainer\n               width='400px'\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogVisible}\n                onHide={() => !this.state.dialogVisible}\n                actions={actions}\n                title=\"Manage Category\"\n                >\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Category\"\n                    placeholder=\"Category\"\n                    value={this.state.category}\n                    onChange={this.onChangeCategory}\n                />\n                <TextField\n                    rows={2}\n                    id=\"simple-action-dialog-field\"\n                    label=\"Description\"\n                    placeholder=\"Description\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                />\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Weight\"\n                    placeholder=\"Weight\"\n                    type=\"number\"\n                    value={this.state.weight}\n                    onChange={this.onChangeWeight}\n                />\n            </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={[<Button raised primary onClick={this.delete} >YES</Button>,<Button onClick={() => this.setState({dialogDeleteVisible :false})} >NO</Button>]}\n                title=\"Confirmation\"\n                >\n                <p>Are you sure delete this item?</p>\n            </DialogContainer>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport Categories from './Categories'\n\nexport default {\n    routeProps: {\n        path: '/ccs/categories',\n        exact: true,\n        component: Categories,\n    },\n    name: 'Categories',\n}","import React, { Component } from 'react'\nimport {\n    Grid, Button, Cell, TextField, Snackbar, ListItem, MenuButton,\n    DialogContainer\n} from 'react-md'\n\nimport axios from 'axios'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n\n    setUpdate = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render() {\n        const menuItems = [\n            <ListItem key={1} primaryText='Edit' rightIcon={(<i className='fa fa-pencil' />)} style={{ backgroundColor: 'lightblue' }} onClick={() =>\n                this.setUpdate(this.props.id)} />,\n            <ListItem key={1} primaryText='Delete' rightIcon={(<i className='fa fa-trash' />)} style={{ top: 0, backgroundColor: 'pink', marginTop: '0em' }} onClick={() =>\n                this.setDelete(this.props.id)} />,\n        ]\n        return (\n            <MenuButton id='kebabmenu' icon menuItems={menuItems}\n                listInline centered\n                listStyle={{ textDecoration: 'none', listStyle: 'none', justifyItems: 'center' }}\n\n\n            > more_vert</MenuButton>\n        )\n    }\n}\n\nexport default class Priorities extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            toasts: [],\n            _id: '',\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            status: '',\n            label_color: '',\n            description: '',\n            created_by: payload.userId\n        }\n    }\n    async componentDidMount() {\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    search = async (val) => {\n       \n        try {\n            await axios.get(`/api/ccs-priorities?key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        \n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    onChangePriority = (val) => {\n        this.setState({ priority: val })\n    }\n\n    onChangeMaxRespondTime = (val) => {\n        this.setState({ max_respond_time: val })\n    }\n\n    onChangeLabelColor = (val) => {\n        this.setState({ label_color: val })\n    }\n\n    setUpdate = async (id) => {\n        try {\n            await axios.get(`/api/ccs-priority/${id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        response.data.data.map((item) => {\n                            this.setState({\n                                priority: item.priority,\n                                label_color: item.label_color,\n                                max_respond_time: item.max_respond_time,\n\n                            })\n\n                            return false\n                        })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        this.setState({\n            _id: id,\n            dialogVisible: true\n        })\n    }\n\n    setDelete = (id) => {\n        this.setState({\n            _id: id,\n            dialogDeleteVisible: true\n        })\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/ccs-priority/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogDeleteVisible: false,\n                            priority: '',\n                            label_color: '',\n                            max_respond_time: '',\n                        })\n\n                    } else {\n                        this.addToast(response.data.message)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    save = async () => {\n        const body = {\n            priority: this.state.priority,\n            label_color: this.state.label_color,\n            max_respond_time: this.state.max_respond_time,\n        }\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/ccs-priority`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                priority: '',\n                                label_color: '',\n                                max_respond_time: '',\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/ccs-priority/${this.state._id}`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                priority: '',\n                                label_color: '',\n                                max_respond_time: '',\n\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    showForm = () => {\n        this.setState({\n            _id: '', dialogVisible: true, priority: '',\n            label_color: '',\n            max_respond_time: ''\n        })\n    }\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' }, { label: 'Priority', width: '8%' }, { label: 'Max Respond Time (days)', width: '35%' }, { label: '', width: '2%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        ;\n        return (\n            <div>\n                <Button\n                    onClick={this.showForm}\n                    style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '20px',\n                        float: 'bottom'\n                    }} secondary floating iconClassName=\"fa fa-plus\"></Button>\n\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Priorities\n                    </h2>\n                    <Cell size={4}>\n\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{i + 1}</td>\n                                    <td><span className={\"tag \" + item.label_color} >{item.priority}</span></td>\n                                    <td>{item.max_respond_time}</td>\n                                    <td><KebabMenu id={item._id}\n                                        setDelete={(id) => this.setDelete(id)}\n                                        setUpdate={(id) => this.setUpdate(id)} />\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                    width={'400px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={actions}\n                    title=\"Manage Priority\"\n                >\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Priority\"\n                        placeholder=\"Priority\"\n                        value={this.state.priority}\n                        onChange={this.onChangePriority}\n                    />\n                    <TextField\n                        type={'number'}\n\n                        id=\"simple-action-dialog-field\"\n                        label=\"Max Respond Time\"\n                        placeholder=\"in days e.g. 1 or 2.5 or 100 etc.\"\n                        value={this.state.max_respond_time}\n                        onChange={this.onChangeMaxRespondTime}\n                    />\n\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Label Color\"\n                        placeholder=\"e.g. is-warning OR is-success OR is-info OR is-danger OR is-primary \"\n                        value={this.state.label_color}\n                        onChange={this.onChangeLabelColor}\n                    />\n                </DialogContainer>\n                <Snackbar\n                    id=\"example-snackbar\"\n                    toasts={this.state.toasts}\n                    autohideTimeout={300}\n                />\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogDeleteVisible}\n                    onHide={() => !this.state.dialogDeleteVisible}\n                    actions={[<Button raised primary onClick={this.delete} >YES</Button>, <Button onClick={() => this.setState({ dialogDeleteVisible: false })} >NO</Button>]}\n                    title=\"Confirmation\"\n                >\n                    <p>Are you sure delete this item?</p>\n                </DialogContainer>\n            </div>\n        )\n    }\n}","import Priorities from './Priorities'\n\nexport default {\n    routeProps: {\n        path: '/ccs/priorities',\n        exact: true,\n        component: Priorities,\n    },\n    name: 'Priorities',\n}","import React,{Component} from 'react'\nimport {Grid,Button, FontIcon} from 'react-md'\n\nexport default class Ticket extends Component {\n    render() \n    {\n        return(\n            <Grid className=\"grid-example\">\n                <h2 className=\"md-cell md-cell--12\">\n                    Ticket\n                </h2>\n                \n                \n            </Grid>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { Link, Redirect } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport $ from 'jquery'\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport StarRatings from 'react-star-ratings'\nimport ReactToPrint from 'react-to-print';\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport { insertLog } from '../../../../log/InsertLog'\n\nimport {\n    Avatar,\n    Grid, Cell, Media,\n    Button, Toolbar, MenuButton, FontIcon, IconSeparator,\n    TextField,\n    DialogContainer,\n    SelectField,\n    Chip,\n} from 'react-md'\n\nimport { FormForward, FormSplit, FormReply, FormEditReply, FormReject, FormSetHandler, FormEditTicket } from './exports'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <MenuButton\n\n                icon\n                className={this.props.className}\n                menuItems={this.props.menuItems}\n            >\n                more_vert\n            </MenuButton>\n        )\n    }\n}\n\n\n\n\nKebabMenu.propTypes = {\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    menuItems: PropTypes.array,\n    setAction: PropTypes.func\n};\n\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            failed_loading_data: false,\n            isEditTicket: false,\n            _id: '',\n            total_split: 0,\n            created_by: '',\n            parent_ticket_id: '',\n            data: [],\n            data_parent: [],\n            child_ticket: [],\n            role: '',\n            attachment: [],\n            answers_attachment: [],\n            modalRating: [],\n            rating: [],\n            reviews: [],\n            answers: [],\n            attachment_parent: [],\n            replyAnswer: false,\n            rejectAnswer: false,\n            formAction: '',\n            title: '',\n            file_url: [],\n            client_id_from_user: '',\n            client_id: '',\n            subject: '',\n            priorities: [],\n            categories: [],\n            ticket_forward: [],\n            ticket_forward_from_support: [],\n            ticket_forward_from_supervisor: [],\n            ticket_forward_from_helpdesk: [],\n            priority_id: '',\n            category_id: '',\n            priority_id_edit: '',\n            category_id_edit: '',\n            module_id: '',\n            status_id: '',\n            category: '',\n            priority: '',\n            email: '',\n            label_color_priority: '',\n            ticket_reply_id: '',\n            badRating: true,\n            dialogFinishSplitVisible: false,\n            dialogSendAsLetterVisible: false,\n            dialogEditCategoryVisible: false,\n            role_create: false,\n            role_read: false,\n            role_update: false,\n            role_delete: false,\n        }\n\n        // this.socket = io('localhost:4000') //localhost\n        this.socket = io(socket_address) //SERVER MSO\n\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        this.setState({ module_id: module_id })\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/ccs/task', role_id: this.props.role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role_controls: response.data.data })\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({\n                                    role_read: true\n                                })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({\n                                    role_create: true\n                                })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({\n                                    role_update: true\n                                })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({\n                                    role_delete: true\n                                })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        console.log('role update ', this.state.role_update)\n\n\n        $('.summernote').summernote({\n            placeholder: 'Add Note',\n            height: '20vh'\n        })\n\n        if (this.props.role.includes('Customer')) {\n\n            try {\n                await axios.get(`/api/user/${payload.userId}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            response.data.data.map((item, i) => {\n                                this.setState({ client_id_from_user: item.client_id })\n                            })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            console.log(this.state.client_id_from_user)\n        }\n\n        const parsed = qs.parse(window.location.search)\n\n        this.setState({ _id: parsed.ticket_id, ticket_reply_id: parsed.ticket_reply_id })\n\n        try {\n            await axios.get(`/api/ccs-ticket/${parsed.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n\n                        this.setState({\n                            data: response.data.data,\n                            parent_ticket_id: (response.data.data[0].parent_ticket_id || '' ),\n                            created_by: response.data.data[0].created_by,\n                            title: response.data.data[0].title,\n                            category_id: response.data.data[0].category_id,\n                            client_id: response.data.data[0].client_id,\n                            email: response.data.data[0].email,\n                            category: response.data.data[0].category,\n                            status_id: response.data.data[0].status_id,\n                            label_color_priority: response.data.data[0].label_color_priority,\n                            priority_id: response.data.data[0].priority_id,\n                            priority: response.data.data[0].priority,\n                            handled_by_user_id: response.data.data[0].handled_by_user_id,\n                            isLoading: false,\n                        })\n\n                    } else  {\n                        console.log('tidak ada tiket')\n                        this.setState({\n                            failed_loading_data: true\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        this.state.data.map(async (item, i) => {\n            try {\n                await axios.get(`/api/ccs-ticket-file-by-ticket-id/${item._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            item.file = response.data.data\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        })\n\n\n        //IF TICKET IS A SPLITED TICKET\n        if (this.state.parent_ticket_id !== '') {\n            try {\n                await axios.get(`/api/ccs-ticket/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data_parent: response.data.data })\n\n                        }\n\n                    })\n                await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ attachment_parent: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            this.state.data_parent.map(async (item, i) => {\n                try {\n                    await axios.get(`/api/ccs-ticket-file-by-ticket-id/${item._id}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                item.file = response.data.data\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            })\n\n        }\n\n        try {\n            await axios.get(`/api/ccs-ticket-by-parent_id/${this.state._id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        this.setState({ child_ticket: response.data.data })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n\n        //TICKET FORWARDING\n        try {\n            await axios.get(`/api/ccs-ticket-forwarding-by-ticket-id/${this.state._id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({\n                            ticket_forward: response.data.data\n                        })\n                        response.data.data.map((item, i) => {\n                            if (item.role.includes('Implementator') || item.role.includes('Support Pelayanan')) {\n                                this.state.ticket_forward_from_support[i] = item\n                            } else if (item.role.includes('Supervisor CCS')) {\n                                this.state.ticket_forward_from_supervisor[i] = item\n                            } else if (item.role.includes('Help Desk')) {\n                                this.state.ticket_forward_from_helpdesk[i] = item\n                            }\n                            return false\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        this.state.ticket_forward.map(async (item, i) => {\n\n            try {\n                await axios.get(`/api/ccs-ticket-forwarding-file-by-ticket-forwarding-id/${item._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            item.file = response.data.data\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        })\n\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n\n    }\n\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n\n\n    closeDetail = () => {\n        this.props.closeDetail()\n    }\n\n    cancelEditTicket = () => {\n        this.setState({ isEditTicket: false })\n        this.componentDidMount()\n    }\n\n    successEditTicket = () => {\n        this.setState({ isEditTicket: false })\n        this.componentDidMount()\n    }\n\n    showForm = (act) => {\n        this.setState({ formAction: act })\n    }\n\n    finishReply = (act) => {\n        this.setState({ formAction: act })\n        this.componentDidMount()\n    }\n    finishReject = (act) => {\n        this.setState({ formAction: act })\n        this.componentDidMount()\n    }\n    finishForward = (act) => {\n        this.setState({ formAction: act })\n        this.componentDidMount()\n    }\n\n    setAction = (act) => {\n        this.setState({ formAction: act })\n    }\n\n    splitAdded = (total_split) => {\n        this.componentDidMount()\n        this.setState({ total_split: total_split })\n\n    }\n\n    sendAsLetterConfirm = () => {\n        this.setState({\n            dialogSendAsLetterVisible: true\n        })\n    }\n\n    sendAsIncomingLetter = async () => {\n        console.log(this.state.created_by)\n        const body = {\n            subject: this.state.title,\n            sender: this.state.client_id,\n            file_url: this.state.file_url,\n            created_by: this.state.data[0].created_by,\n            file_url: this.state.data[0].file,\n            handled_by_user_id: '',\n            letter_date: dateformat(this.state.data[0].created_at, 'yyyy-mm-dd'),\n            accepted_time: dateformat(this.state.data[0].created_at, 'HH:MM:ss'),\n            letter_number: '-',\n            status_id: 1,\n            message: this.state.data[0].description,\n            tags: []\n\n\n        }\n\n        //console.log(body)\n\n        try {\n            await axios.post(`/api/sism-letter_in`, body)\n                .then(async response => {\n                    if (response.data.status === 200) {\n                        this.setState({\n                            dialogSendAsLetterVisible: false\n                        })\n                        try {\n                            await axios.put(`/api/ccs-ticket/${this.state._id}`, { status_id: 9 })\n                                .then(response_ticket => {\n                                    if (response_ticket.data.status === 200) {\n                                        this.notify('SUCCESS', 'Sent as Letter')\n                                        this.componentDidMount()\n                                    } else {\n                                        this.notify('ERROR', 'Failed inserting data')\n                                    }\n\n                                })\n                        } catch (err) {\n                            console.og(err)\n                        }\n\n\n                    } else {\n                        this.notify('ERROR', 'Failed inserting data')\n                    }\n                })\n        } catch (e) {\n            this.notify('ERROR', e)\n        }\n\n\n\n    }\n\n    updateCategory = (evt) => {\n        this.setState({ category_id_edit: evt })\n    }\n\n    updatePriority = (evt) => {\n        this.setState({ priority_id_edit: evt })\n    }\n\n    updatePriority_Category = async () => {\n        this.state.priority_id !== '' && this.state.priority_id_edit === '' ? this.state.priority_id_edit  =  this.state.priority_id :  this.state.priority_id_edit  = this.state.priority_id_edit\n        this.state.category_id !== '' && this.state.category_id_edit === '' ? this.state.category_id_edit  =  this.state.category_id :  this.state.category_id_edit  = this.state.category_id_edit\n        \n       \n        if (this.state.category_id_edit === '' || this.state.priority_id_edit === '') {\n            this.setState({\n                dialogEditCategoryVisible: false\n            })\n            alert('Please complete the form.')\n           \n        } else {\n            const body = {\n                updated_by: this.state.handled_by_user_id !== '' ? this.state.handled_by_user_id : payload.userId,\n                category_id: this.state.category_id_edit,\n                priority_id: this.state.priority_id_edit\n            }\n\n\n            try {\n                await axios.put(`/api/ccs-ticket/${this.state._id}`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.componentDidMount()\n                            this.notify('SUCCESS', response.data.message)\n                            insertLog('Update Ticket ID ' + this.state._id, this.state.module_id)\n\n                            this.setState({\n                                dialogEditCategoryVisible: false,\n                                category_id_edit: '',\n                                priority_id_edit: ''\n                            })\n                        } else {\n                            this.notify('ERROR', 'Failed processing data')\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } \n\n    }\n\n\n\n    rejectReply = async (ticket_reply_id, created_by) => {\n        const body = {\n            status_id: 7,\n            ticket_id: this.state._id,\n            created_by: created_by\n\n        }\n        try {\n            await axios.put(`/api/ccs-ticket-reply-reject/${ticket_reply_id}`, body)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.componentDidMount()\n                        this.notify('SUCCESS', 'You Rejected!')\n                        // window.location.assign('/ccs/task')\n                        insertLog('Reject Ticket  Reply ID ' + ticket_reply_id, this.state.module_id)\n\n                    } else {\n                        this.notify('ERROR', 'Failed processing data')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n            this.notify('ERROR', 'Failed processing data')\n        }\n        this.setState({ replyAnswer: true })\n    }\n\n\n\n    saveTimeResolution = async () => {\n\n        const body = {\n            ticket_id: this.props.ticket_id,\n            handled_by_user_id: payload.userId,\n            resolution_at: dateformat(new Date(), 'yyyy-mm-dd HH:MM:ss')\n        }\n        try {\n            await axios.post(`/api/ccs-ticket-time-resolution`, body)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        console.log('time resolution saved')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    finishSplit = async () => {\n        const body = {\n            status_id: 2,\n            updated_by: this.state.created_by,\n        }\n        try {\n            await axios.put(`/api/ccs-ticket-finish-split/${this.state._id}`, body)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.componentDidMount()\n                        this.setState({\n                            formAction: ''\n                        })\n                        this.notify('SUCCESS', 'Ticket Splitted!')\n                        insertLog('Finish Split Ticket   ID ' + this.state._id, this.state.module_id)\n\n                    } else {\n                        this.notify('ERROR', 'Failed processing data')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n            this.notify('ERROR', 'Failed processing data')\n        }\n    }\n\n\n\n    showModalAttachment = (attach_id) => {\n        var modalAttachment = document.getElementById(attach_id)\n        modalAttachment.classList.toggle('is-active')\n    }\n\n    editHandler = () => {\n\n        this.state.formAction =  'forward' \n        window.scrollTo(0, 1500)\n    }\n\n\n\n    render() {\n        var menuItems = []\n        if (this.props.role.includes('Supervisor CCS')) {\n            menuItems = [\n                {\n                    primaryText: 'Send as Incoming Letter',\n                    onClick: (() => {\n                        alert('Send as Incoming Letter')\n                    })\n                },\n                {\n                    primaryText: 'Split',\n                    onClick: (() => {\n                        this.setAction('split')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Distribute',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                },\n\n            ]\n        } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan')) {\n            if (this.state.handled_by_user_id === payload.userId) {\n                menuItems = [\n                    {\n                        primaryText: 'Reply',\n                        onClick: (() => {\n                            this.setAction('reply')\n                        })\n                    }\n                    ,\n                    {\n                        primaryText: 'Forward',\n                        onClick: (() => {\n                            this.setAction('forward')\n                        })\n                    }\n                ]\n            }\n        } else if (this.props.role.includes('Specialist')) {\n            if (this.state.handled_by_user_id === payload.userId) {\n                menuItems = [\n                    {\n                        primaryText: 'Reply',\n                        onClick: (() => {\n                            this.setAction('reply')\n                        })\n                    }\n                    ,\n                    {\n                        primaryText: 'Send Back to',\n                        onClick: (() => {\n                            this.setAction('forward')\n                        })\n                    }\n                ]\n            }\n        }\n        if (this.state.failed_loading_data) {\n            return (\n                <div className=\"notification\">\n                    <p>FAILED LOADING DATA .... </p>\n                </div>\n            )\n        }\n        else if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Loading .... </p>\n                </div>\n            )\n        } else\n            return (\n                <div style={{ paddingBottom: '15vh', }} >\n                    <ToastContainer />\n                    <Grid>\n                        <Cell size={12}>\n                            <Toolbar\n                                title={<b>{\"Detail #\" + this.state._id}</b>}\n                                nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a>}\n\n                            />\n                        </Cell>\n\n                    </Grid>\n                    <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                        <Cell size={11}></Cell>\n                        <Cell size={1}>\n                            <ReactToPrint\n                                trigger={() => <button className=\"button is-small is-primary\">\n                                    <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                                </button>}\n                                content={() => this.componentRef}\n                            />\n\n                        </Cell>\n                    </Grid>\n                    <Grid style={{ padding: '30px', }} ref={el => (this.componentRef = el)} >\n\n                        {\n                            this.state.data.map((item, i) => (\n                                <Fragment>\n                                    <style>\n                                        {` .detail-ticket-id-print-only {\n                                                display : none;\n                                            }\n                                            .pagebreak {\n                                                display : none;\n                                            }\n                                            @media print {\n                                                .detail-ticket-id-print-only {\n                                                    display : block;\n                                                }\n                                                .pagebreak {\n                                                    page-break-before: always;\n                                                }\n                                            }\n                                        `}\n                                    </style>\n                                    <Cell size={12} className=\"box\" style={{ borderRadius: '10px' }} >\n                                        <div key={i}>\n                                            <div className=\"detail-ticket-id-print-only\">\n\n                                                <h3>Detail #{item._id}</h3>\n                                            </div>\n                                            <div className=\"media\">\n\n                                                <div className=\"media-left\">\n                                                    <Avatar src={item.avatar_url !== null ? item.avatar_url : '/avatar/user.png'} />\n                                                </div>\n                                                <div className=\"media-content\">\n                                                    <div className=\"columns\">\n                                                        <div className=\"column is-11\">\n                                                            <h4>{item.title}</h4>\n                                                            <p style={{ fontSize: '8pt' }}>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                            <p><b>Added by :</b> &nbsp; <i>{item.created_full_name !== null ? item.created_full_name : item.created_client_name}</i></p>\n                                                            <p><b>BPR/Client :</b> &nbsp;<i>{item.client_name}</i></p>\n\n                                                        </div>\n                                                        <div className=\"column is-1\">\n                                                            {this.state.role_update || (item.created_by === payload.userId && item.status_id === 1 ) && !this.state.isEditTicket ? (\n                                                                <button className=\"button is-small is-info\" onClick={() => this.setState({\n                                                                    isEditTicket: true\n                                                                })}>\n                                                                    <i className=\"fa fa-pencil\"></i>&nbsp; Edit\n                                                                </button>\n                                                            ) : ''}\n\n                                                        </div>\n                                                    </div>\n                                                    {!this.state.isEditTicket ? (\n                                                        <div className=\"notification is-light\">\n                                                            <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                        </div>\n                                                    ) : (\n                                                            <FormEditTicket ticket_id={item._id} description={<div dangerouslySetInnerHTML={{ __html: item.description }} />} cancelEditTicket={(t) => this.cancelEditTicket(t)} successEditTicket={this.successEditTicket} />\n                                                        )}\n\n                                                    {this.state.data_parent.length > 0 ? (\n                                                        <Fragment>\n                                                            <p><b>Origin Ticket :</b> </p>\n                                                            <article className=\"message is-light ticket-detail is-small\">\n                                                                <div className=\"message-body\">\n                                                                    {\n                                                                        this.state.data_parent.map((item_parent, i_parent) => (\n                                                                            <div key={i_parent}>\n                                                                                <div className=\"media\">\n                                                                                    <div className=\"media-left\">\n                                                                                        <Avatar src={item_parent.avatar_url !== null ? item_parent.avatar_url : '/avatar/user.png'} />\n                                                                                    </div>\n                                                                                    <div className=\"media-content\">\n                                                                                        <h4>{item_parent.title}</h4>\n                                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_parent.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                                        <p><b>Added by :</b> &nbsp; <i>{item_parent.created_full_name !== null ? item_parent.created_full_name : item_parent.created_client_name}</i></p>\n                                                                                        <p><b>BPR/Client :</b> &nbsp;<i>{item_parent.client_name}</i></p>\n\n                                                                                        <div className=\"notification is-light\">\n                                                                                            <div dangerouslySetInnerHTML={{ __html: item_parent.description }} />\n                                                                                        </div>\n                                                                                        {/* <section className=\"container md-cell md-cell--12\"> */}\n\n                                                                                        {item_parent.file !== undefined && item_parent.file.length > 0 ? (\n                                                                                            <Attachments file={item_parent.file} />\n                                                                                        ) : ''}\n\n                                                                                        {/* </section> */}\n\n                                                                                    </div>\n\n                                                                                </div>\n                                                                            </div>\n                                                                        ))\n                                                                    }\n\n                                                                </div>\n                                                            </article>\n                                                        </Fragment>\n\n                                                    ) : ''}\n                                                    <br />\n\n                                                    {item.file !== undefined && item.file.length > 0 ? (\n                                                        <Attachments file={item.file} />\n                                                    ) : ''}\n\n                                                    <br />\n\n                                                    {\n                                                        (() => {\n                                                            if ((this.state.role_update || (this.props.role.includes('Help Desk') && item.handled_by_user_id === payload.userId && item.status_id === 4)) && item.status_id !== 8) {\n\n                                                                return (\n\n                                                                    <Fragment>\n                                                                        <p> <b>Category & Priority</b> </p>\n                                                                        <SelectField placeholder='Update Category' sameWidth\n                                                                            className=\"md-cell md-cell--4-tablet md-cell--4\"\n                                                                            menuItems={this.state.categories}\n                                                                            value={this.state.category_id}\n                                                                            onChange={this.updateCategory} />\n                                                                        <SelectField placeholder='Update Priority'\n                                                                            className=\"md-cell md-cell--4-tablet md-cell--4\"\n                                                                            value={this.state.priority_id}\n                                                                            sameWidth menuItems={this.state.priorities}\n                                                                            onChange={this.updatePriority} />\n                                                                        <br />\n\n                                                                        <Button raised primary onClick={() => this.setState({ dialogEditCategoryVisible: true })}>UPDATE</Button>\n                                                                        <DialogContainer\n                                                                            width={'600px'}\n                                                                            id=\"simple-action-dialog\"\n                                                                            visible={this.state.dialogEditCategoryVisible}\n                                                                            onHide={() => !this.state.dialogEditCategoryVisible}\n                                                                            actions={[<Button raised primary onClick={this.updatePriority_Category} >YES</Button>, <Button onClick={() => this.setState({ dialogEditCategoryVisible: false })} >NO</Button>]}\n                                                                            title=\"Confirmation\"\n                                                                        >\n                                                                            <p>Are you sure to proceed?</p>\n                                                                        </DialogContainer>\n\n                                                                    </Fragment>\n\n                                                                )\n                                                            }\n                                                            else {\n                                                                return (\n                                                                    <Fragment>\n                                                                        <p>&nbsp;</p>\n                                                                        {this.state.category_id !== '' ? (\n                                                                            <div>\n                                                                                <b>Category</b>  : <p>{this.state.category}</p>\n                                                                            </div>\n                                                                        ) : ''}\n                                                                        {this.state.priority_id !== '' ? (\n                                                                            <div>\n                                                                                <b>Priority</b>  :<p><span className={'tag ' + this.state.label_color_priority}><b>{this.state.priority}</b></span></p>\n                                                                            </div>\n                                                                        ) : ''}\n                                                                    </Fragment>\n                                                                )\n                                                            }\n\n\n\n                                                        })()\n\n                                                    }\n\n                                                    {\n                                                        item.status_id !== '' ? (\n                                                            <div style={{ marginTop: '10px', marginBottom: '10px' }}>\n                                                                <b>Status</b>  :\n\n                                                                <p><b style={{ color: item.label_color_status }}>{item.status}</b></p>\n\n                                                            </div>\n                                                        ) : ''\n                                                    }\n\n                                                    {(() => {\n                                                        if (this.state.role_update && item.status_id !== 8) {\n                                                            \n                                                                return (item.handled_by !== '' && item.handled_by !== null ? (\n                                                                    <div>\n                                                                        <b>Handled By</b>  : <p><button className=\"button is-small\" onClick={() => { this.setState({formAction :  'forward'}) ; window.scrollTo(0, 1500) } } > {item.handled_by} &nbsp; |  &nbsp; <i className=\"fa fa-pencil\"></i> &nbsp; Edit</button></p>\n                                                                    </div>\n                                                                ) : '')\n\n                                                        } else {\n                                                            return (item.handled_by !== '' && item.handled_by !== null ? (\n                                                                <div>\n                                                                    <b>Handled By</b>  : <p>{item.handled_by}</p>\n                                                                </div>\n                                                            ) : '')\n                                                        }\n                                                       \n\n                                                    })()}\n\n                                                    <Fragment>\n\n\n\n                                                    </Fragment>\n\n                                                    {item.status_id > 3 && item.status_id < 8 ? (\n                                                        <Fragment>\n                                                            <b>Time Left : </b> <p> {item.time_left_adjusted > 0 ? item.time_left_adjusted : item.time_left} days left </p>\n                                                        </Fragment>\n                                                    ) : ''}\n\n                                                    {\n                                                        !this.props.role.includes('Customer') ? (\n                                                            //  this.state.ticket_forward.length > 1 ? (\n\n                                                            <Fragment>\n                                                                <div className=\"pagebreak\"> </div>\n                                                                <p><b>Notes : </b></p>\n                                                                {\n                                                                    this.state.ticket_forward.map((item_forward, i_formard) =>\n                                                                        item_forward.note !== '' ? (\n                                                                            <Fragment>\n                                                                                <div className=\"notification\" style={{ borderRadius: '10px' }}>\n                                                                                    <div className=\"media columns\">\n                                                                                        <div className=\"media-left\">\n                                                                                            <Avatar src={item_forward.avatar_url !== '' ? item_forward.avatar_url : '/avatar/user.png'} />\n                                                                                        </div>\n                                                                                        <div className=\"media-content\">\n                                                                                            <Link to={`/ccs/staff?id=${item_forward.created_by}`} ><b>{item_forward.full_name}</b></Link>\n                                                                                            <p style={{ fontSize: '8pt' }}>{dateformat(item_forward.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                                            <div dangerouslySetInnerHTML={{ __html: item_forward.note }} />\n                                                                                            {item_forward.file !== undefined && item_forward.file.length > 0 ? (\n                                                                                                <NoteAttachments file={item_forward.file} />\n                                                                                            ) : ''}\n                                                                                        </div>\n                                                                                    </div>\n\n                                                                                </div>\n                                                                            </Fragment>\n\n\n                                                                        ) : ''\n                                                                    )\n                                                                }\n                                                            </Fragment>\n\n                                                            // ):''\n                                                        ) : ''\n                                                    }\n\n\n\n                                                </div>\n                                                \n                                            </div>\n\n                                        </div>\n                                    </Cell>\n\n                                    <div className=\"pagebreak\"> </div>\n\n                                    <Cell size={12}>\n                                        {(() => {\n                                            if (item.status_id === 5 || item.status_id === 7 || item.status_id === 8) {\n                                                return (\n                                                    <Answers ticket_id={item._id} role={this.props.role} ticket={this.state.data} client_email={this.state.email} />\n                                                )\n                                            }\n                                        })()}\n\n\n                                    </Cell>\n                                </Fragment>\n                            ))\n                        }\n                    </Grid>\n\n\n                    <Grid>\n                        <Cell size={12}>\n                            <section className=\" md-cell md-cell--12\" >\n                                {(() => {\n                                    if (this.props.role.includes('Supervisor CCS')) {\n                                        switch (this.state.status_id) {\n                                            case 1:\n                                                return (\n                                                    <Fragment>\n                                                        {this.state.child_ticket.length <= 0 ? (\n                                                            <Fragment>\n\n\n                                                                {this.state.parent_ticket_id === '' ? (\n                                                                    this.state.formAction !== 'split' && this.state.formAction !== 'forward' ? (\n                                                                        <Fragment>\n                                                                            <button className=\"button \" onClick={this.sendAsLetterConfirm}>\n                                                                                <FontIcon>mail</FontIcon>&nbsp;Send as Incoming Letter\n                                                                </button>&nbsp;\n                                                                            <button className=\"button  \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                                                                <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                                                                </button> &nbsp;\n                                                                            <button className=\"button  \" onClick={() => this.setState({ formAction: 'split' })}>\n                                                                                <FontIcon>create</FontIcon>&nbsp;Split\n                                                                </button>\n                                                                        </Fragment>\n                                                                    ) : ''\n                                                                ) : (\n                                                                        this.state.formAction !== 'forward' ? (\n                                                                            <button className=\"button  \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                                                                <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                                                                            </button>\n                                                                        ) : ''\n                                                                    )}\n                                                            </Fragment>\n                                                        ) : (\n                                                                <Fragment>\n                                                                    {this.state.parent_ticket_id === '' ? (\n\n                                                                        <Fragment>\n                                                                            {this.state.formAction !== 'split' ? (\n                                                                                <button className=\"button  \" onClick={() => this.setState({ formAction: 'split' })}>\n                                                                                    <FontIcon>create</FontIcon>&nbsp;Split\n                                                                                </button>\n                                                                            ) : ''}\n                                                                &nbsp;\n                                                                            {  this.state.child_ticket.length > 0 ? (\n                                                                                <button className=\"button\" onClick={() => this.setState({ dialogFinishSplitVisible: true })}>\n                                                                                    <i className=\"fa fa-check\"></i>&nbsp; Finish Split\n                                                                                </button>\n                                                                            ) : ''}\n                                                                        </Fragment>\n\n                                                                    ) : ''}\n                                                                    {this.state.child_ticket.length > 0 ? (\n                                                                        <div className=\"is-vcentered\">\n                                                                            <br />\n                                                                            <span>\n                                                                                <b>Total Split : </b>\n\n                                                                                <b>{this.state.child_ticket.length}</b>&nbsp;\n                                                                        <b>{this.state.child_ticket.length > 1 ? ' Splits' : ' Split'}</b>\n\n                                                                    &nbsp;\n                                                                    <Link to={'/ccs/task?tab_name=available-ticket'} className=\"button is-small is-light \">See Splitted</Link>\n                                                                            </span>\n                                                                        </div>\n                                                                    ) : ''\n                                                                    }\n                                                                </Fragment>\n                                                            )}\n\n\n                                                        <DialogContainer\n                                                            width={'600px'}\n                                                            id=\"simple-action-dialog\"\n                                                            visible={this.state.dialogFinishSplitVisible}\n                                                            onHide={() => !this.state.dialogFinishSplitVisible}\n                                                            actions={[<Button raised primary onClick={this.finishSplit} >YES</Button>, <Button onClick={() => this.setState({ dialogFinishSplitVisible: false })} >NO</Button>]}\n                                                            title=\"Confirmation\"\n                                                        >\n                                                            <p>Are you sure to finish?</p>\n                                                        </DialogContainer>\n\n                                                        <DialogContainer\n                                                            width={'600px'}\n                                                            id=\"simple-action-dialog\"\n                                                            visible={this.state.dialogSendAsLetterVisible}\n                                                            onHide={() => !this.state.dialogSendAsLetterVisible}\n                                                            actions={[<Button raised primary onClick={this.sendAsIncomingLetter} >YES</Button>, <Button onClick={() => this.setState({ dialogSendAsLetterVisible: false })} >NO</Button>]}\n                                                            title=\"Confirmation\"\n                                                        >\n                                                            <p>Are you sure to send as Incoming Letter?</p>\n                                                        </DialogContainer>\n\n\n\n                                                    </Fragment>\n                                                )\n                                            case 3:\n                                                return (\n                                                    this.state.formAction !== 'forward' ? (\n                                                        <Fragment>\n                                                            <button className=\"button  \" onClick={() => this.setState({ formAction: 'set_handler' })}>\n                                                                <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                                                    </button> &nbsp;\n                                                        </Fragment>\n                                                    ) : ''\n                                                )\n                                            default:\n                                                return (\n                                                    ''\n                                                )\n                                        }\n                                    } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan')) {\n\n                                        if (this.state.handled_by_user_id === payload.userId && this.state.category_id !== '' && this.state.priority_id !== '' && this.state.status_id === 4) {\n                                            return (\n                                                this.state.formAction !== 'reply' && this.state.formAction !== 'forward' ? (\n                                                    <div>\n                                                        <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                                            <FontIcon>reply</FontIcon>&nbsp;Finish\n                                            </button>\n                                            &nbsp;\n                                                        <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                                            <FontIcon>screen_share</FontIcon>&nbsp;Forward\n                                            </button>\n                                                    </div>\n                                                ) : ''\n                                            )\n                                        } else if (this.state.status_id === 7) {\n                                            return (\n                                                this.state.formAction !== 'reply' ? (\n                                                    <div>\n                                                        <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                                            <FontIcon>reply</FontIcon>&nbsp;Finish\n                                            </button>\n                                            &nbsp;\n                                                    </div>\n                                                ) : ''\n                                            )\n                                        }\n                                    } else if (this.props.role.includes('Customer')) {\n                                        if ((this.state.created_by === payload.userId || this.state.client_id === this.state.client_id_from_user) && this.state.status_id === 8) {\n                                            return (\n                                                <Link to={`/ccs/ticket/form`}>\n                                                    <button className=\"button   \" >\n                                                        <FontIcon>create</FontIcon>&nbsp;<b>Write New Request</b>\n                                                    </button>\n                                                </Link>\n                                            )\n                                        }\n                                    } else if (this.props.role.includes('Specialist')) {\n                                        if (this.state.handled_by_user_id === payload.userId) {\n                                            return (\n                                                this.state.status_id === 4 && this.state.formAction !== 'reply' && this.state.formAction !== 'forward' ? (\n                                                    <div >\n\n                                                        <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                                            <FontIcon>reply</FontIcon>&nbsp;Finish\n                                            </button>\n                                            &nbsp;\n\n                                                        <button className=\"button  \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                                            <FontIcon>forward</FontIcon>&nbsp;Send Back to\n                                            </button>\n\n\n                                                    </div>\n                                                ) : this.state.status_id === 7 && this.state.formAction !== 'reply' && this.state.formAction !== 'forward' ?\n                                                        (\n                                                            <div >\n                                                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                                                    <FontIcon>reply</FontIcon>&nbsp;Finish\n                                            </button>\n                                                            </div>\n                                                        ) : ''\n                                            )\n                                        }\n                                    }\n\n                                })()}\n\n                                {(() => {\n                                    switch (this.state.formAction) {\n                                        case 'split': return (<FormSplit role={this.props.role} ticket_id={this.state._id} splitAdded={(total_split) => this.splitAdded(total_split)} showForm={(act) => this.showForm(act)} finishSplit={this.finishSplit} />)\n                                        case 'forward': return (<FormForward role={this.props.role} ticket_id={this.state._id} finishForward={(act) => this.finishForward(act)} showForm={(act) => this.showForm(act)} />)\n                                        case 'set_handler': return (<FormSetHandler role={this.props.role} ticket_id={this.state._id} showForm={(act) => this.showForm(act)} />)\n                                        case 'reply': return (<FormReply role={this.props.role} ticket_id={this.state._id} finishReply={(act) => this.finishReply(act)} showForm={(act) => this.showForm(act)} />)\n                                        case 'reject': return (<FormReject role={this.props.role} ticket_id={this.state._id} finishReject={(act) => this.finishReject(act)} showForm={(act) => this.showForm(act)} />)\n                                        default: return ''\n                                    }\n                                })()}\n                            </section>\n                        </Cell>\n                    </Grid>\n\n\n                </div>\n            )\n    }\n}\n\n\nclass Answers extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            ticket: this.props.ticket,\n            module_id: '',\n            rating: [],\n            reviews: [],\n            isLoading: true,\n            rejectAnswer: false,\n            editMode: false,\n            answers: [],\n            modalRating: [],\n            dialogAcceptVisible: false\n        }\n        this.socket = io(socket_address) //SERVER MSO\n\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n    }\n\n    async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        this.setState({ module_id: module_id })\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-reply-by-ticket-id/${this.props.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        response.data.data.map((item, i) => {\n                            //  this.state.rating[item._id] = 0\n                            this.state.modalRating[item._id] = true\n                            return false\n                        })\n                        this.setState({ answers: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        this.state.answers.map(async (item, i) => {\n            try {\n                await axios.get(`/api/ccs-ticket-reply-file-by-ticket-id/${item._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            item.file = response.data.data\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        })\n\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    cancelReject = () => {\n        this.setState({ rejectAnswer: false })\n        this.componentDidMount()\n    }\n\n    cancelEditReply = () => {\n        this.setState({ editMode: false })\n    }\n\n    changeRating = (newRating, ticket_reply_id) => {\n        const rating = this.state.rating\n\n        rating[ticket_reply_id] = newRating\n        this.setState({ rating: rating })\n        console.log(this.state.rating[ticket_reply_id])\n    }\n\n    changeReview = (newRating, ticket_reply_id) => {\n        this.state.reviews[ticket_reply_id] = newRating\n    }\n\n    replyEdited = () => {\n        this.setState({ editMode: false })\n        this.componentDidMount()\n    }\n\n    acceptReply = async (ticket_reply_id, created_by) => {\n        const body = {\n            module_id: this.state.module_id,\n            status_id: 8,\n            ticket_id: this.props.ticket_id,\n            created_by: created_by,\n            updated_by: payload.userId\n        }\n        try {\n            await axios.put(`/api/ccs-ticket-reply-accept/${ticket_reply_id}`, body)\n                .then(async response => {\n                    if (response.data.status === 200) {\n\n                        // this.componentDidMount()\n                        this.notify('SUCCESS', 'You Accepted!')\n\n                        insertLog('Accept Ticket  Reply ID ' + ticket_reply_id, this.state.module_id)\n\n                        if (this.props.client_email.includes(',')) {\n                            var emails = this.props.client_email.split(',')\n                            for (var i = 0; i < emails.length; i++) {\n                                const email_to_client = {\n                                    email_to: emails[i],\n                                    subject: 'Reply Ticket Notification',\n                                    message: `<p>Your ticket is already replied. Please check http://17.5.16.28:9001/ccs/ticket/detail?ticket_id=${body.ticket_id} </p>`\n                                }\n                                try {\n                                    await axios.post(`/ccs-send-email`, email_to_client)\n                                        .then(response => {\n                                            if (response.data.status === 200) {\n                                                console.log('sent')\n                                            } else {\n                                                console.log('error send email')\n                                            }\n                                        })\n                                } catch (e) {\n                                    console.log(e)\n\n                                }\n                            }\n                        } else {\n                            const email_to_client = {\n                                email_to: this.props.client_email,\n                                subject: 'Reply Ticket Notification',\n                                message: `<p>Your ticket is already replied. Please check http://17.5.16.28:9001/ccs/ticket/detail?ticket_id=${body.ticket_id} </p>`\n                            }\n                            try {\n                                await axios.post(`/ccs-send-email`, email_to_client)\n                                    .then(response => {\n                                        if (response.data.status === 200) {\n                                            console.log('sent')\n                                        } else {\n                                            console.log('error send email')\n                                        }\n                                    })\n                            } catch (e) {\n                                console.log(e)\n\n                            }\n                        }\n\n                        this.componentDidMount()\n\n                        //window.location.assign('/ccs/task')\n                    } else {\n                        this.notify('ERROR', 'Failed Accepting ticket')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n            this.notify('ERROR', 'Failed Accepting ticket')\n        }\n    }\n\n    addRating = async (ticket_reply_id) => {\n        const body = {\n            module_id: this.state.module_id,\n            ticket_reply_id: ticket_reply_id,\n            rating: this.state.rating[ticket_reply_id],\n            review: this.state.reviews[ticket_reply_id],\n            created_by: payload.userId,\n        }\n\n        if (this.state.rating[ticket_reply_id] === null || this.state.rating[ticket_reply_id] === undefined || this.state.rating[ticket_reply_id] <= 0 || this.state.reviews[ticket_reply_id] === null || this.state.reviews[ticket_reply_id] === undefined || this.state.reviews[ticket_reply_id] <= 0) {\n            alert('Invalid Rating.')\n        } else {\n            try {\n                await axios.post(`/api/ccs-ticket-rating`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            //this.componentDidMount()\n                            this.notify('SUCCESS', 'You Rated This!')\n\n                            insertLog('Rate Ticket  Reply ID ' + ticket_reply_id, this.state.module_id)\n\n                            this.state.modalRating[ticket_reply_id] = false\n                            var modal = document.getElementById('modal-' + ticket_reply_id)\n                            modal.classList.remove('is-active')\n                            this.componentDidMount()\n                        } else {\n                            this.notify('ERROR', 'Failed processing data')\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n                this.notify('ERROR', 'Failed adding rating ')\n            }\n        }\n    }\n\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        } else\n            return (\n                <div>\n                    <h4 className=\"md-cell md-cell--12\">Replies :</h4>\n                    {\n                        (() => {\n                            if (this.props.role.includes('Customer')) {\n                                return (\n                                    this.state.answers.length > 0 ? this.state.answers.map((item_answer, i_answer) => (\n                                        item_answer.status_id === 8 ? (\n                                            <Fragment>\n                                                <section className=\"box  md-cell md-cell--12 \" key={i_answer} id={item_answer._id} style={{ borderRadius: '10px' }}>\n                                                    <div className=\"media \">\n                                                        <div className=\"media-left\">\n                                                            <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                        </div>\n                                                        <div className=\"media-content\">\n                                                            <div className=\"content\">\n                                                                <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><h5>{item_answer.full_name}  </h5></Link>\n                                                                <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                    <AnswerAttachments file={item_answer.file} />\n                                                                ) : ''}\n                                                                {item_answer.rating !== null && item_answer.review !== null ? (\n                                                                    <Fragment>\n                                                                        <p><b>Rating & Review :</b></p>\n                                                                        <article>\n                                                                            <div className=\"message-body\">\n                                                                                <div className=\"media columns\">\n                                                                                    <div className=\"media-left\">\n                                                                                        <Avatar src={item_answer.avatar_url_rating !== '' ? item_answer.avatar_url_rating : '/avatar/user.png'} />\n                                                                                    </div>\n                                                                                    <div className=\"media-content\">\n                                                                                        <div className=\"content\">\n                                                                                            <b>{item_answer.client_name}  </b>\n                                                                                            <br />\n                                                                                            <p>\n                                                                                                {true ? (\n                                                                                                    <StarRatings\n                                                                                                        rating={parseFloat(item_answer.rating.toString())}\n                                                                                                        starRatedColor=\"#f0c260\"\n                                                                                                        starDimension={'20px'}\n                                                                                                        numberOfStars={5}\n                                                                                                        name='rating'\n                                                                                                    />\n                                                                                                ) : ''}\n                                                                                            </p>\n                                                                                            <div dangerouslySetInnerHTML={{ __html: item_answer.review }} />\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </article>\n                                                                    </Fragment>\n                                                                ) : (\n                                                                        <div id={'modal-' + item_answer._id} className={this.state.modalRating[item_answer._id] ? \"modal is-active\" : \"modal\"} >\n                                                                            <div className=\"modal-background\"></div>\n                                                                            <div className=\"modal-card\">\n                                                                                <header className=\"modal-card-head\">\n                                                                                    <p className=\"modal-card-title\">Make Rating</p>\n                                                                                </header>\n                                                                                <section className=\"modal-card-body\">\n                                                                                    <h4><b>Ticket Request</b></h4>\n                                                                                    {this.state.ticket.map((item, i) => (\n                                                                                        <div className=\"media\">\n                                                                                            <div className=\"media-content\">\n                                                                                                <p><b>{item.title}</b></p>\n                                                                                                <p><i>{item.client_name}</i></p>\n                                                                                                <p>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                                                <div className=\"notification is-light\">\n                                                                                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                                                                </div>\n                                                                                                <br />\n                                                                                                {item.file !== undefined && item.file.length > 0 ? (\n                                                                                                    <Attachments file={item.file} />\n                                                                                                ) : ''}\n\n                                                                                                <br />\n\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    ))}\n                                                                                    <h4><b>Reply</b></h4>\n                                                                                    <div className=\"box  \" key={i_answer} id={item_answer._id} >\n                                                                                        <div className=\"media\">\n                                                                                            <div className=\"media-left\">\n                                                                                                <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                                            </div>\n                                                                                            <div className=\"media-content\">\n                                                                                                <div className=\"content\">\n                                                                                                    <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><h5>{item_answer.full_name}  </h5></Link>\n                                                                                                    <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                                                    <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                                                                                    {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                                                        <AnswerAttachments file={item_answer.file} />\n                                                                                                    ) : ''}\n                                                                                                </div>\n                                                                                            </div>\n\n\n                                                                                        </div>\n\n                                                                                    </div>\n                                                                                    <h4><b>Rate</b></h4>\n                                                                                    <StarRatings\n                                                                                        rating={this.state.rating[item_answer._id] !== undefined ? parseFloat(this.state.rating[item_answer._id].toString()) : 0}\n                                                                                        starRatedColor=\"#f0c260\"\n                                                                                        changeRating={(newrating) => this.changeRating(newrating, item_answer._id)}\n                                                                                        numberOfStars={5}\n                                                                                        name='rating'\n                                                                                    />\n                                                                                    {this.state.rating[item_answer._id] === null || this.state.rating[item_answer._id] === undefined || this.state.rating[item_answer._id] <= 0 ? (\n                                                                                        <p style={{ color: 'red' }}>Rate field is required</p>\n                                                                                    ) : ''}\n\n                                                                                    <h4><b>Review</b></h4>\n                                                                                    <TextField\n                                                                                        required\n                                                                                        rows={2} placeholder=\"Review Notes\" fullWidth value={this.state.reviews[item_answer._id]}\n                                                                                        errorText=\"Review field is required.\"\n                                                                                        onChange={(evt) => this.changeReview(evt, item_answer._id)}\n                                                                                    />\n                                                                                    {this.state.reviews[item_answer._id] === null || this.state.reviews[item_answer._id] === '' || this.state.reviews[item_answer._id] === undefined || this.state.reviews[item_answer._id].length <= 0 ? (\n                                                                                        <p style={{ color: 'red' }}>Review field is required</p>\n                                                                                    ) : ''}\n\n                                                                                </section>\n                                                                                <footer className=\"modal-card-foot\">\n                                                                                    <Button raised primary onClick={() => this.addRating(item_answer._id)}>Submit</Button>\n                                                                                </footer>\n                                                                            </div>\n                                                                        </div>\n                                                                    )}\n                                                            </div>\n                                                        </div>\n\n\n\n\n                                                    </div>\n\n                                                </section>\n                                            </Fragment>\n                                        ) : (\n                                                <div className=\"notification\">\n                                                    <p>No Data Showed ... </p>\n                                                </div>\n                                            ))\n                                    ) : (\n                                            <div className=\"notification\">\n                                                <p>No Data Showed ... </p>\n                                            </div>\n                                        )\n                                )\n\n                            } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan') || this.props.role.includes('Specialist')) {\n                                return (\n                                    this.state.answers.length > 0 ? this.state.answers.map((item_answer, i_answer) => {\n                                        switch (item_answer.status_id) {\n                                            case 8:\n                                                return (\n                                                    <Fragment>\n                                                        {item_answer.created_by === payload.userId ? (\n                                                            <section className=\"box  md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: '#c4f2bd', borderRadius: '10px' }}   >\n                                                                <div className=\"media columns\">\n                                                                    <div className=\"media-left\">\n                                                                        <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                    </div>\n                                                                    <div className=\"media-content\">\n                                                                        <div className=\"content\">\n                                                                            <h5><i style={{ color: 'green' }} className=\"fa fa-check\"></i> ACCEPTED</h5>\n                                                                            <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><h5>{item_answer.full_name}  </h5></Link>\n                                                                            <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                            <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                            {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                                <AnswerAttachments file={item_answer.file} />\n                                                                            ) : ''}\n\n                                                                            {item_answer.rating !== null && item_answer.review !== null ? (\n                                                                                <Fragment>\n                                                                                    <p><b>Rating & Review :</b></p>\n                                                                                    <article>\n                                                                                        <div className=\"message-body\">\n                                                                                            <div className=\"media columns\">\n                                                                                                <div className=\"media-left\">\n                                                                                                    <Avatar src={item_answer.avatar_url_rating !== '' ? item_answer.avatar_url_rating : '/avatar/user.png'} />\n                                                                                                </div>\n                                                                                                <div className=\"media-content\">\n                                                                                                    <div className=\"content\">\n                                                                                                        <b>{item_answer.client_name}  </b>\n                                                                                                        <br />\n                                                                                                        <p>\n                                                                                                            {true ? (\n                                                                                                                <StarRatings\n                                                                                                                    rating={parseFloat(item_answer.rating.toString())}\n                                                                                                                    starRatedColor=\"#f0c260\"\n                                                                                                                    starDimension={'20px'}\n                                                                                                                    numberOfStars={5}\n                                                                                                                    name='rating'\n                                                                                                                />\n                                                                                                            ) : ''}\n                                                                                                        </p>\n                                                                                                        <div dangerouslySetInnerHTML={{ __html: item_answer.review }} />\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </article>\n                                                                                </Fragment>\n                                                                            ) : ''}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </section>\n                                                        ) : (\n                                                                <section className=\"box  md-cell md-cell--12\" key={i_answer} style={{ borderRadius: '10px' }}  >\n                                                                    <div className=\"media columns\">\n                                                                        <div className=\"media-left\">\n                                                                            <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                        </div>\n                                                                        <div className=\"media-content\">\n                                                                            <div className=\"content\">\n                                                                                <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><h5>{item_answer.full_name}  </h5></Link>\n                                                                                <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                                {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                                    <AnswerAttachments file={item_answer.file} />\n                                                                                ) : ''}\n\n                                                                                {item_answer.rating !== null && item_answer.review !== null ? (\n                                                                                    <Fragment>\n                                                                                        <p><b>Rating & Review :</b></p>\n                                                                                        <article>\n                                                                                            <div className=\"message-body\">\n                                                                                                <div className=\"media columns\">\n                                                                                                    <div className=\"media-left\">\n                                                                                                        <Avatar src={item_answer.avatar_url_rating !== '' ? item_answer.avatar_url_rating : '/avatar/user.png'} />\n                                                                                                    </div>\n                                                                                                    <div className=\"media-content\">\n                                                                                                        <div className=\"content\">\n                                                                                                            <b>{item_answer.client_name}  </b>\n                                                                                                            <br />\n                                                                                                            <p>\n                                                                                                                {true ? (\n                                                                                                                    <StarRatings\n                                                                                                                        rating={parseFloat(item_answer.rating.toString())}\n                                                                                                                        starRatedColor=\"#f0c260\"\n                                                                                                                        starDimension={'20px'}\n                                                                                                                        numberOfStars={5}\n                                                                                                                        name='rating'\n                                                                                                                    />\n                                                                                                                ) : ''}\n                                                                                                            </p>\n                                                                                                            <div dangerouslySetInnerHTML={{ __html: item_answer.review }} />\n                                                                                                        </div>\n                                                                                                    </div>\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </article>\n                                                                                    </Fragment>\n                                                                                ) : ''}\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </section>\n                                                            )}\n\n                                                    </Fragment>\n                                                )\n                                            case 7:\n                                                return (\n                                                    <Fragment>\n                                                        {item_answer.created_by === payload.userId ? (\n                                                            <section className=\"box  md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: '#fccfd7', borderRadius: '10px' }}>\n                                                                <div className=\"media columns\">\n                                                                    <div className=\"media-left\">\n                                                                        <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                    </div>\n                                                                    <div className=\"media-content\">\n                                                                        <div className=\"content\">\n                                                                            <h5><i style={{ color: 'orange' }} className=\"fa fa-warning\"></i> REJECTED</h5>\n                                                                            <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><h5>{item_answer.full_name}  </h5></Link>\n                                                                            <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                            <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                            {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                                <AnswerAttachments file={item_answer.file} />\n                                                                            ) : ''}\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                            </section>\n                                                        ) : (\n                                                                <section className=\"box  md-cell md-cell--12\" key={i_answer} style={{ borderRadius: '10px' }} >\n                                                                    <div className=\"media columns\">\n                                                                        <div className=\"media-left\">\n                                                                            <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                        </div>\n                                                                        <div className=\"media-content\">\n                                                                            <div className=\"content\">\n\n                                                                                <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><h5>{item_answer.full_name}  </h5></Link>\n                                                                                <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                                {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                                    <AnswerAttachments file={item_answer.file} />\n                                                                                ) : ''}\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </section>\n                                                            )}\n\n\n                                                    </Fragment>\n                                                )\n                                            case 5:\n                                                return (\n                                                    <Fragment>\n                                                        <section className=\"box  md-cell md-cell--12\" key={i_answer} style={{ borderRadius: '10px' }}>\n                                                            <div className=\"media columns\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n\n                                                                        <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><h5>{item_answer.full_name}  </h5></Link>\n                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                        <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                        {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                            <AnswerAttachments file={item_answer.file} />\n                                                                        ) : ''}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </section>\n                                                    </Fragment>\n                                                )\n                                            default: return ('')\n                                        }\n                                    }\n\n                                    ) : (\n                                            <div className=\"notification\">\n                                                <p>No Data Showed ... </p>\n                                            </div>\n                                        )\n                                )\n                            } else if (this.props.role.includes('Supervisor CCS')) {\n                                return (\n                                    this.state.answers.length > 0 ? this.state.answers.map((item_answer, i_answer) => {\n                                        switch (item_answer.status_id) {\n                                            case 8:\n                                                return (\n                                                    <Fragment>\n                                                        <section className=\"box  md-cell md-cell--12 \" key={i_answer} id={item_answer._id} style={{ borderRadius: '10px' }} >\n                                                            <div className=\"media columns\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><b>{item_answer.full_name}  </b></Link>\n                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                        <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                        {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                            <AnswerAttachments file={item_answer.file} />\n                                                                        ) : ''}\n\n                                                                        {item_answer.created_by !== payload.userId ? (\n                                                                            <p style={{ fontSize: '8pt', color: 'green' }}><i>You Accepted this.</i></p>\n                                                                        ) : ''}\n\n\n                                                                        {item_answer.rating !== null && item_answer.review !== null ? (\n                                                                            <Fragment>\n                                                                                <p><b>Rating & Review :</b></p>\n                                                                                <article>\n                                                                                    <div className=\"message-body\">\n                                                                                        <div className=\"media columns\">\n                                                                                            <div className=\"media-left\">\n                                                                                                <Avatar src={item_answer.avatar_url_rating !== '' ? item_answer.avatar_url_rating : '/avatar/user.png'} />\n                                                                                            </div>\n                                                                                            <div className=\"media-content\">\n                                                                                                <div className=\"content\">\n                                                                                                    <b>{item_answer.client_name}  </b>\n                                                                                                    <br />\n                                                                                                    <p>\n                                                                                                        {true ? (\n                                                                                                            <StarRatings\n                                                                                                                rating={parseFloat(item_answer.rating.toString())}\n                                                                                                                starRatedColor=\"#f0c260\"\n                                                                                                                starDimension={'20px'}\n                                                                                                                numberOfStars={5}\n                                                                                                                name='rating'\n                                                                                                            />\n                                                                                                        ) : ''}\n                                                                                                    </p>\n                                                                                                    <div dangerouslySetInnerHTML={{ __html: item_answer.review }} />\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </article>\n                                                                            </Fragment>\n                                                                        ) : ''}\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </section>\n                                                    </Fragment>\n                                                )\n                                            case 7:\n                                                return (\n\n                                                    <Fragment>\n                                                        <section className=\"box  md-cell md-cell--12 \" key={i_answer} id={item_answer._id} style={{ borderRadius: '10px' }} >\n                                                            <div className=\"media columns\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <Link to={`/ccs/staff?id=${item_answer.created_by}`} >\n                                                                            <b>{item_answer.full_name}  </b>\n                                                                        </Link>\n                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                        <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                        {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                            <AnswerAttachments file={item_answer.file} />\n                                                                        ) : ''}\n                                                                        {item_answer.created_by !== payload.userId ? (\n                                                                            <p style={{ fontSize: '8pt', color: 'red' }}><i>You Rejected this.</i></p>\n                                                                        ) : ''}\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n                                                        </section>\n                                                    </Fragment>\n                                                )\n                                            case 5:\n                                                return (\n                                                    <Fragment>\n                                                        <section className=\"box  md-cell md-cell--12\" key={i_answer} id={item_answer._id} style={{ borderRadius: '10px' }}>\n\n                                                            <div className=\"media columns\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><b>{item_answer.full_name}  </b></Link>\n                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                        {\n                                                                            this.state.editMode && !this.state.rejectAnswer ? (\n                                                                                <FormEditReply reply={<div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />} ticket_reply_id={item_answer._id} replyEdited={(ticket_reply_id) => this.replyEdited(ticket_reply_id)} ticket_id={item_answer.ticket_id} cancelEditReply={(act) => this.cancelEditReply(act)} client_email={this.props.client_email} />\n                                                                            ) : (\n\n                                                                                    <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                                                                )\n                                                                        }\n\n\n\n                                                                        {\n                                                                            !this.state.rejectAnswer && !this.state.editMode ? (\n                                                                                <Fragment>\n                                                                                    {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                                        <AnswerAttachments file={item_answer.file} />\n                                                                                    ) : ''}\n                                                                                    <br />\n\n                                                                                    <div style={{ padding: '1vw' }}>\n\n                                                                                        {this.state.rejectAnswer ? '' : (\n                                                                                            <Fragment>\n                                                                                                <button onClick={() => this.setState({ dialogAcceptVisible: true })} className=\"button is-small is-success\"><span className=\"icon\"><i className=\"fa fa-check\"></i></span><span className=\"text\">ACCEPT</span></button>\n                                                                                        &nbsp;\n                                                                                                <button onClick={() => this.setState({ rejectAnswer: !this.state.rejectAnswer })} className=\"button is-small is-danger\"><span className=\"icon\"><i className=\"fa fa-times\"></i></span><span className=\"text\">REJECT</span></button>\n                                                                                                {/* <Button raised primary iconClassName=\"fa fa-check\" onClick={ () => this.setState({dialogAcceptVisible :true})} className=\"is-small\">ACCEPT</Button>\n                                                                                        <Button raised  iconClassName=\"fa fa-times\" /*onClick={() => this.rejectReply(item_answer._id,item_answer.created_by)}  onClick =  {() => this.setState({rejectAnswer: !this.state.rejectAnswer}) } >REJECT</Button> */}\n                                                                                            </Fragment>\n                                                                                        )}\n\n                                                                                    </div>\n                                                                                </Fragment>\n                                                                            ) : ''\n                                                                        }\n\n                                                                        {this.state.rejectAnswer && !this.state.editMode ? (\n                                                                            <FormReject role={this.props.role} ticket_id={item_answer.ticket_id} ticket_reply_id={item_answer._id} cancelReject={(act) => this.cancelReject(act)} />\n                                                                        ) : ''}\n                                                                    </div>\n                                                                </div>\n                                                                {!this.state.rejectAnswer ? (\n                                                                    <div className=\"media-right\">\n                                                                        <button className=\"button is-small\" onClick={() => this.setState({ editMode: !this.state.editMode })}>\n                                                                            <i className=\"fa fa-pencil\"></i>&nbsp; Edit\n                                                                </button>\n                                                                    </div>\n\n                                                                ) : ''}\n                                                            </div>\n\n\n                                                        </section>\n\n                                                        <DialogContainer\n                                                            width={'600px'}\n                                                            id=\"simple-action-dialog\"\n                                                            visible={this.state.dialogAcceptVisible}\n                                                            onHide={() => !this.state.dialogAcceptVisible}\n                                                            actions={[<Button raised primary onClick={() => this.acceptReply(item_answer._id, item_answer.created_by)} >YES</Button>, <Button onClick={() => this.setState({ dialogAcceptVisible: false })} >NO</Button>]}\n                                                            title=\"Confirmation\"\n                                                        >\n                                                            <p>Are you sure to proceed?</p>\n                                                        </DialogContainer>\n\n                                                    </Fragment>\n                                                )\n                                            default: return ('')\n                                        }\n                                    }\n\n                                    ) : (\n                                            <div className=\"notification\">\n                                                <p>No Data Showed ... </p>\n                                            </div>\n                                        )\n                                )\n                            }\n                            else if (this.props.role.includes('Superadmin') || this.props.role.includes('Direktur')) {\n                                return (\n                                    this.state.answers.length > 0 ? this.state.answers.map((item_answer, i_answer) => {\n                                        switch (item_answer.status_id) {\n                                            case 8:\n                                                return (\n                                                    <Fragment>\n                                                        <section className=\"box  md-cell md-cell--12 \" key={i_answer} id={item_answer._id} style={{ borderRadius: '10px' }} >\n                                                            <div className=\"media columns\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><b>{item_answer.full_name}  </b></Link>\n                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                        <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                        {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                            <AnswerAttachments file={item_answer.file} />\n                                                                        ) : ''}\n\n                                                                        {item_answer.created_by !== payload.userId ? (\n                                                                            <p style={{ fontSize: '8pt', color: 'green' }}><i>Accepted</i></p>\n                                                                        ) : ''}\n\n\n                                                                        {item_answer.rating !== null && item_answer.review !== null ? (\n                                                                            <Fragment>\n                                                                                <p><b>Rating & Review :</b></p>\n                                                                                <article>\n                                                                                    <div className=\"message-body\">\n                                                                                        <div className=\"media columns\">\n                                                                                            <div className=\"media-left\">\n                                                                                                <Avatar src={item_answer.avatar_url_rating !== '' ? item_answer.avatar_url_rating : '/avatar/user.png'} />\n                                                                                            </div>\n                                                                                            <div className=\"media-content\">\n                                                                                                <div className=\"content\">\n                                                                                                    <b>{item_answer.client_name}  </b>\n                                                                                                    <br />\n                                                                                                    <p>\n                                                                                                        {true ? (\n                                                                                                            <StarRatings\n                                                                                                                rating={parseFloat(item_answer.rating.toString())}\n                                                                                                                starRatedColor=\"#f0c260\"\n                                                                                                                starDimension={'20px'}\n                                                                                                                numberOfStars={5}\n                                                                                                                name='rating'\n                                                                                                            />\n                                                                                                        ) : ''}\n                                                                                                    </p>\n                                                                                                    <div dangerouslySetInnerHTML={{ __html: item_answer.review }} />\n                                                                                                </div>\n                                                                                            </div>\n                                                                                        </div>\n                                                                                    </div>\n                                                                                </article>\n                                                                            </Fragment>\n                                                                        ) : ''}\n\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </section>\n                                                    </Fragment>\n                                                )\n                                            case 7:\n                                                return (\n\n                                                    <Fragment>\n                                                        <section className=\"box  md-cell md-cell--12 \" key={i_answer} id={item_answer._id} style={{ borderRadius: '10px' }}>\n                                                            <div className=\"media columns\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <Link to={`/ccs/staff?id=${item_answer.created_by}`} >\n                                                                            <b>{item_answer.full_name}  </b>\n                                                                        </Link>\n                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                        <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n                                                                        {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                            <AnswerAttachments file={item_answer.file} />\n                                                                        ) : ''}\n                                                                        {item_answer.created_by !== payload.userId ? (\n                                                                            <p style={{ fontSize: '8pt', color: 'red' }}><i>Rejected</i></p>\n                                                                        ) : ''}\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n                                                        </section>\n                                                    </Fragment>\n                                                )\n                                            case 5:\n                                                return (\n                                                    <Fragment>\n                                                        <section className=\"box  md-cell md-cell--12\" key={i_answer} id={item_answer._id} style={{ borderRadius: '10px' }}>\n\n                                                            <div className=\"media columns\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <Link to={`/ccs/staff?id=${item_answer.created_by}`} ><b>{item_answer.full_name}  </b></Link>\n                                                                        <p style={{ fontSize: '8pt' }}>{dateformat(item_answer.created_at, 'dd mmm yyyy, HH:MM')}</p>\n\n\n\n                                                                        <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n\n\n\n\n                                                                        <Fragment>\n                                                                            {item_answer.file !== undefined && item_answer.file.length > 0 ? (\n                                                                                <AnswerAttachments file={item_answer.file} />\n                                                                            ) : ''}\n                                                                            <br />\n\n\n                                                                        </Fragment>\n\n\n\n                                                                    </div>\n                                                                </div>\n\n                                                            </div>\n\n\n                                                        </section>\n\n\n\n                                                    </Fragment>\n                                                )\n                                            default: return ('')\n                                        }\n                                    }\n\n                                    ) : (\n                                            <div className=\"notification\">\n                                                <p>No Data Showed ... </p>\n                                            </div>\n                                        )\n                                )\n                            }\n                        }\n                        )()\n                    }\n                </div>\n\n            )\n    }\n}\n\nclass AnswerAttachments extends Component {\n\n    showModalAttachment = (attach_id) => {\n        var modalAttachment = document.getElementById(attach_id)\n        modalAttachment.classList.toggle('is-active')\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                {(() => {\n                    if (this.props.file.length > 0) {\n                        return (<p><b>Attachments :</b></p>)\n                    }\n                })()\n                }\n                <div className=\"columns\">\n                    {this.props.file.map((item, i) => {\n                        if (item.file_url !== null) {\n                            var splited_fie_url = item.file_url.split('.')\n                            var extension_file = splited_fie_url[splited_fie_url.length - 1]\n\n                            var new_url = ''\n\n                            var splited_fie_url_slash = item.file_url.split('/')\n                            new_url = item.file_url.replace(splited_fie_url_slash[splited_fie_url_slash.length - 1], encodeURIComponent(splited_fie_url_slash[splited_fie_url_slash.length - 1]))\n\n\n                            if (extension_file === 'png' || extension_file === 'jpg' || extension_file === 'jpeg' || extension_file === 'gif' || extension_file === 'bmp') {\n                                return (<div>\n                                    <a onClick={() => this.showModalAttachment('modal-' + item._id)}>\n                                        <img src={window.location.origin + new_url} alt=\"File attachment\" ></img>\n                                                &nbsp;\n                                            </a>\n                                    <div className=\"modal\" id={'modal-' + item._id}>\n                                        <div className=\"modal-background\"></div>\n                                        <div className=\"modal-content\">\n                                            <iframe src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '85vh' }}></iframe> &nbsp;\n                                                </div>\n                                        <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.showModalAttachment('modal-' + item._id)}></button>\n                                    </div>\n\n                                </div>)\n                            }\n                            else if (extension_file === 'zip' || extension_file === 'rar' || extension_file === 'doc' || extension_file === 'docx' || extension_file === 'xls'\n                                || extension_file === 'xlsx' || extension_file === 'ppt' || extension_file === 'pptx') {\n                                return (<span className=\"tag\"><a href={item.file_url}><i className=\"fa fa-download\"></i>&nbsp;{item.file_url}</a></span>)\n                            }\n                            else {\n                                return (\n                                    <div className=\"column is-2\">\n\n                                        <iframe src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '20vh' }}></iframe> &nbsp;\n\n                                        <a onClick={() => this.showModalAttachment('modal-' + item._id)}>Full Size &nbsp; <i className=\"fa fa-expand\" /></a>\n\n                                        <div className=\"modal\" id={'modal-' + item._id}>\n                                            <div className=\"modal-background\"></div>\n                                            <div className=\"modal-content\">\n                                                <iframe src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '85vh' }}></iframe> &nbsp;\n                                        </div>\n                                            <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.showModalAttachment('modal-' + item._id)}></button>\n                                        </div>\n                                    </div>\n\n                                )\n\n                            }\n                        }\n                    }\n\n                    )\n                    }\n                </div>\n                <br />\n            </div>\n        )\n    }\n}\n\nclass NoteAttachments extends Component {\n    async componentDidMount() {\n\n    }\n\n    showModalAttachment = (attach_id) => {\n        var modalAttachment = document.getElementById(attach_id)\n        modalAttachment.classList.toggle('is-active')\n    }\n\n    render() {\n        return (\n            <div>\n                {(() => {\n                    if (this.props.file.length > 0) {\n                        return (<p><b>Attachments :</b></p>)\n                    }\n                })()\n                }\n                <div className=\"columns\">\n                    {this.props.file.map((item, i) => {\n                        if (item.file_url !== null) {\n                            var splited_fie_url = item.file_url.split('.')\n                            var extension_file = splited_fie_url[splited_fie_url.length - 1]\n\n                            var new_url = ''\n\n                            var splited_fie_url_slash = item.file_url.split('/')\n                            new_url = item.file_url.replace(splited_fie_url_slash[splited_fie_url_slash.length - 1], encodeURIComponent(splited_fie_url_slash[splited_fie_url_slash.length - 1]))\n\n\n                            if (extension_file === 'png' || extension_file === 'jpg' || extension_file === 'jpeg' || extension_file === 'gif' || extension_file === 'bmp') {\n                                return (<div>\n                                    <a onClick={() => this.showModalAttachment('modal-' + item._id)}>\n                                        <img src={window.location.origin + new_url} alt=\"File attachment\" ></img>\n                                                &nbsp;\n                                            </a>\n                                    <div className=\"modal\" id={'modal-' + item._id}>\n                                        <div className=\"modal-background\"></div>\n                                        <div className=\"modal-content\">\n                                            <img src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '85vh' }}></img> &nbsp;\n                                                </div>\n                                        <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.showModalAttachment('modal-' + item._id)}></button>\n                                    </div>\n                                </div>)\n                            }\n                            else if (extension_file === 'zip' || extension_file === 'rar' || extension_file === 'doc' || extension_file === 'docx' || extension_file === 'xls'\n                                || extension_file === 'xlsx' || extension_file === 'ppt' || extension_file === 'pptx') {\n                                return (<span className=\"tag\"><a href={item.file_url}><i className=\"fa fa-download\"></i>&nbsp;{item.file_url}</a></span>)\n                            }\n                            else {\n                                return (\n                                    <div className=\"column is-2\">\n\n                                        <iframe src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '20vh' }}></iframe> &nbsp;\n\n                                        <a onClick={() => this.showModalAttachment('modal-' + item._id)}>Full Size &nbsp; <i className=\"fa fa-expand\" /></a>\n\n                                        <div className=\"modal\" id={'modal-' + item._id}>\n                                            <div className=\"modal-background\"></div>\n                                            <div className=\"modal-content\">\n                                                <iframe src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '85vh' }}></iframe> &nbsp;\n                                                </div>\n                                            <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.showModalAttachment('modal-' + item._id)}></button>\n                                        </div>\n                                    </div>\n\n                                )\n\n                            }\n                        }\n                    }\n\n                    )\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nclass Attachments extends Component {\n\n    showModalAttachment = (attach_id) => {\n        var modalAttachment = document.getElementById(attach_id)\n        modalAttachment.classList.toggle('is-active')\n    }\n\n    render() {\n        return (\n            <div>\n                {(() => {\n                    if (this.props.file.length > 0) {\n                        return (<p><b>Attachments :</b></p>)\n                    }\n                })()\n                }\n                <div className=\"columns\">\n                    {this.props.file.map((item, i) => {\n                        if (item.file_url !== null) {\n                            var splited_fie_url = item.file_url.split('.')\n                            var extension_file = splited_fie_url[splited_fie_url.length - 1]\n\n                            var new_url = ''\n\n                            var splited_fie_url_slash = item.file_url.split('/')\n                            new_url = item.file_url.replace(splited_fie_url_slash[splited_fie_url_slash.length - 1], encodeURIComponent(splited_fie_url_slash[splited_fie_url_slash.length - 1]))\n\n\n                            if (extension_file === 'png' || extension_file === 'jpg' || extension_file === 'jpeg' || extension_file === 'gif' || extension_file === 'bmp') {\n                                return (<div> <a onClick={() => this.showModalAttachment('modal-' + item._id)}>\n                                    <img src={window.location.origin + new_url} alt=\"File attachment\" ></img>\n                                                &nbsp;\n                                            </a>\n                                    <div className=\"modal\" id={'modal-' + item._id}>\n                                        <div className=\"modal-background\"></div>\n                                        <div className=\"modal-content\">\n                                            <img src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '85vh' }}></img> &nbsp;\n                                                </div>\n                                        <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.showModalAttachment('modal-' + item._id)}></button>\n                                    </div></div>)\n                            }\n                            else if (extension_file === 'zip' || extension_file === 'rar' || extension_file === 'doc' || extension_file === 'docx' || extension_file === 'xls'\n                                || extension_file === 'xlsx' || extension_file === 'ppt' || extension_file === 'pptx') {\n                                return (<span className=\"tag\"><a href={item.file_url}><i className=\"fa fa-download\"></i>&nbsp;{item.file_url}</a></span>)\n                            }\n                            else {\n                                return (\n                                    <div className=\"column is-2\">\n\n                                        <iframe src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '20vh' }}></iframe> &nbsp;\n\n                                        <a onClick={() => this.showModalAttachment('modal-' + item._id)}>Full Size &nbsp; <i className=\"fa fa-expand\" /></a>\n\n                                        <div className=\"modal\" id={'modal-' + item._id}>\n                                            <div className=\"modal-background\"></div>\n                                            <div className=\"modal-content\">\n                                                <iframe src={item.file_url} frameborder=\"0\" style={{ width: '100%', height: '85vh' }}></iframe> &nbsp;\n                                            </div>\n                                            <button className=\"modal-close is-large\" aria-label=\"close\" onClick={() => this.showModalAttachment('modal-' + item._id)}></button>\n                                        </div>\n                                    </div>\n\n                                )\n\n                            }\n                        }\n                    }\n\n                    )\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Cell, Grid, TextField, Chip, SelectField, Button, Autocomplete, MenuButtonColumn, FileUpload } from 'react-md';\nimport axios from 'axios'\nimport $ from 'jquery/dist/jquery.js'\nimport { insertLog } from '../../../../log/InsertLog'\n\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nimport { Session } from 'bc-react-session'\nconst { payload } = Session.get()\n\n\nvar dt = []\nconst clients = []\nvar data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            formdata: [],\n            module_id: '',\n            clients: [],\n            file_url: [],\n            isCustomer: false,\n            client_id: '',\n            title: '',\n            category_id: '',\n            priority_id: '',\n            description: '',\n            handled_by_user_id: '',\n            created_by: payload.userId,\n            isProcessing: false,\n            invalidClientId: null,\n            invalidTitle: null\n        }\n\n        this.onChangeClientId = this.onChangeClientId.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        this.setState({ module_id: module_id })\n\n        $('.summernote').summernote({\n\n            placeholder: 'Add Description',\n            height: '20vh'\n        })\n\n        await axios.get(`/api/clients`)\n            .then(response => {\n                try {\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.client_code > 0) {\n                                var obj = {\n                                    label: item.client_code + ' - ' + item.client_name,\n                                    value: item._id\n                                }\n                                dt[i] = obj.label\n                                clients[i] = item._id\n                            }\n                            return false\n                        })\n\n                        this.setState({ clients: dt })\n\n                    }\n                } catch (error) {\n                    console.log(error)\n                }\n            })\n        if (this.props.role.includes('Customer')) {\n\n            this.setState({ isCustomer: true })\n            await axios.get(`/api/user/${payload.userId}`)\n                .then(response => {\n                    try {\n                        if (response.data.status === 200) {\n\n                            response.data.data.map((item, i) => {\n                                this.setState({ client_id: item.client_id })\n                            })\n                        }\n                    } catch (error) {\n                        console.log(error)\n                    }\n                })\n\n            console.log(this.state.client_id)\n        }\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    onChangeClientId = (evt) => {\n\n        var index = this.state.clients.indexOf(evt)\n        var client_id = clients[index]\n\n        this.setState({ client_id: client_id })\n        if (client_id === '') {\n            this.setState({\n                invalidClientId: true\n            })\n        } else {\n            this.setState({\n                invalidClientId: false\n            })\n        }\n    }\n\n    onChangeTitle = (evt) => {\n\n        this.setState({ title: evt })\n        if (evt === '') {\n            this.setState({\n                invalidTitle: true\n            })\n        } else {\n            this.setState({\n                invalidTitle: false\n            })\n        }\n    }\n\n    handleSubmit = async (evt) => {\n\n        evt.preventDefault()\n        var editor = window.document.getElementsByClassName('note-editable')[0]\n\n\n        if (this.state.invalidClientId === false && this.state.invalidTitle === false) {\n            this.setState({\n                isProcessing: true\n            })\n            var body = {\n                module_id: this.state.module_id,\n                file_url: this.state.file_url,\n                client_id: this.state.client_id,\n                title: this.state.title,\n                description: editor.innerHTML,\n                parent_ticket_id: '',\n                category_id: this.state.category_id,\n                priority_id: this.state.priority_id,\n                handled_by_user_id: this.state.handled_by_user_id,\n            }\n\n\n            if (this.state._id !== '' && this.state._id !== undefined) {\n                body.updated_by = this.state.created_by\n                body.status_id = 1\n                try {\n                    await axios.put(`/api/ccs-ticket/${this.state._id}`, body)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n\n                                if (this.state.file_url.length > 0) {\n                                    this.state.formdata.map((item, i) => {\n                                        data.append('file', item)\n                                        return false\n                                    })\n                                    try {\n                                        axios.post('/upload-file-ccs', data)\n                                            .then((response) => {\n\n                                                if (response.data.success) {\n                                                    this.setState({ isProcessing: false })\n                                                    // this.setState({isLoading:false, uploadStatus:true, validFileUrl:true})\n                                                } else {\n                                                    //this.setState({ isLoading:false, uploadStatus:false, validFileUrl:false})\n                                                }\n\n                                            })\n                                    } catch (error) {\n                                        console.log(error)\n                                    }\n                                }\n                                this.notify('SUCCESS', response.data.message)\n                                // window.history.go(-1)\n                            } else {\n                                this.notify('ERROR', 'Failed processing data')\n                            }\n\n\n                        })\n                } catch (error) {\n                    this.notify('ERROR', error)\n                }\n            } else {\n                body.created_by = this.state.created_by\n                body.status_id = 1\n                try {\n                    await axios.post(`/api/ccs-ticket`, body)\n                        .then(async response => {\n\n                            if (response.data.status === 200) {\n                                if (this.state.file_url.length > 0) {\n                                    const formdata = new FormData()\n                                    this.state.formdata.map((item, i) => {\n                                        formdata.append('file', item)\n\n                                    })\n                                    console.log(formdata)\n                                    try {\n                                        axios.post('/upload-file-ccs',\n                                            formdata)\n                                            .then((response) => {\n\n                                                if (response.data.success) {\n                                                    this.setState({ isProcessing: false })\n\n                                                } else {\n\n                                                }\n\n                                            })\n                                    } catch (error) {\n                                        console.log(error)\n                                    }\n                                }\n                                this.notify('SUCCESS', 'Ticket Saved')\n\n                                insertLog('Insert New Ticket', this.state.module_id)\n\n                                window.history.go(-1)\n                            } else {\n                                this.notify('ERROR', 'Failed processing data')\n                            }\n\n\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n        } else {\n            if (this.state.title === '') {\n                this.setState({\n                    invalidTitle: true\n                })\n            } else {\n                this.setState({\n                    invalidTitle: false\n                })\n            }\n            if (this.state.client_id === '') {\n                this.setState({\n                    invalidClientId: true\n                })\n            } else {\n                this.setState({\n                    invalidClientId: false\n                })\n            }\n        }\n\n    }\n\n\n    handleLoad = (uploadedFile, uploadedData) => {\n        const { name, size, type, lastModified } = uploadedFile\n        const file = {\n\n            name,\n            size,\n            type,\n            data: uploadedData,\n            lastModified: new Date(lastModified),\n        };\n\n\n        this.setState({\n            file_url: [...this.state.file_url, (uploadedFile.name)],\n            formdata: [...this.state.formdata, (uploadedFile)]\n        })\n    }\n\n    deleteFile = (file) => {\n\n        const result = this.state.formdata.filter(({ name }) => !name.includes(file))\n\n        this.setState({ formdata: result })\n        var index = this.state.file_url.indexOf(file);\n\n        if (index > -1) {\n            this.state.file_url.splice(index, 1);\n        }\n    }\n\n    render() {\n        if (this.state.isProcessing)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n\n            return (\n                <div>\n                    {/* <ToastContainer /> */}\n                    <Grid className=\"box grid-example md-cell md-cell--12\">\n                        <h2 className=\"md-cell md-cell--12\">\n                            Form Ticket\n                    </h2>\n\n                        <Cell size={12} >\n                            <TextField\n                                id=\"floating-label-counter-field\"\n                                label=\"Title\"\n                                placeholder=\"Title\"\n                                maxLength={100}\n                                className=\"md-cell md-cell--bottom\"\n                                defaultValue={this.state.title}\n                                onChange={(evt) => this.onChangeTitle(evt)}\n                            />\n                            {this.state.invalidTitle ? (\n                                <p style={{ color: 'red' }}>This field should be filled</p>\n                            ) : ''}\n                            {this.state.isCustomer === false ? (\n                                <Fragment>\n                                    <SelectField\n                                        id=\"select-field-2\"\n                                        label=\"BPR/Client\"\n                                        placeholder=\"Select BPR/Client\"\n                                        menuItems={this.state.clients}\n                                        anchor={{\n                                            x: MenuButtonColumn.HorizontalAnchors.CENTER,\n                                            y: MenuButtonColumn.VerticalAnchors.TOP\n                                        }}\n                                        onChange={this.onChangeClientId}\n                                        filter={Autocomplete.fuzzyFilter}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    {this.state.invalidClientId ? (\n                                        <p style={{ color: 'red' }}>This field should be filled</p>\n                                    ) : ''}\n                                </Fragment>\n\n                            ) : ''}\n\n                            <div className=\"summernote\">\n                                {/* This is for text editor Summernote */}\n                            </div>\n                            <br />\n                            {this.state.formdata.map((item, i) => (\n                                <div>\n                                    <Chip className=\"state-chip\" label={item.name} removable onClick={() => this.deleteFile(item.name)} /><br />\n                                </div>\n                            ))}\n                            <br />\n                            <FileUpload\n                                id=\"multiple-file-upload\"\n                                multiple\n                                onLoad={this.handleLoad}\n                                style={{ backgroundColor: '#359ce6' }}\n                                name=\"multipart-file-upload\"\n                                label=\"Select files\"\n                            />\n                            <hr />\n                            <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                            <Link to={'/ccs/task'} ><Button flat  >Cancel</Button></Link>\n                        </Cell>\n\n                    </Grid>\n                </div>\n            )\n    }\n}","import React,{Component,Fragment} from 'react' \nimport { Button,Autocomplete, Chip, FileUpload, SelectField, Avatar,SelectionControl,Grid,Cell, TextField } from 'react-md'; \nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport $ from 'jquery'\n import * as summernote from 'summernote/dist/summernote-lite'\n import { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {insertLog} from '../../../../log/InsertLog'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst helpdesks=[]\nvar  data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id:this.props.ticket_id,\n            role:'',\n            module_id:'',\n            formdata: [],\n            helpdesk :[],\n            implementator:[],\n            specialists:[],\n            file_url:[],\n            ticket_forward_from_support:[],\n            ticket_forward_from_supervisor:[],\n            ticket_forward_from_helpdesk:[],\n            handled_by_user_id:'',\n            max_resolution_time: '',\n            isAuto:true,\n            created_by : payload.userId\n        } \n\n        this.onChangeHandlerId = this.onChangeHandlerId.bind(this)\n        this.onChangeForwardto = this.onChangeForwardto.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n       \n\n    }\n\n    async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n        $('.summernote').summernote({\n            placeholder:'Add Note',\n            height:'20vh'\n        })\n\n        try{\n            await axios.get(`/api/ccs-ticket/${this.state._id}`)\n            .then(response => {\n                if(response.data.status ===200 ) {\n                    response.data.data.map((item,i) => {\n                        this.setState({\n                            max_resolution_time : item.max_resolution_time\n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await axios.get(`/api/helpdesk-users`)\n            .then(response => {\n                var dt = []\n                if(response.data.status ===200) {\n                   \n                    response.data.data.map((item,i) => {\n                       \n                        var obj = {\n                            leftAvatar: <Avatar src={item.avatar_url} ></Avatar>,\n                            label:item.full_name,\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        helpdesks[i] = item._id\n                        return false\n                       \n                    })\n\n                    this.state.helpdesk=dt\n                    \n                }\n            \n        })\n        }catch(error){\n            console.log(error)\n        }\n\n        try{\n            await axios.get(`/api/support-users?usid=${payload.userId}`)\n            .then(response => {\n                var dt = []\n                if(response.data.status ===200) {\n                   \n                    response.data.data.map((item,j) => {\n                       \n                        var obj = {\n                            leftAvatar: <Avatar src={item.avatar_url} ></Avatar>,\n                            label:item.full_name,\n                            value:item._id\n                        }\n                        dt[j] = obj\n                       // helpdesks[i] = item._id\n                        return false\n                       \n                    })\n\n                    this.setState({implementator:dt})\n                    \n                }\n            \n        })\n        }catch(error){\n            console.log(error)\n        }\n\n        try{\n            await axios.get(`/api/specialist-users`)\n            .then(response => {\n                var dt = []\n                if(response.data.status ===200) {\n                   \n                    response.data.data.map((item,k) => {\n                       \n                        var obj = {\n                            leftAvatar: <Avatar src={item.avatar_url} ></Avatar>,\n                            label:item.full_name,\n                            value:item._id\n                        }\n                        dt[k] = obj\n                      //  helpdesks[i] = item._id\n                        return false\n                       \n                    })\n\n                    this.setState({specialists:dt})\n                    \n                }\n            \n        })\n        }catch(error){\n            console.log(error)\n        }\n\n        //TICKET FORWARDING\n        try{\n            await axios.get(`/api/ccs-ticket-forwarding-by-ticket-id/${this.state._id}`)\n            .then(response => {\n            \n                if(response.data.status ===200) {\n                    var dt_support = []\n                    var dt_supervisor = []\n                    var dt_helpdesk = []\n\n                    response.data.data.map((item,i) => {\n                        console.log(item.role)\n                        if (item.role.includes('Implementator') || item.role.includes('Support Pelayanan') ) {\n                            dt_support.push(item)\n                        }else if (item.role.includes('Supervisor CCS') ) {\n                            dt_supervisor.push(item)\n                        }else if (item.role.includes('Help Desk') ) {\n                            dt_helpdesk.push(item)\n                        }\n                        return false\n                    })\n\n                    this.setState({\n                        ticket_forward_from_helpdesk : dt_helpdesk,\n                        ticket_forward_from_supervisor: dt_supervisor,\n                        ticket_forward_from_support : dt_support\n                    })\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n        if (this.props.role.includes('Specialist') ) {\n            var dt = []\n            this.state.ticket_forward_from_support.map((item,i) => {\n                var obj = {\n                    leftAvatar: <Avatar src={item.avatar_url !== null ? item.avatar_url  : '/avatar/user.png' } ></Avatar>,\n                    value : item.forwarded_by_user_id,\n                    label   :item.full_name+' - Support '+(i+1)\n                }\n                dt[i] =obj\n                return false\n            })\n\n            this.setState({implementator:dt})\n        }\n\n      \n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    onChangeMaxTimeRespond  = (evt) => {\n        this.setState({max_resolution_time : evt})\n    }\n\n    onChangeHandlerId = (evt) => {\n       \n        this.setState({handled_by_user_id:evt})\n    }\n\n    onChangeForwardto= (evt) => {\n        console.log(evt)\n        this.setState({handled_by_user_id:evt})\n    }\n\n\n    finishForward = () => {\n        this.props.finishForward('')\n    }\n\n    saveTimeRespond = async () => {\n        if (this.props.role.includes('Help Desk')) {\n            const body = {\n                ticket_id : this.props.ticket_id,\n                handled_by_user_id : payload.userId,\n                respond_at : dateformat(new Date(),'yyyy-mm-dd HH:MM:ss')\n            }\n            try {\n                await axios.post(`/api/ccs-ticket-time-respond`,body)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        console.log('time respond saved')\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    setTicketHandler = async () => {\n\n        if (this.props.role.includes('Help Desk')) {\n            \n                const body = {\n                    handled_by_user_id : payload.userId,\n                    status_id : 4,\n                }\n                try{\n                    await axios.post(`/api/ccs-ticket-set-handler-queued/`,body)\n                    .then(response =>{\n                        if (response.data.status === 200) {\n\n                            console.log('ticket forwarded auto')\n                           // insertLog('Set handler Ticket ID '+this.state._id,this.state.module_id)\n                            \n                        }\n                    } )\n                }catch(e){\n                    this.notify('ERROR',e)\n                }\n            \n        }\n    }\n\n    \n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        \n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n        \n       \n        var body = {\n            module_id: this.state.module_id,\n            isAuto:this.state.isAuto,\n            handled_by_user_id: this.state.isAuto ? '' :  this.state.handled_by_user_id,\n            ticket_id : this.props.ticket_id,\n            file_url:this.state.file_url,\n            max_resolution_time : this.state.max_resolution_time\n        }\n        if(this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan')  || this.props.role.includes('Specialist')) {\n            body.isAuto =false\n            body.handled_by_user_id =  this.state.handled_by_user_id\n        }\n        if (editor !== undefined && editor !== null) {\n            body.note  = editor.innerHTML\n        }else {\n            body.note  = ''\n        }\n     \n        body.updated_by = this.state.created_by\n        \n        \n        try{\n            await axios.put(`/api/ccs-ticket-forward/${this.state._id}`,body)\n            .then(response =>{\n                if (response.data.status === 200) {\n\n                    this.state.formdata.map((item,i) => {\n                        data.append('file',item)\n                    })\n                    try{\n                        axios.post('/upload-file-ccs',data)\n                        .then((response_upload) => {\n                          \n                            if (response_upload.data.success) {\n                            // this.setState({isLoading:false, uploadStatus:true, validFileUrl:true})\n                            }else {\n                            //this.setState({ isLoading:false, uploadStatus:false, validFileUrl:false})\n                            }\n                           \n                        })\n                    }catch(err_file_upload){\n                        console.log(err_file_upload)\n                    }\n                  \n                    this.saveTimeRespond()\n                    this.setTicketHandler()\n                    insertLog('Forward Ticket ID '+this.state._id,this.state.module_id)\n                    this.finishForward()\n                    this.notify('SUCCESS','Succesfully Send Ticket')\n                    //window.history.go(-1)\n                }else {\n                    this.notify('ERROR','Failed processing data')\n                }\n            } )\n        }catch(e){\n            this.notify('ERROR',e)\n        }\n         \n    }\n\n    handleLoad = (uploadedFile, uploadedData) => {\n       \n        const { name, size, type, lastModified } = uploadedFile;\n        const file = {\n          \n          name,\n          size,\n          type,\n          data: uploadedData,\n          lastModified: new Date(lastModified),\n        }\n        \n\n        this.setState({file_url : [...this.state.file_url,(uploadedFile.name)],formdata : [...this.state.formdata,(uploadedFile)] })\n\n       \n        \n    }\n\n    deleteFile = (file) => {\n        \n        const result = this.state.formdata.filter(({name}) => !name.includes(file))\n        \n        this.setState({formdata : result})\n        var index = this.state.file_url.indexOf(file);\n \n        if (index > -1) {\n            this.state.file_url.splice(index, 1);\n        }\n    }\n\n    showForm = () => {\n        this.props.showForm('')\n    }\n   \n\n    render(){\n        return(\n            <div >\n                {/* <ToastContainer /> */}\n                {(() => {\n                    if (this.props.role.includes('Supervisor CCS') || this.props.role.includes('Superadmin')){\n                       \n                        return(\n                            <div>\n                            <Grid className=\"box grid-example md-cell md-cell--12\">\n                                <h2 className=\"md-cell md-cell--12\">\n                                Distribute Ticket\n                                </h2> \n                        \n                                <Cell size={12} >\n                                <SelectionControl\n                                    id=\"checkbox-read-documentation-page\"\n                                    name=\"simple-checkboxes[]\"\n                                    label=\"Auto Handler \"\n                                    type=\"checkbox\"\n                                    value=\"documentation\"\n                                    defaultChecked\n                                    onChange={() => this.setState({isAuto:!this.state.isAuto})}\n                                />\n                                {!this.state.isAuto ? (\n                                <Fragment>\n                                    <SelectField\n                                        id=\"select-field-2\"\n                                        label=\"Select Handler Manually\"\n                                        placeholder=\"Select Handler\"\n                                       \n                                        menuItems={this.state.helpdesk}\n                                        onChange={this.onChangeHandlerId}\n                                        filter = {Autocomplete.fuzzyFilter}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                        helpOnFocus\n                                        helpText=\"Type the Name\"\n                                        errorText={<span>A <em>real</em> value is required for this field</span>}\n                                    />\n                                    \n                                </Fragment>\n                                \n\n                                ):''}\n\n                                <TextField \n                                    label=\"Max Resolution Time in days (Optional)\"\n                                    placeholder=\"in Number\"\n                                    className=\"md-cell md-cell--4-tablet md-cell--8\"\n                                    type=\"number\"\n                                    onChange={this.onChangeMaxTimeRespond}\n                                    value={this.state.max_resolution_time}\n                                />\n                                <hr />\n                                <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                                <Button  raised onClick={this.showForm}  >Cancel</Button>\n                                </Cell>\n                            </Grid>\n                            </div>\n                        )\n                    }\n                    else if(this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan') ) {\n                        return(\n                            <div>\n                            <Grid className=\"box grid-example md-cell md-cell--12\">\n                                <h2 className=\"md-cell md-cell--12\">\n                                Forward Ticket\n                                </h2> \n                        \n                                <Cell size={12} >\n                           \n                                   \n                                    <Fragment>\n                                 {this.state.ticket_forward_from_support.length < 1 ? (\n                                     <SelectField\n                                     id=\"select-field-2\"\n                                     label=\"Forward to Support\"\n                                     placeholder=\"Forward to Support\"\n                                     menuItems={this.state.implementator}\n                                     onChange={this.onChangeHandlerId}\n                                     filter = {Autocomplete.fuzzyFilter}\n                                     className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                     helpOnFocus\n                                    \n                                 />) :(\n                                    <Fragment>\n\n                                    <div className=\"notification\">\n                                        <p>Forward only to Specialist. Because the ticket forwarded 2 or more  times.</p>\n                                    </div>\n                                    <SelectField\n                                        id=\"select-field-4\"\n                                        label=\"Forward to Specialist\"\n                                        placeholder=\"Forward to Specialist\"\n                                        menuItems={this.state.specialists}\n                                        onAutocomplete={this.onChangeForwardto}\n                                        onChange={this.onChangeForwardto}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                        helpOnFocus\n                                        helpText=\"Type the Name\"\n                                        errorText={<span>A <em>real</em> value is required for this field</span>}\n                                    />\n                                    </Fragment>\n                                 )}\n                                    \n                                <br />\n                               \n                                <div className=\"summernote\">\n\n                                </div>  \n                                <br />\n                                {this.state.formdata.map((item,i) => (\n                                        <div>\n                                            <Chip  className=\"state-chip\" label={item.name} removable    onClick={() =>this.deleteFile(item.name)} /><br />\n                                        </div>\n                                    ))}\n                                <br />\n                                    <FileUpload\n                                        id=\"multiple-file-upload\"\n                                        multiple\n                                        onLoad={this.handleLoad}\n                                        style={{backgroundColor:'#359ce6'}}\n                                        name=\"multipart-file-upload\"\n                                        label=\"Select files\"\n                                    />\n                                 </Fragment>\n                                    \n                                 <hr />\n                                <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                                <Button  raised onClick={this.showForm}  >Cancel</Button>\n                                 </Cell>\n                             </Grid>\n                        </div>\n                        )\n                    }\n                    else if (this.props.role.includes('Specialist')) {\n                        return(\n                            <div>\n                                <Grid className=\"box grid-example md-cell md-cell--12\">\n                                    <h2 className=\"md-cell md-cell--12\">\n                                    Send Ticket\n                                    </h2> \n                                    <Cell size={12} >\n                                    <SelectField\n                                        id=\"select-field-5\"\n                                        label=\"Send to Support\"\n                                        placeholder=\"Send to Support\"\n                                        menuItems={this.state.implementator}\n                                        onChange={this.onChangeForwardto}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                        helpOnFocus\n                                        \n                                        helpText=\"Type the Name\"\n                                        errorText={<span>A <em>real</em> value is required for this field</span>}\n                                    />\n\n                                    <br />\n                               \n                                    <div className=\"summernote\">\n\n                                    </div>  \n                                    <br />\n                                    {this.state.formdata.map((item,i) => (\n                                            <div>\n                                                <Chip  className=\"state-chip\" label={item.name} removable    onClick={() =>this.deleteFile(item.name)} /><br />\n                                            </div>\n                                        ))}\n                                    <br />\n                                        <FileUpload\n                                            id=\"multiple-file-upload\"\n                                            multiple\n                                            onLoad={this.handleLoad}\n                                            style={{backgroundColor:'#359ce6'}}\n                                            name=\"multipart-file-upload\"\n                                            label=\"Select files\"\n                                        />\n                                        <hr />\n                                        <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                                        <Button  raised onClick={this.showForm}  >Cancel</Button>\n\n                                    </Cell>\n                                </Grid>\n                            </div>\n                        )\n                    }\n                    \n                })()}\n                    \n                \n               \n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport {  DialogContainer, TextField, Chip, Button, Grid, Cell, FileUpload } from 'react-md';\nimport axios from 'axios'\nimport $ from 'jquery'\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport { insertLog } from '../../../../log/InsertLog'\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nvar dt = []\nconst clients = []\nvar data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            total_split: 0,\n            formdata: [],\n            clients: [],\n            client_id: '',\n            file_url: [],\n            client_id: '',\n            title: '',\n            description: '',\n            status_id: 6,\n            category_id: '',\n            priority_id: '',\n            handled_by_user_id: '',\n            created_by: payload.userId,\n            dialogSplitVisible: false,\n            dialogFinishSplitVisible: false\n        }\n\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        this.setState({ module_id: module_id })\n\n\n        $('.summernote').summernote({\n            placeholder: 'Add Description',\n            height: '200'\n        })\n        try {\n            await axios.get(`/api/ccs-ticket/${this.props.ticket_id}`).then(\n                response => {\n\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            this.setState({\n                                client_id: item.client_id\n                            })\n                        })\n                    }\n\n                }\n            )\n        } catch (error) {\n            console.log(error)\n        }\n\n\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n\n    onChangeTitle = (evt) => {\n        console.log(evt)\n        this.setState({ title: evt })\n    }\n\n    showForm = () => {\n        this.props.showForm('')\n    }\n\n    finishSplit = () => {\n        this.props.finishSplit()\n        this.setState({ dialogFinishSplitVisible: false })\n    }\n\n    splitAdded = () => {\n        this.props.splitAdded(this.state.total_split)\n    }\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        var editor = window.document.getElementsByClassName('note-editable')[0]\n        var body = {\n            client_id: this.state.client_id,\n            file_url: this.state.file_url,\n            title: this.state.title,\n            description: editor.innerHTML,\n            category_id: this.state.category_id,\n            status_id: this.state.status_id,\n            priority_id: this.state.priority_id,\n            handled_by_user_id: this.state.handled_by_user_id,\n            parent_ticket_id: this.props.ticket_id\n        }\n\n\n        if (this.state._id !== '' && this.state._id !== undefined) {\n            body.updated_by = this.state.created_by\n\n            await axios.put(`/api/ccs-ticket/${this.state._id}`, body)\n                .then(response => {\n                    try {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                title: '',\n                                file_url: [],\n                                dialogSplitVisible: false,\n                            })\n                            editor.innerHTML = ''\n                            if (this.state.file_url.length > 0) {\n                                this.state.formdata.map((item, i) => {\n                                    data.append('file', item)\n                                })\n                                try {\n                                    axios.post('/upload-file-ccs', data)\n                                        .then((response) => {\n\n                                            if (response.data.success) {\n                                                this.setState({ file_url: [], formdata: [] })\n\n                                            } else {\n\n                                            }\n\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n                            // this.notify('SUCCESS',response.data.message)\n\n                            // this.showToast(response.data.message,'success')\n                        } else {\n                            // this.showToast('Failed Updating Data','danger')\n                        }\n\n                    } catch (error) {\n                        this.showToast(error, 'danger')\n                    }\n                })\n        } else {\n            body.created_by = this.state.created_by\n            body.status_id = 6\n            try {\n                await axios.post(`/api/ccs-ticket`, body)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({\n                                title: '',\n\n                                dialogSplitVisible: false,\n                            })\n                            editor.innerHTML = ''\n                            if (this.state.file_url.length > 0) {\n                                this.state.formdata.map((item, i) => {\n                                    data.append('file', item)\n                                })\n                                try {\n                                    axios.post('/upload-file-ccs', data)\n                                        .then((response) => {\n\n                                            if (response.data.success) {\n                                                this.setState({ file_url: [], formdata: [] })\n\n                                            } else {\n\n                                            }\n\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n                            //this.showToast(response.data.message,'success')\n                        } else {\n                            // this.showToast('Failed Inserting Data','danger')\n                        }\n                        //  this.notify('SUCCESS',response.data.message)\n                        //window.location.assign('/ccs/task')\n                        this.state.total_split += 1\n                        this.splitAdded()\n                        insertLog('Added  Ticket  Split Parent ID  ' + this.props.ticket_id, this.state.module_id)\n\n\n\n                    })\n            } catch (error) {\n                this.showToast(error, 'danger')\n            }\n        }\n    }\n\n\n    handleLoad = (uploadedFile, uploadedData) => {\n\n        const { name, size, type, lastModified } = uploadedFile;\n        const file = {\n\n            name,\n            size,\n            type,\n            data: uploadedData,\n            lastModified: new Date(lastModified),\n        }\n\n\n        this.setState({ file_url: [...this.state.file_url, (uploadedFile.name)], formdata: [...this.state.formdata, (uploadedFile)] })\n\n\n\n    }\n\n    deleteFile = (file) => {\n\n        const result = this.state.formdata.filter(({ name }) => !name.includes(file))\n\n        this.setState({ formdata: result })\n        var index = this.state.file_url.indexOf(file);\n\n        if (index > -1) {\n            this.state.file_url.splice(index, 1);\n        }\n    }\n\n    render() {\n        return (\n            <div >\n                <Grid className=\" box  md-cell md-cell--12\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Split Ticket\n                    </h2>\n\n                    <Cell size={12} >\n\n                        <TextField\n                            id=\"floating-label-counter-field\"\n                            label=\"Title\"\n                            placeholder=\"Title\"\n                            maxLength={100}\n                            className=\"md-cell md-cell--bottom\"\n                            value={this.state.title}\n                            onChange={(evt) => this.onChangeTitle(evt)}\n                        />\n\n\n                        <div className=\"summernote\">\n                            {/* This is for text editor Summernote */}\n                        </div>\n                        <br />\n\n                        {this.state.formdata.map((item, i) => (\n                            <div>\n                                <Chip className=\"state-chip\" label={item.name} removable onClick={() => this.deleteFile(item.name)} /><br />\n                            </div>\n                        ))}\n\n\n                        <br />\n                        <FileUpload\n                            id=\"multiple-file-upload\"\n                            multiple\n                            onLoad={this.handleLoad}\n                            style={{ backgroundColor: '#359ce6' }}\n                            name=\"multipart-file-upload\"\n                            label=\"Select files\"\n                        />\n                        <hr />\n                        <Button primary raised onClick={() => this.setState({ dialogSplitVisible: true })} >Submit</Button> &nbsp;\n                    <Button raised onClick={this.showForm} >Cancel</Button> &nbsp;\n                    {this.state.total_split > 0 ? (\n                            <Button primary raised onClick={() => this.setState({ dialogFinishSplitVisible: true })} >FINISH SPLIT</Button>\n                        ) : ''}\n                    </Cell>\n\n                </Grid>\n\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogSplitVisible}\n                    onHide={() => !this.state.dialogSplitVisible}\n                    actions={[<Button raised primary onClick={this.handleSubmit} >YES</Button>, <Button onClick={() => this.setState({ dialogSplitVisible: false })} >NO</Button>]}\n                    title=\"Confirmation\"\n                >\n                    <p>Are you sure to proceed?</p>\n                </DialogContainer>\n\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogFinishSplitVisible}\n                    onHide={() => !this.state.dialogFinishSplitVisible}\n                    actions={[<Button raised primary onClick={this.finishSplit} >YES</Button>, <Button onClick={() => this.setState({ dialogFinishSplitVisible: false })} >NO</Button>]}\n                    title=\"Confirmation\"\n                >\n                    <p>Are you sure to finish?</p>\n                </DialogContainer>\n\n                <ToastContainer />\n            </div>\n        )\n    }\n}","import React,{Component,Fragment} from 'react' \nimport { Grid,Cell, Paper,TextField,Chip,SelectField,Button,Autocomplete, SelectionControlGroup,FileUpload, Card } from 'react-md'; \nimport axios from 'axios'\nimport $ from 'jquery'\nimport dateformat from 'dateformat'\n import * as summernote from 'summernote/dist/summernote-lite'\nimport {insertLog} from '../../../../log/InsertLog'\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst clients=[]\nvar  data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id:'',\n            formdata: [],\n            ticket_replies:[],\n            clients :[],\n            file_url:[],\n            client_id:'',\n            title:'',\n            description:'',\n            created_by : payload.userId\n\n        } \n\n        this.onChangeClientId = this.onChangeClientId.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n\n        $('.summernote').summernote({\n            placeholder:'Add Note',\n            height:'20vh'\n        })\n\n        if (this.props.role.includes('Help Desk')) { \n            try{\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-id/${this.props.ticket_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ticket_replies:response.data.data})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    showForm = (act) => {\n        this.props.showForm('')\n    }\n\n    onChangeClientId = (evt) => {\n       \n        var index = this.state.clients.indexOf(evt)\n        var client_id= clients[index]\n        console.log(client_id)\n        this.setState({client_id:client_id})\n    }\n\n    onChangeTitle= (evt) => {\n        console.log(evt)\n        this.setState({title:evt})\n    }\n\n    saveTimeRespond = async () => {\n        if (this.props.role.includes('Help Desk')) {\n            if (this.state.ticket_replies.length < 1 ) {\n                const body = {\n                    ticket_id : this.props.ticket_id,\n                    handled_by_user_id : payload.userId,\n                    respond_at : dateformat(new Date(),'yyyy-mm-dd HH:MM:ss')\n                }\n                try {\n                    await axios.post(`/api/ccs-ticket-time-respond`,body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            console.log('time respond saved')\n                        }\n                    })\n                }catch(e){\n                    console.log(e)\n                }\n            }\n            \n        }\n    }\n\n    setTicketHandler = async () => {\n\n        if (this.props.role.includes('Help Desk')) {\n            if (this.state.ticket_replies.length < 1 ) {\n                const body = {\n                    handled_by_user_id : payload.userId,\n                    status_id : 4,\n                }\n                try{\n                    await axios.post(`/api/ccs-ticket-set-handler-queued/`,body)\n                    .then(response =>{\n                        if (response.data.status === 200) {\n                            console.log('ticket forwarded auto')\n                        \n                        }\n                    } )\n                }catch(e){\n                    this.notify('ERROR',e)\n                }\n            }\n        }\n    }\n\n    \n\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n        var body = {\n            module_id: this.state.module_id, // this is for notifocation , module_id field\n            ticket_id: this.props.ticket_id,\n            file_url:this.state.file_url,\n            replies:editor.innerHTML,\n            status_id : 5\n        }\n        \n        \n        if (this.state._id !=='' && this.state._id !== undefined) {\n            body.updated_by = this.state.created_by\n\n            await axios.put(`/api/ccs-ticket-reply/${this.state._id}`,body)\n             .then(response => {\n                 try { \n                     if (response.data.status ===200) {\n                        \n                         if (this.state.file_url.length > 0 ) {\n                            this.state.formdata.map((item,i) => {\n                                data.append('file',item)\n                            })\n                            try{\n                             axios.post('/upload-file-ccs',data)\n                              .then((response) => {\n                                 \n                                      if (response.data.success) {\n                                     // this.setState({isLoading:false, uploadStatus:true, validFileUrl:true})\n                                      }else {\n                                      //this.setState({ isLoading:false, uploadStatus:false, validFileUrl:false})\n                                      }\n                                  \n                              })\n                            }catch(error){\n                                console.log(error)\n                            }\n                          }\n                          this.notify('SUCCESS',response.data.message)\n                          window.location.assign('/ccs/task')\n                     }else{\n                        this.notify('ERROR','Failed Processing data')\n                     }\n                     \n                } catch (error) {\n                    this.notify('ERROR',error)\n                 }\n             })\n         }else {\n            body.created_by = this.state.created_by\n            await axios.post(`/api/ccs-ticket-reply`,body)\n             .then(response => {\n                 try { \n                     if (response.data.status ===200) {\n                         if (this.state.file_url.length > 0 ) {\n                            this.state.formdata.map((item,i) => {\n                                data.append('file',item)\n                            })\n                            try{\n                                axios.post('/upload-file-ccs',data)\n                                .then((response) => {\n                                    \n                                        if (response.data.success) {\n                                        //this.setState({isLoading:false, uploadStatus:true, validFileUrl:true})\n                                        }else {\n                                        //this.setState({ isLoading:false, uploadStatus:false, validFileUrl:false})\n                                        }\n                                    \n                                })\n                            }catch(error){\n                                console.log(error)\n                            }\n                          }\n                          this.notify('SUCCESS','You Replied this!')\n                          insertLog('Reply  Ticket  ID '+this.props.ticket_id,this.state.module_id)\n                          this.finishReply()\n                          this.saveTimeRespond()\n                          this.setTicketHandler()\n                            editor.innerHTML = '' \n\n                          window.history.go(-1)\n                          \n                     }else{\n                        this.notify('ERROR','Failed Processing data')\n                     }\n                     \n                } catch (error) {\n                    this.notify('ERROR',error)\n                 }\n             })\n         }  \n    }\n\n\n    handleLoad = (uploadedFile, uploadedData) => {\n       \n        const { name, size, type, lastModified } = uploadedFile;\n        const file = {\n          \n          name,\n          size,\n          type,\n          data: uploadedData,\n          lastModified: new Date(lastModified),\n        }\n        \n\n        this.setState({file_url : [...this.state.file_url,(uploadedFile.name)],formdata : [...this.state.formdata,(uploadedFile)] })\n\n       \n        \n    }\n\n    deleteFile = (file) => {\n        \n        const result = this.state.formdata.filter(({name}) => !name.includes(file))\n        \n        this.setState({formdata : result})\n        var index = this.state.file_url.indexOf(file);\n \n        if (index > -1) {\n            this.state.file_url.splice(index, 1);\n        }\n    }\n\n    finishReply = () => {\n        this.props.finishReply('')\n    }\n    \n    render(){\n        return(\n            <div >\n                <Grid className=\" box  md-cell md-cell--12\">\n                   {this.props.role.includes('Supervisor CCS') ? '' : (\n                        <h2 className=\"md-cell md-cell--12\">\n                            Reply Ticket\n                        </h2> \n                   )}\n                   \n                \n                  <Cell size={12} >\n\n                    <div className=\"summernote\">\n                        {/* This is for text editor Summernote */}\n                    </div>\n                    <br />\n\n                    {this.state.formdata.map((item,i) => (\n                        <div>\n                            <Chip  className=\"state-chip\" label={item.name} removable    onClick={() =>this.deleteFile(item.name)} /><br />\n                        </div>\n                    ))}\n                \n                \n                    <br />\n                    <FileUpload\n                        id=\"multiple-file-upload\"\n                        multiple\n                        onLoad={this.handleLoad}\n                        style={{backgroundColor:'#359ce6'}}\n                        name=\"multipart-file-upload\"\n                        label=\"Select files\"\n                    />\n                    <hr />\n                    <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                    <Button  raised onClick={this.showForm} >Cancel</Button>\n               </Cell>\n              \n               </Grid>\n               {/* <ToastContainer /> */}\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { TextField,  Button } from 'react-md';\nimport axios from 'axios'\nimport StarRatings from 'react-star-ratings'\n\n\n\nvar dt = []\nconst clients = []\nvar data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            formdata: [],\n            clients: [],\n            file_url: [],\n            client_id: '',\n            title: '',\n            description: ''\n        }\n\n        this.onChangeClientId = this.onChangeClientId.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        // $('.summernote').summernote({\n        //     placeholder:'Add Description',\n        //     height:'200'\n        // })\n\n        await axios.get(`/api/clients`)\n            .then(response => {\n                try {\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.client_code > 0) {\n                                var obj = {\n                                    label: item.client_code + ' - ' + item.client_name,\n                                    value: item._id\n                                }\n                                dt[i] = obj.label\n                                clients[i] = item._id\n                            }\n\n                        })\n\n                        this.setState({ clients: dt })\n\n                    }\n                } catch (error) {\n                    console.log(error)\n                }\n            })\n    }\n\n    onChangeClientId = (evt) => {\n\n        var index = this.state.clients.indexOf(evt)\n        var client_id = clients[index]\n        console.log(client_id)\n        this.setState({ client_id: client_id })\n    }\n\n    onChangeTitle = (evt) => {\n        console.log(evt)\n        this.setState({ title: evt })\n    }\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        var editor = window.document.getElementsByClassName('note-editable')[0]\n        var body = {\n\n            file_url: this.state.file_url,\n            client_id: this.state.client_id,\n            title: this.state.title,\n            description: editor.innerHTML\n        }\n        console.log(body)\n        console.log(data)\n\n        if (this.state._id !== '' && this.state._id !== undefined) {\n            body.updated_by = ''\n\n            await axios.put(`/api/ccs-ticket/${this.state._id}`, body)\n                .then(response => {\n                    try {\n                        if (response.data.status === 200) {\n\n                            if (this.state.file_url.length > 0) {\n                                this.state.formdata.map((item, i) => {\n                                    data.append('file', item)\n                                })\n                                axios.post('/upload-file-ccs', data)\n                                    .then((response) => {\n                                        try {\n                                            if (response.data.success) {\n                                                // this.setState({isLoading:false, uploadStatus:true, validFileUrl:true})\n                                            } else {\n                                                //this.setState({ isLoading:false, uploadStatus:false, validFileUrl:false})\n                                            }\n                                        } catch (error) {\n                                            console.log(error)\n                                        }\n                                    })\n                            }\n                            // this.showToast(response.data.message,'success')\n                        } else {\n                            // this.showToast('Failed Updating Data','danger')\n                        }\n\n                    } catch (error) {\n                        this.showToast(error, 'danger')\n                    }\n                })\n        } else {\n            body.created_by = ''\n            await axios.post(`/api/ccs-ticket`, body)\n                .then(response => {\n                    try {\n                        if (response.data.status === 200) {\n                            if (this.state.file_url.length > 0) {\n                                this.state.formdata.map((item, i) => {\n                                    data.append('file', item)\n                                })\n                                axios.post('/upload-file-ccs', data)\n                                    .then((response) => {\n                                        try {\n                                            if (response.data.success) {\n                                                //this.setState({isLoading:false, uploadStatus:true, validFileUrl:true})\n                                            } else {\n                                                //this.setState({ isLoading:false, uploadStatus:false, validFileUrl:false})\n                                            }\n                                        } catch (error) {\n                                            console.log(error)\n                                        }\n                                    })\n                            }\n                            //this.showToast(response.data.message,'success')\n                        } else {\n                            // this.showToast('Failed Inserting Data','danger')\n                        }\n\n                    } catch (error) {\n                        this.showToast(error, 'danger')\n                    }\n                })\n        }\n    }\n\n\n    handleLoad = (uploadedFile, uploadedData) => {\n\n        const { name, size, type, lastModified } = uploadedFile;\n        const file = {\n\n            name,\n            size,\n            type,\n            data: uploadedData,\n            lastModified: new Date(lastModified),\n        }\n\n\n        this.setState({ file_url: [...this.state.file_url, (uploadedFile.name)], formdata: [...this.state.formdata, (uploadedFile)] })\n\n\n\n    }\n\n    deleteFile = (file) => {\n\n        const result = this.state.formdata.filter(({ name }) => !name.includes(file))\n\n        this.setState({ formdata: result })\n        var index = this.state.file_url.indexOf(file);\n\n        if (index > -1) {\n            this.state.file_url.splice(index, 1);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <p>Rate</p>\n                <StarRatings\n\n                    starRatedColor=\"blue\"\n                    changeRating={(newrating) => this.changeRating(newrating)}\n                    numberOfStars={5}\n                    name='rating'\n                />\n                <p>Review</p>\n                <div className=\"box\">\n                    <TextField rows={2} placeholder=\"Review Notes\" fullWidth value={this.state.reviews}\n                        onChange={(evt) => this.changeReview(evt)}\n                    />\n                </div>\n                <hr />\n                <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                <Button raised  >Cancel</Button>\n\n            </div>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport { savePDF } from '@progress/kendo-react-pdf'\n\nimport {\n    Card,\n    Grid,\n    DatePicker,\n    MenuButton,\n    Cell,\n    TextField,\n    Button,\n    SelectField,\n    FontIcon,\n} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport ReactToPrint from 'react-to-print';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\n\nimport { Session } from 'bc-react-session'\nconst { payload } = Session.get()\n\nclass LoadChild extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: this.props.parent_ticket_id,\n            data: [],\n        }\n    }\n\n    async componentDidMount() {\n        const parent_ticket_id = this.props.parent_ticket_id\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.props.child_ticket !== undefined && this.props.child_ticket.length > 0 ?\n                    this.props.child_ticket.map((item, i) => (\n                        <Fragment>\n\n                            <tr>\n                                <td ></td>\n                                <td style={{ paddingLeft: '2.5vw' }}><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                                <td>\n                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b> </Link> &nbsp;\n                            </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.priority_id !== '' ? (\n                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                    ) : ''}\n                                </td>\n\n                                <td>\n                                    {item.full_name_handler !== '' && item.full_name_handler !== null ? (\n                                        <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name_handler}</Link></span>\n                                    ) : ''}\n                                </td>\n                                <td>\n\n                                    <span>\n                                        <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                    </span>\n\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                </td>\n\n                            </tr>\n\n                        </Fragment>\n\n                    )) : ''}\n\n            </Fragment>\n\n        )\n    }\n}\n\nexport default class AllTickets extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            datatoPDF: [],\n            dataToExport: [],\n            dataToExportPDF: [],\n            dialogDeleteVisible: false,\n            loadChild: [],\n            _id: '',\n            categories: [],\n            clients: [],\n            client_id: '',\n            priorities: [],\n            child_ticket: [],\n            status: [],\n            key: '',\n            status_id: '',\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            asc: 1,\n            isLoading: true,\n            isFilter: false,\n            currentPage: 1,\n            displayPerPage: 100,\n            total_data: 0,\n\n        }\n\n        this.tableData = React.createRef();\n        this.printable = React.createRef();\n\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('TICKET_ADDED', (data) => {\n\n            this.componentDidMount()\n        })\n\n        this.socket.on('UPDATE_ANSWER', (data) => {\n\n            this.componentDidMount()\n\n\n        })\n\n\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n\n        })\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('TICKET_ADDED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('QUEUED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n\n    }\n\n    async componentDidMount() {\n        if (this.props.role.includes('Customer')) {\n            var client_id = ''\n\n            await axios.get(`/api/user/${payload.userId}`)\n                .then(response => {\n                    try {\n                        if (response.data.status === 200) {\n\n                            response.data.data.map((item, i) => {\n                                client_id = item.client_id\n\n                            })\n                        }\n                    } catch (error) {\n                        console.log(error)\n                    }\n                })\n            this.setState({\n                client_id: client_id\n            })\n\n            try {\n                //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents-total?client_id=${client_id}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents?client_id=${client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            this.state.data.map(async (item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    item.loadChild = true\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n        } else if (this.props.role.includes('Supervisor CCS')) {\n            var limit = ``\n            try {\n                //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents-total?currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                //?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            this.state.data.map(async (item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    item.loadChild = true\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n            try {\n                await axios.get(`/api/clients`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                if (item.client_code > 0) {\n                                    var obj = {\n                                        label: item.client_code + '-' + item.client_name,\n                                        value: item._id\n                                    }\n                                    dt[i] = obj\n                                }\n\n                                return false\n                            })\n                            this.setState({ clients: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n        }\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-status`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: <p style={{ color: item.label_color }}><b>{item.status}</b></p>,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ status: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    setUpdate = (id) => {\n        window.location.assign(`/ccs/ticket/form?ticket_id=${id}`)\n\n    }\n\n    setDelete = (id) => {\n        this.setState({ dialogDeleteVisible: true, _id: id })\n\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        if (this.props.role.includes('Customer')) {\n            var filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}`\n\n            if (evt === '') {\n                try {\n                    await axios.get(`/api/ccs-ticket-parents-total?client_id=${this.state.client_id}${filterString}&currentPage=0&displayPerPage=0`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}${filterString}&currentPage=${1}&displayPerPage=${100}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n                this.state.data.map(async (item, i) => {\n                    if (item.total_child > 0) {\n                        try {\n                            await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                                .then(response_child => {\n                                    if (response_child.data.status === 200) {\n\n                                        item.child_ticket = response_child.data.data\n                                    }\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                    }\n                })\n\n                this.setState({\n                    currentPage: 1, displayPerPage: 100\n                })\n\n            } else {\n                try {\n                    await axios.get(`/api/ccs-ticket-parents-total?client_id=${this.state.client_id}${filterString}&key=${evt}&currentPage=0&displayPerPage=0`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}${filterString}&key=${evt}&currentPage=1&displayPerPage=100`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n                this.state.data.map(async (item, i) => {\n                    if (item.total_child > 0) {\n                        try {\n                            await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                                .then(response_child => {\n                                    if (response_child.data.status === 200) {\n\n                                        item.child_ticket = response_child.data.data\n                                    }\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                    }\n                })\n\n                this.setState({\n                    currentPage: 1, displayPerPage: 100\n                })\n\n            }\n        } else if (this.props.role.includes('Supervisor CCS')) {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n            if (evt === '') {\n                try {\n                    await axios.get(`/api/ccs-ticket-parents-total${filterString}&currentPage=0&displayPerPage=0`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n                try {\n                    await axios.get(`/api/ccs-ticket-parents${filterString}&currentPage=1&displayPerPage=100`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n                this.state.data.map(async (item, i) => {\n                    if (item.total_child > 0) {\n                        try {\n                            await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                                .then(response_child => {\n                                    if (response_child.data.status === 200) {\n\n                                        item.child_ticket = response_child.data.data\n                                    }\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                    }\n                })\n\n                this.setState({\n                    currentPage: 1, displayPerPage: 100\n                })\n\n            } else {\n                try {\n                    await axios.get(`/api/ccs-ticket-parents-total${filterString}&key=${evt}&currentPage=0&displayPerPage=0`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-ticket-parents${filterString}&key=${evt}&currentPage=1&displayPerPage=100`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                this.state.data.map(async (item, i) => {\n                    if (item.total_child > 0) {\n                        try {\n                            await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                                .then(response_child => {\n                                    if (response_child.data.status === 200) {\n\n                                        item.child_ticket = response_child.data.data\n                                    }\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                    }\n                })\n\n                this.setState({\n                    currentPage: 1, displayPerPage: 100\n                })\n\n            }\n        }\n    }\n\n\n\n    handle = (id) => {\n\n        this.props.handle(id)\n\n    }\n    onChangeDateFrom = (evt) => {\n\n        this.setState({ date_from: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    onChangeClientId = (evt) => {\n        this.setState({ client_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n    onChangeStatusId = (evt) => {\n        this.setState({ status_id: evt })\n    }\n\n\n    filter = async () => {\n        var filterString = ''\n        if (this.props.role.includes('Customer')) {\n            filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}`\n\n            try {\n                await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&key=${this.state.key}${filterString}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data.length })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&key=${this.state.key}${filterString}&currentPage=1&displayPerPage=100`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            this.state.data.map(async (item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n        } else if (this.props.role.includes('Supervisor CCS')) {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n            try {\n                await axios.get(`/api/ccs-ticket-parents${filterString}&key=${this.state.key}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data.length })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-ticket-parents${filterString}&key=${this.state.key}&currentPage=1&displayPerPage=100`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            this.state.data.map(async (item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n        }\n\n        this.setState({\n            currentPage: 1, displayPerPage: 100\n        })\n\n\n\n\n    }\n\n    resetFilter = () => {\n        this.setState({\n            category_id: '',\n            priority_id: '',\n            status_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: this.props.role.includes('Customer') ? this.state.client_id : '',\n        })\n    }\n\n    toggleLoadChild = (i) => {\n        const loadChild = this.state.loadChild\n        loadChild[i] = !loadChild[i]\n\n        this.setState({\n            loadChild: loadChild\n        });\n\n        console.log(this.state.loadChild)\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n        if (this.props.role.includes('Customer')) {\n            filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}`\n\n            try {\n                await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&key=${this.state.key}${filterString}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ isLoading: false, data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            this.state.data.map(async (item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    item.loadChild = true\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n        } else if (this.props.role.includes('Supervisor CCS')) {\n\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n            try {\n                await axios.get(`/api/ccs-ticket-parents${filterString}&key=${this.state.key}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ isLoading: false, data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            this.state.data.map(async (item, i) => {\n\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    item.loadChild = true\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n        }\n\n    }\n\n\n    exportXLS = async () => {\n        var dataToExport = []\n\n        var filterString = ''\n\n        filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets${filterString}&key=${this.state.key}&currentPage=${0}&displayPerPage=${0}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map(async (item, i) => {\n                            var obj = {}\n                            obj['NO'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Title'] = item.title\n                            obj['Parent ID'] = item.parent_ticket_id\n                            {\n                                item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                    obj['Description'] = '[MEDIA]'\n                                ) : (\n                                        obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                    )\n                            }\n                            obj['BPR/Client'] = item.client_name\n                            obj['Priority'] = item.priority\n                            obj['Handled By'] = item.full_name\n                            obj['Status'] = item.status\n                            obj['Respond Time (h:m:s)'] = item.max_respond_at !== null && item.max_respond_at !== '' ? dateformat(item.max_respond_at, 'dd mmm yyyy, HH:MM') : '-'\n                            obj['Resolution Time (h:m:s)'] = item.max_resolution_at !== null && item.max_resolution_at !== '' ? dateformat(item.max_resolution_at, 'dd mmm yyyy, HH:MM') : '-'\n\n                            dt.push(obj)\n\n                            return false\n                        })\n                        dataToExport = dt\n                        this.setState({ dataToExport: dataToExport })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All Tickets  per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n\n\n\n    beforeGetContent = async () => {\n        if (this.props.role.includes('Customer')) {\n            var filterString = ''\n\n            filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}`\n\n\n            try {\n\n                await axios.get(`/api/ccs-tickets?currentPage=${0}&displayPerPage=${0}&client_id=${this.state.client_id}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ dataToExportPDF: response.data.data })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n\n        } else if (this.props.role.includes('Supervisor CCS')) {\n            var filterString = ''\n\n            filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n\n            try {\n\n                await axios.get(`/api/ccs-tickets?currentPage=${0}&displayPerPage=${0}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ dataToExportPDF: response.data.data })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n\n        }\n    }\n\n    beforeGetPrint = () => {\n        printable.loadData()\n\n    }\n\n\n\n\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        const { data } = this.state\n\n\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div >\n                    <ToastContainer />\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%' , borderRadius: '10px' }}>\n                                {(() => {\n                                    if (this.props.role.includes('Customer')) {\n                                        return <h4>My Tickets</h4>\n                                    } else {\n                                        return <h4>All Tickets</h4>\n                                    }\n                                })()}\n                                <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                                    <Cell size={10}></Cell>\n                                    <Cell size={2}>\n                                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                                        <MenuButton\n                                            id=\"menu-button-2\"\n                                            style={{ listStyle: 'none' }}\n                                            menuItems={[{\n                                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                            }, {\n                                                primaryText:\n                                                    // <a href={socket_address+`/api/ccs-tickets-print`} target='_blank' style={{textDecoration:'none'}}>PDF</a>\n                                                    (<ReactToPrint\n                                                        onBeforeGetContent={this.beforeGetContent}\n                                                        trigger={() => <p>PDF</p>}\n                                                        content={() => this.componentRef}\n                                                    />),\n                                            }]}\n\n                                            centered\n                                            anchor={{\n                                                x: MenuButton.HorizontalAnchors.CENTER,\n                                                y: MenuButton.VerticalAnchors.CENTER,\n                                            }}\n                                        >\n                                            <button className=\"button is-small is-primary\">\n                                                <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                                            </button>\n                                        </MenuButton>\n                                        <div style={{ display: \"none\" }}>\n                                            <Printable\n                                                ref={el => (this.componentRef = el)}\n                                                data={this.state.dataToExportPDF}\n                                                role={this.props.role}\n                                            />\n                                        </div>\n                                    </Cell>\n                                </Grid>\n                                {this.state.isFilter ? (\n                                    <Grid>\n                                        <Cell size={12}>\n                                            <h4>Filter</h4>\n\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-portrait\"\n                                                label=\"From Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateFrom}\n                                                value={this.state.date_from}\n                                            />\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-landscape\"\n                                                label=\"To Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateTo}\n                                                value={this.state.date_to}\n                                            />\n                                            {(() => {\n                                                if (this.props.role.includes('Supervisor CCS')) {\n                                                    return (\n                                                        <SelectField\n                                                            leftIcon={\"view_list\"}\n                                                            label=\"Select BPR/Client\"\n                                                            fullWidth\n                                                            menuItems={this.state.clients}\n                                                            onChange={this.onChangeClientId}\n                                                            value={this.state.client_id}\n                                                        />\n                                                    )\n                                                }\n                                            })()}\n                                            {(() => {\n                                                if (this.props.role.includes('Supervisor CCS') || this.props.role.includes('Customer')) {\n                                                    return (\n                                                        <Fragment>\n                                                            <SelectField\n                                                                leftIcon={\"view_list\"}\n                                                                label=\"Select Priority\"\n                                                                fullWidth\n                                                                menuItems={this.state.priorities}\n                                                                onChange={this.onChangePriorityId}\n                                                                value={this.state.priority_id}\n                                                            />\n                                                            <SelectField\n                                                                leftIcon={\"view_list\"}\n                                                                label=\"Select Category\"\n                                                                fullWidth\n                                                                menuItems={this.state.categories}\n                                                                onChange={this.onChangeCategoryId}\n                                                                value={this.state.category_id}\n                                                            />\n                                                            <SelectField\n                                                                leftIcon={\"view_list\"}\n                                                                label=\"Select Status\"\n                                                                fullWidth\n                                                                menuItems={this.state.status}\n                                                                onChange={this.onChangeStatusId}\n                                                                value={this.state.status_id}\n                                                            />\n                                                        </Fragment>\n                                                    )\n                                                }\n                                            })()}\n\n                                            <br />\n                                            <Button raised primary onClick={this.filter} >Apply</Button>\n                                            <Button flat onClick={this.resetFilter} >Reset</Button>\n\n                                        </Cell>\n                                    </Grid>\n                                ) : ''}\n\n                                <Grid ref={this.tableData} >\n                                    <Cell size={6}>\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                                    </Cell>\n                                </Grid>\n\n\n                                {(() => {\n                                    if (data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table  is-fullwidth is-striped\" ref={this.printable}  >\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '3%' }}></th>\n                                                            <th style={{ width: '10%' }}>#ID &nbsp; <span onClick={() => this.setSorting('_id')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '20%' }}>Request Tickets &nbsp; <span onClick={() => this.setSorting('title')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '15%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '15%' }}>Handled by &nbsp; <span onClick={() => this.setSorting('full_name')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '10%' }}>Ticket Status &nbsp; <span onClick={() => this.setSorting('status')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Created at &nbsp; <span onClick={() => this.setSorting('created_at')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {data.map((item, i) => (\n                                                            //  (i <= limitTop && i >= limitBottom) ? (\n\n\n                                                            <Fragment>\n                                                                <tr>\n                                                                    <td>\n                                                                        {item.total_child > 0 ? (\n                                                                            <a onClick={() => this.toggleLoadChild(i)}><FontIcon >{this.state.loadChild[i] ? 'arrow_drop_down' : 'arrow_right'} </FontIcon></a>\n\n                                                                        ) : ''}\n\n                                                                    </td>\n                                                                    <td> <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                                                                    <td>\n                                                                        <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b> </Link> &nbsp;\n                                                                    </td>\n                                                                    <td>\n                                                                        <p>{item.client_name}</p>\n                                                                    </td>\n                                                                    <td>\n                                                                        {item.priority_id !== '' ? (\n                                                                            <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                        ) : ''}\n                                                                    </td>\n                                                                    <td>\n                                                                        {item.full_name !== '' && item.full_name !== null ? (\n                                                                            <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                        ) : ''}\n                                                                    </td>\n                                                                    <td>\n\n                                                                        <span>\n                                                                            <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                                                        </span>\n\n                                                                    </td>\n                                                                    <td>\n                                                                        <p>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                    </td>\n                                                                </tr>\n\n                                                                {this.state.loadChild[i] && item.child_ticket !== undefined && item.child_ticket.length > 0 ? (\n                                                                    <LoadChild parent_ticket_id={item._id} child_ticket={item.child_ticket} role={this.props.role} />\n                                                                ) : ''}\n\n                                                            </Fragment>\n\n\n                                                            //   ):''    \n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n\n                                            </Fragment>\n\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Card>\n                        </Cell>\n\n\n\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n\n\n\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount = async () => {\n        /*\n       \n        */\n    }\n\n\n\n    render() {\n\n        const { data } = this.props\n\n        return (\n            <div style={{ padding: '2.5%' }}>\n                {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n                <h4>All Tickets</h4>\n                <table className=\"table is-fullwidth is-striped is-bordered\" style={{ fontSize: '9pt' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '5%' }}>No </th>\n                            <th style={{ width: '10%' }}>#ID </th>\n                            <th style={{ width: '10%' }}>Parent Ticket #ID </th>\n                            <th style={{ width: '28%' }}>Ticket Request </th>\n                            <th style={{ width: '10%' }}>BPR/Client </th>\n                            <th style={{ width: '7%' }}>Priority </th>\n                            <th style={{ width: '10%' }}>Handled by </th>\n                            <th style={{ width: '10%' }}>Replied at </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {data.map((item, i) => (\n                            // (i <= limitTop && i >= limitBottom) ? (\n                            <tr>\n                                <td>{i + 1}</td>\n                                <td><b>{item._id}</b></td>\n                                <td><b>{item.parent_ticket_id}</b></td>\n                                <td>\n                                    <b>{item.title}</b>\n                                    <p>Content: </p>\n\n                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n\n\n                                </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.priority_id !== null ? (\n                                        <span className={\"tag \" + item.label_color_priority}>{item.priority}</span>\n                                    ) : '-'}\n                                </td>\n                                <td>\n                                    <p style={{ fontSize: '8pt' }}>{item.full_name}</p>\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.updated_at, 'dd mmm yyyy HH:MM')}</p>\n                                </td>\n\n                            </tr>\n                            // )  : ''\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst printable = new Printable()","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport StarRatings from 'react-star-ratings'\nimport {\n    Card,\n    SelectField,\n    Grid,\n    DatePicker,\n    MenuButton,\n    Cell,\n    TextField,\n    Button,\n} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Completed extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            isFilter: false,\n            data: [],\n            dataToExportPDF: [],\n            priorities: [],\n            categories: [],\n            status: [],\n            status_id: '',\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            key: '',\n            client_id: '',\n            filter_from_date: '',\n            filter_to_date: '',\n            filter_category_id: '',\n            filter_priority_id: '',\n            total_data: 0,\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 100,\n        }\n        // this.socket = io('localhost:4000') //localhost\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n\n        if (this.props.role.includes('Customer')) {\n            var client_id = ''\n            await axios.get(`/api/user/${payload.userId}`)\n                .then(response => {\n                    try {\n                        if (response.data.status === 200) {\n\n                            response.data.data.map((item, i) => {\n                                client_id = item.client_id\n\n                                return false\n                            })\n                        }\n                    } catch (error) {\n                        console.log(error)\n                    }\n                })\n            this.setState({ client_id: client_id })\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total?client_id=${client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?client_id=${client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed-total/${payload.userId}?currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed/${payload.userId}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/clients`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                if (item.client_code > 0) {\n                                    var obj = {\n                                        label: item.client_code + '-' + item.client_name,\n                                        value: item._id\n                                    }\n                                    dt[i] = obj\n                                }\n\n                                return false\n                            })\n                            this.setState({ clients: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n        }\n\n        try {\n            await axios.get(`/api/ccs-status`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<p style={{ color: item.label_color }} >{item.status}</p>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ status: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        this.props.getTotalCompleted(this.state.data.length)\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n\n        if (this.props.role.includes('Customer')) {\n\n            if (evt === '') {\n                try {\n                    await axios.get(`/api/ccs-tickets-all-completed-total?currentPage=0&displayPerPage=0${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-tickets-all-completed?currentPage=1&displayPerPage=100${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            } else {\n                try {\n                    await axios.get(`/api/ccs-tickets-all-completed-total?currentPage=0&displayPerPage=0&key=${evt}${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-tickets-all-completed?currentPage=1&displayPerPage=100&key=${evt}${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        }\n        else {\n\n            if (evt === '') {\n                try {\n                    await axios.get(`/api/ccs-tickets-my-completed-total/${payload.userId}?currentPage=0&displayPerPage=0${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-tickets-my-completed/${payload.userId}?currentPage=1&displayPerPage=100${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            } else {\n                try {\n                    await axios.get(`/api/ccs-tickets-my-completed-total/${payload.userId}?currentPage=0&displayPerPage=0&key=${evt}${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-tickets-my-completed/${payload.userId}?currentPage=1&displayPerPage=100&key=${evt}${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeClientId = (evt) => {\n        this.setState({ client_id: evt })\n    }\n\n    onChangeDateFrom = (evt) => {\n\n        this.setState({ date_from: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n\n    filter = async () => {\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n        if (this.props.role.includes('Customer')) {\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total?currentPage=0&displayPerPage=0&key=${this.state.key}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?currentPage=1&displayPerPage=100&key=${this.state.key}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed-total/${payload.userId}?currentPage=0&displayPerPage=0&key=${this.state.key}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed/${payload.userId}?currentPage=1&displayPerPage=100&key=${this.state.key}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    resetFilter = () => {\n        this.setState({\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: this.props.role.includes('Customer') ? this.state.client_id : ''\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n        console.log(i)\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true, })\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        if (this.props.role.includes('Customer')) { //IF  CUSTOMER\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?key=${this.state.key}${filterString}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ isLoading: false, data: response.data.data, })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n\n        } else { //IF NOT CUSTOMER\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed/${payload.userId}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ isLoading: false, data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    exportXLS = async () => {\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}&key=${this.state.key}`\n\n        var dataToExport = []\n        if (this.props.role.includes('Customer')) {\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?currentPage=0&displayPerPage=0${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                var obj = {}\n                                obj['NO'] = i + 1\n                                obj['ID'] = item._id\n                                obj['Title'] = item.title\n                                {\n                                    item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                        obj['Description'] = '[MEDIA]'\n                                    ) : (\n                                        obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                    )\n                                }\n                                obj['BPR/Client'] = item.client_name\n                                obj['Priority'] = item.priority\n                                obj['Finished By'] = item.full_name\n                                obj['Finished at'] = dateformat(item.updated_at, 'dd mmm yyyy HH:MM')\n                                obj['Rating'] = item.rating\n                                dt[i] = obj\n\n                            })\n                            dataToExport = dt\n                            this.setState({ dataToExport: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed/${payload.userId}?currentPage=0&displayPerPage=0${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                var obj = {}\n                                obj['NO'] = i + 1\n                                obj['ID'] = item._id\n                                obj['Title'] = item.title\n                                {\n                                    item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                        obj['Description'] = '[MEDIA]'\n                                    ) : (\n                                        obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                    )\n                                }\n                                obj['BPR/Client'] = item.client_name\n                                obj['Priority'] = item.priority\n                                obj['Finished at'] = dateformat(item.updated_at, 'dd mmm yyyy HH:MM')\n                                obj['Rating'] = item.rating\n\n                                dt[i] = obj\n\n                            })\n                            dataToExport = dt\n                            this.setState({ dataToExport: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n        if (this.props.role.includes('Customer')) {\n            fileName = `All On Finished  Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n        } else {\n            fileName = `All My Finished Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n        }\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async () => {\n        if (this.props.role.includes('Customer')) {\n            var filterString = ''\n            filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}`\n\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?currentPage=0&displayPerPage=0&client_id=${this.state.client_id}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ dataToExportPDF: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            var filterString = ''\n            filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed/${payload.userId}?currentPage=0&displayPerPage=0${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ dataToExportPDF: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div >\n\n                    <Grid style={{ overflowX: 'scroll' }}>\n                        <Cell size={12} >\n                            <Card style={{ padding: '2.5%', overflowX: 'scroll', borderRadius: '10px'  }}>\n                                <h4>Finished Tickets</h4>\n\n                                <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                                    <Cell size={10}></Cell>\n                                    <Cell size={2}>\n                                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                                        <MenuButton\n                                            id=\"menu-button-2\"\n                                            style={{ listStyle: 'none' }}\n                                            menuItems={[{\n                                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                            }, {\n                                                primaryText: (<ReactToPrint\n                                                    onBeforeGetContent={this.beforeGetContent}\n                                                    trigger={() => <p>PDF</p>}\n                                                    content={() => this.componentRef}\n                                                />),\n                                            }]}\n\n                                            centered\n                                            anchor={{\n                                                x: MenuButton.HorizontalAnchors.CENTER,\n                                                y: MenuButton.VerticalAnchors.CENTER,\n                                            }}\n                                        >\n                                            <button className=\"button is-small is-primary\">\n                                                <i className=\"fa fa-print\"></i>\n                                            &nbsp;<b>Print</b>\n                                            </button>\n                                        </MenuButton>\n                                        <div style={{ display: \"none\" }}>\n                                            <Printable\n                                                ref={el => (this.componentRef = el)}\n                                                data={this.state.dataToExportPDF}\n                                                client_id={this.state.client_id}\n                                                role={this.props.role}\n                                            />\n\n                                        </div>\n                                    </Cell>\n                                </Grid>\n                                {this.state.isFilter ? (\n                                    <Grid>\n                                        <Cell size={12}>\n\n                                            <h4>Filter</h4>\n\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-portrait\"\n                                                label=\"From Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateFrom}\n                                                value={this.state.date_from}\n                                            />\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-landscape\"\n                                                label=\"To Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateTo}\n                                                value={this.state.date_to}\n                                            />\n                                            {(() => {\n                                                if (!this.props.role.includes('Customer')) {\n                                                    return (\n                                                        <SelectField\n                                                            leftIcon={\"view_list\"}\n                                                            label=\"Select BPR/Client\"\n                                                            fullWidth\n                                                            menuItems={this.state.clients}\n                                                            onChange={this.onChangeClientId}\n                                                            value={this.state.client_id}\n                                                        />\n                                                    )\n                                                }\n                                            })()}\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Priority\"\n                                                fullWidth\n                                                menuItems={this.state.priorities}\n                                                onChange={this.onChangePriorityId}\n                                                value={this.state.priority_id}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Category\"\n                                                fullWidth\n                                                menuItems={this.state.categories}\n                                                onChange={this.onChangeCategoryId}\n                                                value={this.state.category_id}\n                                            />\n\n                                            <br />\n                                            <Button raised primary onClick={this.filter}>Apply</Button>\n                                            <Button flat onClick={this.resetFilter} >Reset</Button>\n\n                                        </Cell>\n                                    </Grid>\n                                ) : ''}\n\n                                <Grid ref={this.tableData} >\n                                    <Cell size={6}>\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ... '} onChange={this.search} />\n                                    </Cell>\n                                </Grid>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n                                                <table className=\" table  is-fullwidth is-striped\" >\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}> #ID &nbsp; <span onClick={() => this.setSorting('_id')}  ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '28%' }} >Ticket Request &nbsp; <span onClick={() => this.setSorting('title')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '10%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '8%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            {\n                                                                this.props.role.includes('Customer') ? (\n                                                                    <th style={{ width: '10%' }}>Handled By &nbsp; <span onClick={() => this.setSorting('full_name')} ><i className=\"fa fa-sort\"></i></span> </th>\n\n                                                                ) : ''\n                                                            }\n                                                            <th style={{ width: '10%' }}>Finished at &nbsp; <span onClick={() => this.setSorting('resolution_at')} ><i className=\"fa fa-sort\"></i></span> </th>\n\n                                                            <th style={{ width: '15%' }}>Rating &nbsp; <span onClick={() => this.setSorting('rating')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n\n                                                            <tr key={i}>\n                                                                <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                                                <td >\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link>\n                                                                </td>\n                                                                <td>\n                                                                    <p>{item.client_name}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.priority_id !== '' ? (\n                                                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                    ) : ''}\n                                                                </td>\n                                                                {\n                                                                    this.props.role.includes('Customer') ? (\n                                                                        <td>\n                                                                            {item.full_name !== '' && item.full_name !== null ? (\n                                                                                <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                            ) : ''}\n\n                                                                        </td>\n                                                                    ) : ''\n                                                                }\n                                                                <td>\n                                                                    <p>{item.resolution_at !== null ? dateformat(item.resolution_at, 'dd mmm yyyy, HH:MM') : dateformat(item.updated_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.rating > 0 ? (\n                                                                        <Fragment>\n\n                                                                            <StarRatings\n                                                                                rating={parseFloat(item.rating.toString())}\n                                                                                starRatedColor=\"#f0c260\"\n                                                                                starDimension={'20px'}\n                                                                                numberOfStars={5}\n                                                                                name='rating'\n                                                                            />\n                                                                        </Fragment>\n                                                                    ) : ''}\n                                                                </td>\n\n                                                            </tr>\n\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Card>\n                        </Cell>\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: []\n        }\n    }\n    componentDidMount = async () => {\n\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '2.5% ' }}>\n                {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n                <h4>Finished Tickets</h4>\n                <table className=\" table  is-fullwidth is-striped is-bordered\" style={{ fontSize: '9pt' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '5%' }}> No </th>\n                            <th style={{ width: '10%' }}> #ID </th>\n                            <th style={{ width: '28%' }} >Ticket Request</th>\n                            <th style={{ width: '10%' }}>BPR/Client  </th>\n                            <th style={{ width: '7%' }}>Priority </th>\n                            {\n                                this.props.role.includes('Customer') ? (\n                                    <th style={{ width: '8%' }}>Handled By  </th>\n\n                                ) : ''\n                            }\n                            <th style={{ width: '7%' }}>Finished at  </th>\n\n                            <th style={{ width: '16%' }}>Rating </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.map((item, i) => (\n\n                            <tr key={i}>\n                                <td>{i + 1}</td>\n                                <td><b>{item._id}</b> </td>\n                                <td >\n                                    <b>{item.title}</b>\n                                    <p>Content: </p>\n                                    {item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                        <p>MEDIA</p>\n                                    ) : (\n                                            <div dangerouslySetInnerHTML={{ __html: item.description }} />\n\n                                        )}\n                                </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.priority_id !== '' ? (\n                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                    ) : ''}\n                                </td>\n                                {\n                                    this.props.role.includes('Customer') ? (\n                                        <td>\n                                            {item.full_name !== '' && item.full_name !== null ? (\n                                                <p>{item.full_name}</p>\n                                            ) : ''}\n\n                                        </td>\n                                    ) : ''\n                                }\n                                <td>\n                                    <p>{item.resolution_at !== null ? dateformat(item.resolution_at, 'dd mmm yyyy, HH:MM') : dateformat(item.updated_at, 'dd mmm yyyy, HH:MM')}</p>\n                                </td>\n                                <td>\n                                    {item.rating > 0 ? (\n                                        <Fragment>\n\n                                            <StarRatings\n                                                rating={parseFloat(item.rating.toString())}\n                                                starRatedColor=\"#f0c260\"\n                                                starDimension={'20px'}\n                                                numberOfStars={5}\n                                                name='rating'\n                                            />\n                                        </Fragment>\n                                    ) : ''}\n                                </td>\n\n                            </tr>\n\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport {\n    Card,\n    MenuButton,\n    Grid,\n    DatePicker,\n    SelectField,\n    Cell,\n    TextField,\n    Button,\n} from 'react-md'\n//  import '../../../styles.scss'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\nimport ReactToPrint from 'react-to-print'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            dataToExportPDF: [],\n            dataToExport: [],\n            isLoading: true,\n            isFilter: false,\n            filter_from_date: '',\n            filter_client_id: '',\n            filter_to_date: '',\n            filter_category_id: '',\n            filter_priority_id: '',\n            key: '',\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 100,\n\n        }\n        // this.socket = io('localhost:4000') //localhost\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected-total/${payload.userId}?currentPage=${0}&displayPerPage=${0}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (item.client_code > 0) {\n                                var obj = {\n                                    label: item.client_code + '-' + item.client_name,\n                                    value: item._id\n                                }\n                                dt[i] = obj\n                            }\n\n                            return false\n                        })\n                        this.setState({ clients: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n\n        var filterString = ''\n        filterString = `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&client_id=${this.state.filter_client_id}`\n\n\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-rejected-total/${payload.userId}?currentPage=${0}&displayPerPage=${0}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-rejected-total/${payload.userId}?key=${evt}&currentPage=${0}&displayPerPage=${0}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?key=${evt}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({ filter_from_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({ filter_to_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ filter_priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ filter_category_id: evt })\n    }\n\n    onChangeClientId = (evt) => {\n        this.setState({ filter_client_id: evt })\n    }\n\n\n\n    filter = async () => {\n        var filterString = ''\n        filterString = `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&client_id=${this.state.filter_client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected-total/${payload.userId}?key=${this.state.key}&currentPage=${0}&displayPerPage=${0}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?key=${this.state.key}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n\n\n\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array;\n    }\n\n    resetFilter = () => {\n        this.setState({\n            filter_category_id: '',\n            filter_priority_id: '',\n            filter_from_date: '',\n            filter_to_date: '',\n            filter_client_id: '',\n        })\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n        var filterString = ''\n\n\n        filterString = `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&client_id=${this.state.filter_client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n        var filterString = ''\n        filterString = `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&client_id=${this.state.filter_client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['NO'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Title'] = item.title\n                            {\n                                item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                    obj['Description'] = '[MEDIA]'\n                                ) : (\n                                        obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                    )\n                            }\n                            obj['BPR/Client'] = item.client_name\n                            obj['Priority'] = item.priority\n\n                            obj['Rejected at'] = dateformat(item.updated_at, 'dd mmm yyyy HH:MM')\n\n\n                            dt[i] = obj\n\n                        })\n                        dataToExport = dt\n                        this.setState({ dataToExport: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All My Rejected Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async () => {\n        var filterString = ''\n        filterString = `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&client_id=${this.state.filter_client_id}`\n\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?currentPage=${0}&displayPerPage=${0}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ dataToExportPDF: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        return (\n            <div >\n                <Grid>\n                    <Cell size={12}>\n                        <Card style={{ padding: '2.5%', borderRadius: '10px'  }}>\n                            <h4>Rejected Tickets</h4>\n\n                            <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                                <Cell size={10}>\n\n                                </Cell>\n                                <Cell size={2}>\n                                    <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                                    <MenuButton\n                                        id=\"menu-button-2\"\n                                        style={{ listStyle: 'none' }}\n                                        menuItems={[{\n                                            primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                        }, {\n                                            primaryText: (<ReactToPrint\n                                                onBeforeGetContent={this.beforeGetContent}\n                                                trigger={() => <p>PDF</p>}\n                                                content={() => this.componentRef}\n                                            />),\n                                        }]}\n\n                                        centered\n                                        anchor={{\n                                            x: MenuButton.HorizontalAnchors.CENTER,\n                                            y: MenuButton.VerticalAnchors.CENTER,\n                                        }}\n                                    >\n                                        <button className=\"button is-small is-primary\">\n                                            <i className=\"fa fa-print\"></i>\n                                        &nbsp;<b>Print</b>\n                                        </button>\n                                    </MenuButton>\n                                    <div style={{ display: \"none\" }}>\n                                        <Printable\n                                            ref={el => (this.componentRef = el)}\n                                            data={this.state.dataToExportPDF}\n                                            role={this.props.role}\n                                        />\n                                    </div>\n                                </Cell>\n                            </Grid>\n                            {this.state.isFilter ? (\n                                <Grid>\n                                    <Cell size={12}>\n\n                                        <h4>Filter</h4>\n\n                                        <DatePicker\n                                            fullWidth\n                                            id=\"appointment-date-portrait\"\n                                            label=\"From Date\"\n                                            className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                            displayMode=\"landscape\"\n                                            onChange={this.onChangeFormDate}\n                                            value={this.state.filter_from_date}\n                                        />\n                                        <DatePicker\n                                            fullWidth\n                                            id=\"appointment-date-landscape\"\n                                            label=\"To Date\"\n                                            className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                            displayMode=\"landscape\"\n                                            onChange={this.onChangeToDate}\n                                            value={this.state.filter_to_date}\n                                        />\n                                        <SelectField\n                                            leftIcon={\"view_list\"}\n                                            label=\"Select BPR/Client\"\n                                            fullWidth\n                                            menuItems={this.state.clients}\n                                            onChange={this.onChangeClientId}\n                                            value={this.state.filter_client_id}\n                                        />\n                                        <SelectField\n                                            leftIcon={\"view_list\"}\n                                            label=\"Select Priority\"\n                                            fullWidth\n                                            menuItems={this.state.priorities}\n                                            onChange={this.onChangePriorityId}\n                                            value={this.state.filter_priority_id}\n                                        />\n                                        <SelectField\n                                            leftIcon={\"view_list\"}\n                                            label=\"Select Category\"\n                                            fullWidth\n                                            menuItems={this.state.categories}\n                                            onChange={this.onChangeCategoryId}\n                                            value={this.state.filter_category_id}\n                                        />\n                                        <br />\n                                        <Button raised primary onClick={this.filter}>Apply</Button>\n                                        <Button flat onClick={this.resetFilter} >Reset</Button>\n\n                                    </Cell>\n                                </Grid>\n                            ) : ''}\n                            <Grid ref={this.tableData} >\n                                <Cell size={6}>\n\n                                </Cell>\n                                <Cell size={6}>\n                                    <TextField placeholder={'Search ...'} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                                </Cell>\n                            </Grid>\n                            {(() => {\n                                if (this.state.data.length > 0) {\n\n                                    return (\n                                        <Fragment>\n\n                                            <table className=\"table   is-fullwidth is-striped\">\n                                                <thead>\n                                                    <tr>\n                                                        <th style={{ width: '10%' }}> #ID &nbsp; <span onClick={() => this.setSorting('_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                        <th style={{ width: '40%' }}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span></th>\n                                                        <th style={{ width: '20%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                        <th style={{ width: '15%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span></th>\n                                                        <th style={{ width: '15%' }}>Rejected at &nbsp; <span onClick={() => this.setSorting('rejected_at')}><i className=\"fa fa-sort\"></i></span></th>\n\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.state.data.map((item, i) => (\n                                                        // (i <= limitTop && i >= limitBottom) ? (\n                                                        <tr key={i}>\n                                                            <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                                            <td >\n                                                                <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link>\n                                                            </td>\n                                                            <td>\n                                                                <p>{item.client_name}</p>\n                                                            </td>\n                                                            <td>\n                                                                {item.priority_id !== '' ? (\n                                                                    <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                ) : ''}\n                                                            </td>\n                                                            <td>\n                                                                <p>{dateformat(item.updated_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                            </td>\n\n                                                        </tr>\n                                                        //  )  : '' \n                                                    ))}\n                                                </tbody>\n                                            </table>\n\n                                            {pages.length > 0 ? (\n                                                <div className=\"container\">\n                                                    <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                    <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                    {pages.map((page) => (\n                                                        this.isActive(page) ? (\n                                                            <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                        ) : (\n                                                                <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            )\n\n\n                                                    ))}\n                                                    <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                    <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                </div>\n\n                                            ) : ''}\n\n                                        </Fragment>\n                                    )\n                                } else {\n                                    return (\n\n                                        <div className=\"notification\">\n                                            <p>No data showed. </p>\n                                        </div>\n\n                                    )\n                                }\n                            })()\n                            }\n                        </Card>\n                    </Cell>\n\n\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nclass Printable extends Component {\n    state = {\n        data: []\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '2.5%' }}>\n                {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n                <h4>Rejected Tickets</h4>\n                <table className=\"table   is-fullwidth is-striped is-bordered\" style={{ fontSize: '9pt' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '5%' }}> No  </th>\n                            <th style={{ width: '10%' }}> #ID  </th>\n                            <th style={{ width: '44%' }}>Ticket Request</th>\n                            <th style={{ width: '10%' }}>BPR/Client </th>\n                            <th style={{ width: '7%' }}>Priority </th>\n                            <th style={{ width: '10%' }}>Handled By </th>\n\n                            <th style={{ width: '12%' }}>Rejected at </th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.map((item, i) => (\n                            // (i <= limitTop && i >= limitBottom) ? (\n                            <tr key={i}>\n                                <td>{i + 1}</td>\n                                <td> <b>{item._id}</b> </td>\n                                <td >\n                                    <b>{item.title}</b>\n                                    <p>Content: </p>\n\n                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n\n\n                                </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n\n                                <td>\n                                    {item.priority_id !== '' ? (\n                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                    ) : ''}\n                                </td>\n                                <td>\n                                    <p>{item.full_name}</p>\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.updated_at, 'dd mmm yyyy, HH:MM')}</p>\n                                </td>\n\n                            </tr>\n                            //  )  : '' \n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component, Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport {\n    Card,\n    Grid,\n    DatePicker,\n    SelectField,\n    Cell,\n    TextField, MenuButton,\n    Button,\n} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\n\n\nexport default class Approval extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            load: false,\n            data: [],\n            dataToExport: [],\n            dataToExportPDF: [],\n            categories: [],\n            priorities: [],\n            isLoading: true,\n            isFilter: false,\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: '',\n            asc: 1,\n            key: '',\n            currentPage: 1,\n            displayPerPage: 100,\n\n        }\n        // this.socket = io('localhost:4000') //localhost\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(`/api/ccs-tickets-approval-total?currentPage=0&displayPerPage=0`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-approval?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (item.client_code > 0) {\n                                var obj = {\n                                    label: item.client_code + '-' + item.client_name,\n                                    value: item._id\n                                }\n                                dt[i] = obj\n                            }\n\n                            return false\n                        })\n                        this.setState({ clients: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-approval-total?key=${this.state.key}${filterString}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-approval?key=${this.state.key}${filterString}&currentPage=1&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-approval-total?key=${evt}${filterString}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-approval?key=${evt}${filterString}&currentPage=1&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    onChangeDateFrom = (evt) => {\n\n        this.setState({ filter: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n\n\n    onChangeClientId = (evt) => {\n        this.setState({ client_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    filter = async () => {\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets-approval-total?key=${this.state.key}${filterString}&currentPage=0&displayPerPage=0`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-approval?key=${this.state.key}${filterString}&currentPage=1&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n    resetFilter = () => {\n        this.setState({\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: ''\n        })\n    }\n\n\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n        try {\n            await axios.get(`/api/ccs-tickets-approval?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    exportXLS = async () => {\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}&key=${this.state.key}`\n\n        var dataToExport = []\n        try {\n            await axios.get(`/api/ccs-tickets-approval?currentPage=0&displayPerPage=0${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['NO'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Title'] = item.title\n                            {\n                                item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                    obj['Description'] = '[MEDIA]'\n                                ) : (\n                                    obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                )\n                            }\n                            obj['BPR/Client'] = item.client_name\n                            obj['Priority'] = item.priority\n                            obj['Handled By'] = item.full_name\n                            obj['Replied at'] = dateformat(item.updated_at, 'dd mmm yyyy HH:MM')\n\n                            dt[i] = obj\n\n                        })\n                        dataToExport = dt\n                        this.setState({ dataToExport: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        const fileName = `All Approval Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    componentDidUpdate = () => {\n\n    }\n\n    beforeGetContent = async () => {\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        this.setState({ load: true })\n        // printable.beforeGetContent()\n        try {\n            await axios.get(`/api/ccs-tickets-approval?currentPage=0&displayPerPage=0${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ dataToExportPDF: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    afterGetContent = () => {\n        this.componentDidMount()\n    }\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div >\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%', borderRadius: '10px'  }}>\n                                <h4>Approval Requests</h4>\n                                <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                                    <Cell size={10}></Cell>\n                                    <Cell size={2}>\n                                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                                        <MenuButton\n                                            id=\"menu-button-2\"\n                                            style={{ listStyle: 'none' }}\n                                            menuItems={[{\n                                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                            }, {\n                                                primaryText: (<ReactToPrint\n                                                    onBeforeGetContent={this.beforeGetContent}\n                                                    //onAfterPrint = {this.afterGetContent}\n                                                    trigger={() => <p >PDF</p>}\n                                                    content={() => this.componentRef}\n                                                />),\n                                            }]}\n\n                                            centered\n                                            anchor={{\n                                                x: MenuButton.HorizontalAnchors.CENTER,\n                                                y: MenuButton.VerticalAnchors.CENTER,\n                                            }}\n                                        >\n                                            <button className=\"button is-small is-primary\">\n                                                <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                                            </button>\n                                        </MenuButton>\n                                        <div style={{ display: \"none\" }}>\n                                            <Printable\n                                                ref={el => (this.componentRef = el)}\n                                                data={this.state.dataToExportPDF}\n                                                load={this.state.load}\n                                                role={this.props.role}\n                                            />\n                                        </div>\n                                    </Cell>\n                                </Grid>\n                                {this.state.isFilter ? (\n                                    <Grid>\n                                        <Cell size={12}>\n\n\n                                            <h4>Filter</h4>\n\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-portrait\"\n                                                label=\"From Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateFrom}\n                                                value={this.state.date_from}\n                                            />\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-landscape\"\n                                                label=\"To Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateTo}\n                                                value={this.state.date_to}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select BPR/Client\"\n                                                fullWidth\n                                                menuItems={this.state.clients}\n                                                onChange={this.onChangeClientId}\n                                                value={this.state.client_id}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Priority\"\n                                                fullWidth\n                                                menuItems={this.state.priorities}\n                                                onChange={this.onChangePriorityId}\n                                                value={this.state.priority_id}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Category\"\n                                                fullWidth\n                                                menuItems={this.state.categories}\n                                                onChange={this.onChangeCategoryId}\n                                                value={this.state.category_id}\n                                            />\n                                            <br />\n                                            <Button raised primary onClick={() => this.filter()} >Apply</Button>\n                                            <Button flat onClick={() => this.resetFilter()} >Reset</Button>\n\n\n\n                                        </Cell>\n                                    </Grid>\n                                ) : ''}\n                                <Grid ref={this.tableData} >\n                                    <Cell size={6}>\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                                    </Cell>\n                                </Grid>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table  is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}>#ID &nbsp; <span onClick={() => this.setSorting('ticket_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '28%' }}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '10%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '15%' }}>Handled by &nbsp; <span onClick={() => this.setSorting('full_name')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Replied at &nbsp; <span onClick={() => this.setSorting('created_at')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            // (i <= limitTop && i >= limitBottom) ? (\n                                                            <tr>\n                                                                <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                                                                <td>\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} >  <b>{item.title}</b></Link>\n                                                                </td>\n                                                                <td>\n                                                                    <p>{item.client_name}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.priority_id !== null ? (\n                                                                        <span className={\"tag \" + item.label_color_priority}>{item.priority}</span>\n                                                                    ) : '-'}\n                                                                </td>\n                                                                <td>\n                                                                    <p style={{ fontSize: '8pt' }}><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></p>\n                                                                </td>\n                                                                <td>\n                                                                    <p>{dateformat(item.updated_at, 'dd mmm yyyy HH:MM')}</p>\n                                                                </td>\n\n                                                            </tr>\n                                                            // )  : ''\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Card>\n                        </Cell>\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n\nvar data = []\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            load: false,\n            data: []\n        }\n    }\n\n\n    componentDidMount = async () => {\n        this.setState({\n            load: false, data: []\n        })\n    }\n\n\n\n\n\n    render() {\n\n        return (\n            <div style={{ padding: '2.5%' }}>\n                {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n                <h4>Approval Request Tickets</h4>\n                <table className=\"table is-fullwidth is-striped is-bordered\" style={{ fontSize: '9pt' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '5%' }}>No</th>\n                            <th style={{ width: '10%' }}>#ID </th>\n                            <th style={{ width: '36%' }}>Ticket Request </th>\n                            <th style={{ width: '10%' }}>BPR/Client </th>\n                            <th style={{ width: '7%' }}>Priority </th>\n                            <th style={{ width: '10%' }}>Handled by </th>\n                            <th style={{ width: '12%' }}>Replied at </th>\n                        </tr>\n                    </thead>\n                    <tbody id=\"bodytable\" >\n                        {this.props.data.map((item, i) => (\n                            // (i <= limitTop && i >= limitBottom) ? (\n                            <tr key={i}>\n                                <td>{i + 1}</td>\n                                <td><b>{item._id}</b></td>\n                                <td>\n                                    <b>{item.title}</b>\n                                    <p>Content: </p>\n\n                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n\n                                </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.priority_id !== null ? (\n                                        <span className={\"tag \" + item.label_color_priority}>{item.priority}</span>\n                                    ) : '-'}\n                                </td>\n                                <td>\n                                    <p style={{ fontSize: '8pt' }}>{item.full_name}</p>\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.updated_at, 'dd mmm yyyy HH:MM')}</p>\n                                </td>\n\n                            </tr>\n                            // )  : ''\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst printable = new Printable()","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport {\n    Grid,\n    Card,\n    DatePicker,\n    Cell,\n    MenuButton,\n    TextField,\n    Button,\n    SelectField,\n} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\n\nexport default class MyHandle extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            isFilter: false,\n            data: [],\n            dataToExportPDF: [],\n            dataToExport: [],\n            priorities: [],\n            categories: [],\n            status: [],\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: '',\n            asc: 1,\n            key: '',\n            currentPage: 1,\n            displayPerPage: 100,\n        }\n\n\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('TICKET_FORWARDED', (data) => {\n\n            if (data === payload.userId) {\n                this.componentDidMount()\n            }\n\n        })\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n\n        if (this.props.role.includes('Customer')) { //IF  CUSTOMER\n\n            var client_id = ''\n            try {\n                await axios.get(`/api/user/${payload.userId}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n\n                            response.data.data.map((item, i) => {\n                                client_id = item.client_id\n                            })\n                        }\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            this.setState({ client_id: client_id })\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress-total?client_id=${client_id}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress?client_id=${client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n\n        } else { //IF NOT CUSTOMER\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle-total/${payload.userId}?currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle/${payload.userId}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/clients`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                if (item.client_code > 0) {\n                                    var obj = {\n                                        label: item.client_code + '-' + item.client_name,\n                                        value: item._id\n                                    }\n                                    dt[i] = obj\n                                }\n\n                                return false\n                            })\n                            this.setState({ clients: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        if (evt === '') {\n            if (this.props.role.includes('Customer')) {\n                try {\n                    await axios.get(`/api/ccs-tickets-all-onprogress-total?currentPage=0&displayPerPage=0${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-tickets-all-onprogress?currentPage=1&displayPerPage=100${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data, isLoading: false })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            } else {\n                try {\n                    await axios.get(`/api/ccs-tickets-my-handle-total/${payload.userId}?currentPage=0&displayPerPage=0${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n                try {\n                    await axios.get(`/api/ccs-tickets-my-handle/${payload.userId}?currentPage=1&displayPerPage=100${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n            }\n            this.setState({\n                currentPage: 1, displayPerPage: 100\n            })\n\n        } else {\n            if (this.props.role.includes('Customer')) {\n                try {\n                    await axios.get(`/api/ccs-tickets-all-onprogress-total?currentPage=0&displayPerPage=0${filterString}&key=${evt}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-tickets-all-onprogress?currentPage=1&displayPerPage=100${filterString}&key=${evt}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data, isLoading: false })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            } else {\n                try {\n                    await axios.get(`/api/ccs-tickets-my-handle-total/${payload.userId}?key=${evt}&currentPage=0&displayPerPage=0${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                try {\n                    await axios.get(`/api/ccs-tickets-my-handle/${payload.userId}?key=${evt}&currentPage=1&displayPerPage=100${filterString}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n\n        }\n\n        this.setState({\n            currentPage: 1, displayPerPage: 100\n        })\n    }\n\n\n\n\n    onChangeDateFrom = (evt) => {\n        console.log(evt + 1)\n        this.setState({ date_from: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeClientId = (evt) => {\n        this.setState({ client_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    filter = async () => {\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        if (this.props.role.includes('Customer')) {\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress-total?key=${this.state.key}${filterString}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress?key=${this.state.key}${filterString}&currentPage=1&displayPerPage=100`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle-total/${payload.userId}?key=${this.state.key}${filterString}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle/${payload.userId}?key=${this.state.key}${filterString}&currentPage=1&displayPerPage=100`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1, displayPerPage: 100\n        })\n\n        console.log(filterString)\n\n    }\n\n    resetFilter = () => {\n        this.setState({\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: this.props.role.includes('Customer') ? this.state.client_id : ''\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        if (this.props.role.includes('Customer')) { //IF  CUSTOMER\n\n\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress?key=${this.state.key}${filterString}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n\n        } else { //IF NOT CUSTOMER\n\n\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle/${payload.userId}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n    exportXLS = async () => {\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}&key=${this.state.key}`\n\n        var dataToExport = []\n        if (this.props.role.includes('Customer')) {\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress?currentPage=0&displayPerPage=0${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                var obj = {}\n                                obj['NO'] = i + 1\n                                obj['ID'] = item._id\n                                obj['Title'] = item.title\n                                {\n                                    item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                        obj['Description'] = '[MEDIA]'\n                                    ) : (\n                                        obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                    )\n                                }\n                                obj['BPR/Client'] = item.client_name\n                                obj['Priority'] = item.priority\n                                obj['Handled By'] = item.full_name\n                                obj['Handled at'] = dateformat(item.updated_at, 'dd mmm yyyy HH:MM')\n\n                                dt[i] = obj\n\n                            })\n                            dataToExport = dt\n                            this.setState({ dataToExport: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle/${payload.userId}?currentPage=0&displayPerPage=0${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                var obj = {}\n                                obj['NO'] = i + 1\n                                obj['ID'] = item._id\n                                obj['Title'] = item.title\n                                {\n                                    item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                        obj['Description'] = '[MEDIA]'\n                                    ) : (\n                                        obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                    )\n                                }\n                                obj['BPR/Client'] = item.client_name\n                                obj['Priority'] = item.priority\n                                obj['Handled By'] = item.full_name\n                                obj['Handled at'] = dateformat(item.updated_at, 'dd mmm yyyy HH:MM')\n\n                                dt[i] = obj\n\n                            })\n                            dataToExport = dt\n                            this.setState({ dataToExport: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n        if (this.props.role.includes('Customer')) {\n            fileName = `All On Progress  Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n        } else {\n            fileName = `All My Handled Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n        }\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async () => {\n        if (this.props.role.includes('Customer')) {\n            var filterString = ''\n\n            filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}&key=${this.state.key}`\n\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress?currentPage=0&displayPerPage=0&client_id=${this.state.client_id}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ dataToExportPDF: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            \n           var filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}&key=${this.state.key}`\n\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle/${payload.userId}?currentPage=0&displayPerPage=0${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ dataToExportPDF: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n    }\n\n\n\n\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div >\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%', borderRadius: '10px'  }}>\n                                <h4>On Progress Tickets</h4>\n                                <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                                    <Cell size={10}></Cell>\n                                    <Cell size={2}>\n                                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                                        <MenuButton\n                                            id=\"menu-button-2\"\n                                            style={{ listStyle: 'none' }}\n                                            menuItems={[{\n                                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                            }, {\n                                                primaryText: (<ReactToPrint\n                                                    onBeforeGetContent={this.beforeGetContent}\n                                                    trigger={() => <p>PDF</p>}\n                                                    content={() => this.componentRef}\n                                                />),\n                                            }]}\n\n                                            centered\n                                            anchor={{\n                                                x: MenuButton.HorizontalAnchors.CENTER,\n                                                y: MenuButton.VerticalAnchors.CENTER,\n                                            }}\n                                        >\n                                            <button className=\"button is-small is-primary\">\n                                                <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                                            </button>\n                                        </MenuButton>\n                                        <div style={{ display: \"none\" }}>\n                                            <Printable\n                                                ref={el => (this.componentRef = el)}\n                                                data={this.state.dataToExportPDF}\n                                                client_id={this.state.client_id}\n                                                role={this.props.role}\n                                            />\n\n                                        </div>\n                                    </Cell>\n                                </Grid>\n                                {this.state.isFilter ? (\n                                    <Grid>\n                                        <Cell size={12}>\n\n\n                                            <h4>Filter</h4>\n\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-portrait\"\n                                                label=\"From Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateFrom}\n                                                value={this.state.date_from}\n                                            />\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-landscape\"\n                                                label=\"To Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateTo}\n                                                value={this.state.date_to}\n                                            />\n                                            {(() => {\n                                                if (!this.props.role.includes('Customer')) {\n                                                    return (\n                                                        <SelectField\n                                                            leftIcon={\"view_list\"}\n                                                            label=\"Select BPR/Client\"\n                                                            fullWidth\n                                                            menuItems={this.state.clients}\n                                                            onChange={this.onChangeClientId}\n                                                            value={this.state.client_id}\n                                                        />\n                                                    )\n                                                }\n                                            })()}\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Priority\"\n                                                fullWidth\n                                                onChange={this.onChangePriorityId}\n                                                menuItems={this.state.priorities}\n                                                value={this.state.priority_id}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Category\"\n                                                fullWidth\n                                                onChange={this.onChangeCategoryId}\n                                                menuItems={this.state.categories}\n                                                value={this.state.category_id}\n                                            />\n\n                                            <br />\n                                            <Button raised primary onClick={this.filter}>Apply</Button>\n                                            <Button flat onClick={this.resetFilter} >Reset</Button>\n\n                                        </Cell>\n                                    </Grid>\n                                ) : ''}\n                                <Grid ref={this.tableData}>\n                                    <Cell size={6}>\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                                    </Cell>\n                                </Grid>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table   is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}> #ID &nbsp; <span onClick={() => this.setSorting('_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '38%' }}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '10%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            {\n                                                                this.props.role.includes('Customer') ? (\n                                                                    <th style={{ width: '15%' }}>Handled by &nbsp; <span onClick={() => this.setSorting('full_name')}><i className=\"fa fa-sort\"></i></span></th>\n                                                                ) : (\n                                                                        <th style={{ width: '15%' }}>handling time &nbsp; <span onClick={() => this.setSorting('time_left')}><i className=\"fa fa-sort\"></i></span></th>\n                                                                    )\n                                                            }\n                                                            <th style={{ width: '15%' }}>Handled at &nbsp; <span onClick={() => this.setSorting('created_at')}><i className=\"fa fa-sort\"></i></span></th>\n\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            //  (i <= limitTop && i >= limitBottom) ? (\n                                                            <tr key={i}>\n                                                                <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                                                <td>\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> &nbsp;\n                                </td>\n                                                                <td>\n                                                                    <p>{item.client_name}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.priority_id !== '' ? (\n                                                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                    ) : ''}\n                                                                </td>\n                                                                {\n                                                                    this.props.role.includes('Customer') ? (\n                                                                        <td>\n                                                                            {item.full_name !== '' && item.full_name !== null ? (\n                                                                                <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                            ) : ''}\n\n                                                                        </td>\n                                                                    ) : (\n                                                                            <td>\n                                                                                {item.time_left_adjusted > 0 ? item.time_left_adjusted : item.time_left} days left\n                                                                            </td>\n                                                                        )\n                                                                }\n                                                                <td>\n                                                                    <p>{dateformat(item.updated_at, 'dd mmm HH:MM')}</p>\n                                                                </td>\n                                                            </tr>\n                                                            // )  : ''\n                                                        )\n                                                        )}\n                                                    </tbody>\n                                                </table>\n\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Card>\n                        </Cell>\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n\n        }\n    }\n    render() {\n        return (\n            <div style={{ padding: '2.5% ' }}>\n                {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n                <h4>On Progress Tickets</h4>\n                <table className=\"table   is-fullwidth is-striped is-bordered\" style={{ fontSize: '9pt' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '4%' }} >No</th>\n                            <th style={{ width: '10%' }}> #ID  </th>\n                            <th style={{ width: '38%' }}>Ticket Request</th>\n                            <th style={{ width: '10%' }}>BPR/Client </th>\n                            <th style={{ width: '8%' }}>Priority </th>\n                            {\n                                this.props.role.includes('Customer') ? (\n                                    <th style={{ width: '15%' }}>Handled by </th>\n                                ) : (\n                                        <th style={{ width: '15%' }}>handling time</th>\n                                    )\n                            }\n                            <th style={{ width: '15%' }}>Handled at </th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.map((item, i) => (\n                            //  (i <= limitTop && i >= limitBottom) ? (\n                            <tr key={i}>\n                                <td>{i + 1}</td>\n                                <td><b>{item._id}</b> </td>\n                                <td>\n                                    <b>{item.title}</b>\n                                    <p>Content: </p>\n                                    {item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                        <p>MEDIA</p>\n                                    ) : (\n                                            <div dangerouslySetInnerHTML={{ __html: item.description }} />\n\n                                        )}\n                                </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.priority_id !== '' ? (\n                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                    ) : ''}\n                                </td>\n                                {\n                                    this.props.role.includes('Customer') ? (\n                                        <td>\n                                            {item.full_name !== '' && item.full_name !== null ? (\n                                                <p>{item.full_name}</p>\n                                            ) : ''}\n\n                                        </td>\n                                    ) : (\n                                            <td>\n                                                {item.time_left_adjusted > 0 ? item.time_left_adjusted : item.time_left} days left\n                                            </td>\n                                        )\n                                }\n                                <td>\n                                    <p>{dateformat(item.updated_at, 'dd mmm HH:MM')}</p>\n                                </td>\n                            </tr>\n                            // )  : ''\n                        )\n                        )}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst printable = new Printable()","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    MenuButton,\n    Card,\n    Grid,\n    SelectField,\n    DatePicker,\n    Cell,\n    TextField,\n    Button,\n} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Finished extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            dataToExportPDF: [],\n            dataToExport: [],\n            isLoading: true,\n            isFilter: false,\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: '',\n            asc: 1,\n            key: '',\n            currentPage: 1,\n            displayPerPage: 100,\n        }\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished-total/${payload.userId}?currentPage=0&displayPerPage=0`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (item.client_code > 0) {\n                                var obj = {\n                                    label: item.client_code + '-' + item.client_name,\n                                    value: item._id\n                                }\n                                dt[i] = obj\n                            }\n\n                            return false\n                        })\n                        this.setState({ clients: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-finished-total/${payload.userId}?currentPage=0&displayPerPage=0${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?currentPage=${1}&displayPerPage=${100}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-finished-total/${payload.userId}?currentPage=0&displayPerPage=0&key=${evt}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?currentPage=${1}&displayPerPage=${100}&key=${evt}${filterString}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    onChangeDateFrom = (evt) => {\n\n        this.setState({ filter: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n\n\n    onChangeClientId = (evt) => {\n        this.setState({ client_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    filter = async () => {\n        var filterString = ''\n\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished-total/${payload.userId}?currentPage=0&displayPerPage=0&key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?currentPage=${1}&displayPerPage=${100}&key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n\n\n    }\n    resetFilter = () => {\n        this.setState({\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: ''\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true, })\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['NO'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Title'] = item.title\n                            {\n                                item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                    obj['Description'] = '[MEDIA]'\n                                ) : (\n                                    obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                )\n                            }\n                            obj['BPR/Client'] = item.client_name\n                            obj['Priority'] = item.priority\n\n                            obj['Closed at'] = dateformat(item.updated_at, 'dd mmm yyyy HH:MM')\n\n\n                            dt[i] = obj\n\n                        })\n                        dataToExport = dt\n                        this.setState({ dataToExport: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        console.log(dataToExport)\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All My Closed Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async () => {\n\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&client_id=${this.state.client_id}`\n\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?currentPage=${0}&displayPerPage=${0}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({\n                            dataToExportPDF\n                                : response.data.data\n                        })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n\n            return (\n                <div >\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%', borderRadius: '10px'  }}>\n                                <h4>Closed Ticket</h4>\n\n                                <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                                    <Cell size={10}></Cell>\n                                    <Cell size={2}>\n                                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                                        <MenuButton\n                                            id=\"menu-button-2\"\n                                            style={{ listStyle: 'none' }}\n                                            menuItems={[{\n                                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                            }, {\n                                                primaryText: (<ReactToPrint\n                                                    onBeforeGetContent={this.beforeGetContent}\n                                                    trigger={() => <p>PDF</p>}\n                                                    content={() => this.componentRef}\n                                                />),\n                                            }]}\n\n                                            centered\n                                            anchor={{\n                                                x: MenuButton.HorizontalAnchors.CENTER,\n                                                y: MenuButton.VerticalAnchors.CENTER,\n                                            }}\n                                        >\n                                            <button className=\"button is-small is-primary\">\n                                                <i className=\"fa fa-print\"></i>\n                                        &nbsp;<b>Print</b>\n                                            </button>\n                                        </MenuButton>\n                                        <div style={{ display: \"none\" }}>\n                                            <Printable\n                                                ref={el => (this.componentRef = el)}\n                                                data={this.state.dataToExportPDF}\n                                                role={this.props.role}\n                                            />\n\n                                        </div>\n                                    </Cell>\n                                </Grid>\n                                {this.state.isFilter ? (\n                                    <Grid>\n                                        <Cell size={12}>\n\n\n                                            <h4>Filter</h4>\n\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-portrait\"\n                                                label=\"From Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateFrom}\n                                                value={this.state.date_from}\n                                            />\n                                            <DatePicker\n                                                fullWidth\n                                                id=\"appointment-date-landscape\"\n                                                label=\"To Date\"\n                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                displayMode=\"landscape\"\n                                                onChange={this.onChangeDateTo}\n                                                value={this.state.date_to}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select BPR/Client\"\n                                                fullWidth\n                                                menuItems={this.state.clients}\n                                                onChange={this.onChangeClientId}\n                                                value={this.state.client_id}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Priority\"\n                                                fullWidth\n                                                menuItems={this.state.priorities}\n                                                onChange={this.onChangePriorityId}\n                                                value={this.state.priority_id}\n                                            />\n                                            <SelectField\n                                                leftIcon={\"view_list\"}\n                                                label=\"Select Category\"\n                                                fullWidth\n                                                menuItems={this.state.categories}\n                                                onChange={this.onChangeCategoryId}\n                                                value={this.state.category_id}\n                                            />\n                                            <br />\n                                            <Button raised primary onClick={() => this.filter()} >Apply</Button>\n                                            <Button flat onClick={() => this.resetFilter()} >Reset</Button>\n\n                                        </Cell>\n                                    </Grid>\n                                ) : ''}\n                                <Grid ref={this.tableData} >\n\n                                    <Cell size={6}>\n\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                                    </Cell>\n                                </Grid>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table   is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}> #ID &nbsp; <span onClick={() => this.setSorting('_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '40%' }}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '20%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '15%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Closed at &nbsp; <span onClick={() => this.setSorting('created_at')}><i className=\"fa fa-sort\"></i></span></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            //   (i <= limitTop && i >= limitBottom) ? (\n                                                            <tr key={i}>\n                                                                <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                                                <td >\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link>\n                                                                </td>\n                                                                <td>\n                                                                    <p>{item.client_name}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.priority_id !== '' ? (\n                                                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                    ) : ''}\n                                                                </td>\n                                                                <td>\n                                                                    <p>{dateformat(item.updated_at, 'dd mmm HH:MM')}</p>\n                                                                </td>\n\n                                                            </tr>\n                                                            // )  : '' \n                                                        ))}\n                                                    </tbody>\n                                                </table>\n\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Card>\n                        </Cell>\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n\nclass Printable extends Component {\n    state = {\n        data: []\n    }\n    componentDidMount = async () => {\n        /*\n        \n        */\n    }\n    render() {\n        return (\n            <div style={{ padding: '2.5%' }}>\n                {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n                <h4>Closed Tickets</h4>\n                <table className=\"table  is-bordered is-fullwidth is-striped\" style={{ fontSize: '9pt' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '5%' }}> No  </th>\n                            <th style={{ width: '10%' }}> #ID  </th>\n                            <th style={{ width: '40%' }}>Ticket Request </th>\n                            <th style={{ width: '10%' }}>BPR/Client  </th>\n                            <th style={{ width: '7%' }}>Priority </th>\n                            <th style={{ width: '10%' }}>Handled By  </th>\n                            <th style={{ width: '12%' }}>Closed at </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.map((item, i) => (\n                            //   (i <= limitTop && i >= limitBottom) ? (\n                            <tr key={i}>\n                                <td>{i + 1}</td>\n                                <td><b>{item._id}</b> </td>\n                                <td >\n                                    <b>{item.title}</b>\n                                    <p>Content: </p>\n                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.priority_id !== '' ? (\n                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                    ) : ''}\n                                </td>\n                                <td>\n                                    <p>{item.full_name}</p>\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.updated_at, 'dd mmm HH:MM')}</p>\n                                </td>\n\n                            </tr>\n                            // )  : '' \n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React,{Component,Fragment} from 'react' \nimport {Link} from 'react-router-dom'\nimport {\n   Grid,\n   Card,\n  DatePicker,\n  MenuButton,\n  Cell,\n  TextField,\n  Button,\n  SelectField,\n  } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\nimport ReactToPrint from 'react-to-print'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get() \n\n\nexport default class Forwarded extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            data :[],\n            dataToExportPDF:[],\n            dataToExport:[],\n            isFilter:false,\n            priorities:[],\n            categories:[],\n            filter_from_date:'',\n            filter_to_date:'',\n            filter_category_id:'',\n            filter_priority_id:'',\n            date_to:'',\n            date_from:'',\n            category_id:'',\n            priority_id:'',\n            status_id:'',\n            client_id:'',\n            asc:1,\n            key:'',\n            currentPage:1,\n            displayPerPage : 100,\n        }\n\n        // this.socket = io('localhost:4000') //localhost\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n        })\n    }\n\n    async componentDidMount () {\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: (<span className={\"tag \"+item.label_color} >{item.priority}</span>),\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({priorities:dt})\n                }\n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-status`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: (<b style={{color:item.label_color}}>{item.status}</b>),\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({status:dt})\n                }\n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        if (item.client_code > 0 ) {\n                            var obj = {\n                                label: item.client_code+'-'+item.client_name,\n                                value:item._id\n                            }\n                            dt.push(obj)\n                        }\n                       \n                        return false\n                    })\n                    this.setState({clients:dt})\n                }\n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: item.category,\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({categories:dt})\n                }\n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    search = async (evt) => {\n        this.setState({key:evt})\n        if (evt ==='') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}?key=${evt}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n\n   \n\n    onChangeFormDate = (evt) => {\n        this.setState({filter_from_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({filter_to_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({filter_priority_id:evt})\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({filter_category_id:evt})\n    }\n\n    onChangeClientId= (evt) => {\n        this.setState({filter_client_id:evt})\n    }\n\n    onChangeStatusId= (evt) => {\n        this.setState({filter_status_id:evt})\n    }\n\n    filter = async () => {\n        var filterString = ''\n        \n            \n        filterString= `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&status_id=${this.state.filter_status_id}&client_id=${this.state.filter_client_id}`\n\n        try{\n            await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}?key=${this.state.key}${filterString}`)\n            .then(response => {\n                \n                if (response.data.status === 200) {\n                    this.setState({data:response.data.data})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n        \n       \n               \n    }\n\n    setSorting = (key) => {\n        this.setState({asc:(this.state.asc*(-1))})\n        var data = this.state.data\n        this.sortArray(data,key,this.state.asc)\n        this.setState({data:data})\n    }\n\n     sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    resetFilter = () => {\n        this.setState({\n            filter_category_id:'',\n            filter_priority_id:'',\n            filter_from_date:'',\n            filter_to_date:'',\n            filter_client_id:'',\n            filter_status_id:'',\n        })\n    }\n\n    setActivePage = (i) => {\n       \n        this.setState({currentPage:i})\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        this.setState({currentPage:endPage})\n    }\n\n    setPageStart = () => {\n        this.setState({currentPage:1})\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i+1)\n        this.setState({currentPage:nextPage})\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1 ) < 1 ? 1 : (i - 1)\n        this.setState({currentPage:prevPage})\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n        var filterString = ''\n        \n            \n        filterString= `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&status_id=${this.state.filter_status_id}&client_id=${this.state.filter_client_id}`\n\n        try{\n            await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}?key=${this.state.key}${filterString}`)\n            .then(response => {\n                \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {}\n                        obj['NO'] = i+1 \n                        obj['ID'] = item._id\n                        obj['Title'] = item.title\n                        {item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                            obj['Description'] =  '[MEDIA]'\n                        ):(\n                            obj['Description'] =   item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                        )}\n                        obj['BPR/Client'] = item.client_name\n                        obj['Priority'] = item.priority\n                        obj['Forwarded to'] = item.full_name\n                        obj['Forwarded at'] = dateformat(item.forwarded_at,'dd mmm yyyy HH:MM')\n                        obj['Status'] = item.status\n\n                        dt[i] = obj\n\n                    })\n                    dataToExport = dt\n                    this.setState({dataToExport: dt})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n        console.log(dataToExport)\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n        \n        fileName = `All My Forwarded Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}` \n        \n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async() => {\n\n        var filterString = ''\n        \n            \n        filterString= `&date_from=${this.state.filter_from_date}&date_to=${this.state.filter_to_date}&category_id=${this.state.filter_category_id}&priority_id=${this.state.filter_priority_id}&status_id=${this.state.filter_status_id}&client_id=${this.state.filter_client_id}`\n\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}??currentPage=${0}&displayPerPage=${0}${filterString}`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    this.setState({dataToExportPDF:response.data.data})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n\n    \n    render() {\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage+2\n        const endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n \n        for(var i=(currentPage-3);i<=n ; i++){\n \n            pages[i-1] = i\n        }\n        const limitBottom = ((this.state.currentPage-1) * this.state.displayPerPage )\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1  \n\n\n        return (\n            <div >\n               \n               <Grid>\n               <Cell size={12}>\n                   <Card style={{padding:'2.5%', borderRadius: '10px' }}>\n                       {(() => {\n                           if (this.props.role.includes('Help Desk')  || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan')  ) {\n                               return  <h4>Forwarded Tickets</h4>\n                           }else if (this.props.role.includes('Specialist') ) {\n                                return  <h4>Canceled Tickets</h4>\n                            }\n                       })()}\n                  \n                    <Grid style={{paddingLeft:'30px',paddingRight:'30px'}}>\n                        <Cell size={10}></Cell>\n                        <Cell size={2}>\n                            <button className=\"button is-small is-link\" onClick={() => this.setState({isFilter : !this.state.isFilter})} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                            <MenuButton\n                                id=\"menu-button-2\"\n                                style={{listStyle:'none'}}\n                                menuItems={[{\n                                    primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                }, {\n                                    primaryText: (<ReactToPrint\n                                        onBeforeGetContent={this.beforeGetContent}\n                                        trigger={() =>  <p>PDF</p>}\n                                        content={() => this.componentRef }\n                                    />),\n                                }]}\n                                \n                                centered\n                                anchor={{\n                                    x: MenuButton.HorizontalAnchors.CENTER,\n                                    y: MenuButton.VerticalAnchors.CENTER,\n                                }}\n                            >\n                                <button className=\"button is-small is-primary\">\n                                    <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b> \n                                </button>\n                            </MenuButton>\n                            <div style={{ display: \"none\" }}>\n                                <Printable \n                                    ref={el => (this.componentRef = el)} \n                                    data={this.state.dataToExportPDF} \n                                    role={this.props.role}\n                                />\n                                        \n                            </div> \n                        </Cell>\n                    </Grid>  \n                    {this.state.isFilter ? (\n                        <Grid>\n                            <Cell size={12}>\n                                <h4>Filter</h4>\n                                \n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"From Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    value={this.state.filter_from_date}\n                                    onChange={this.onChangeFormDate}\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-landscape\"\n                                    label=\"To Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    value={this.state.filter_to_date}\n                                    onChange={this.onChangeToDate}\n                                />\n                                <SelectField \n                                    leftIcon={\"view_list\"}\n                                    label=\"BPR/CLient\"\n                                    fullWidth\n                                    menuItems={this.state.clients}\n                                    value={this.state.filter_client_id}\n                                    onChange={this.onChangeClientId}\n                                />\n                                <SelectField \n                                    leftIcon={\"view_list\"}\n                                    label=\"Select Priority\"\n                                    fullWidth\n                                    menuItems={this.state.priorities}\n                                    value={this.state.filter_priority_id}\n                                    onChange={this.onChangePriorityId}\n                                />\n                                <SelectField \n                                    leftIcon={\"view_list\"}\n                                    label=\"Select Category\"\n                                    fullWidth\n                                    menuItems={this.state.categories}\n                                    value={this.state.filter_category_id}\n                                    onChange={this.onChangeCategoryId}\n                                />\n                                <SelectField \n                                    leftIcon={\"view_list\"}\n                                    label=\"Select Status\"\n                                    fullWidth\n                                    menuItems={this.state.status}\n                                    value={this.state.filter_status_id}\n                                    onChange={this.onChangeStatusId}\n                                />\n                                <Button raised primary onClick={this.filter}>Apply</Button>\n                                <Button flat onClick={this.resetFilter} >Reset</Button>\n                                \n                        </Cell>\n                  \n                        </Grid>\n                    ):''}\n                    <Grid>\n                        \n                        <Cell size={6}>\n                        \n                        </Cell>\n                        <Cell size={6}>\n                            <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                        </Cell>\n                    </Grid>\n               { (() => {\n                       if (this.state.data.length > 0 ) {\n\n                       return (\n                        <Fragment>\n                   \n                        <table className=\"table is-fullwidth is-striped\">\n                            <thead>\n                                <tr>\n                                    <th style={{width:'10%'}}> #ID &nbsp; <span onClick={() => this.setSorting('_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                    <th  style={{width:'28%'}}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span> </th>\n                                    <th style={{width:'15%'}}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}><i className=\"fa fa-sort\"></i></span> </th>\n                                    <th style={{width:'12%'}}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span></th>\n                                    <th  style={{width:'10%'}} >Sent to &nbsp; <span onClick={() => this.setSorting('full_name')}><i className=\"fa fa-sort\"></i></span></th>\n                                    <th style={{width:'10%'}}> Status &nbsp; <span onClick={() => this.setSorting('status')}><i className=\"fa fa-sort\"></i></span></th>\n                                    <th  style={{width:'15%'}}>Sent at &nbsp; <span onClick={() => this.setSorting('forwarded_at')}><i className=\"fa fa-sort\"></i></span></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.data.map((item, i) => (\n                                 (i <= limitTop && i >= limitBottom) ? (\n                                <tr key={i}>\n                                    <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                    <td >\n                                        <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> \n                                    </td>\n                                    <td>\n                                        <p>{item.client_name}</p>\n                                    </td>\n                                    <td>\n                                        {item.priority_id!=='' ? (\n                                            <span className={\"tag \"+item.label_color_priority}><b>{item.priority}</b></span>\n                                        ):''} \n                                    </td>\n                                    <td>\n                                        <p>{item.full_name}</p>\n                                    </td>\n                                    <td>\n                                    <b style={{color:item.label_color_status}}>{item.status}</b> \n                                    </td>\n                                    <td>\n                                        <p>{dateformat(item.forwarded_at,'dd mmm yyyy HH:MM')}</p>\n                                    </td>\n                                    \n                                                \n                                        \n                                \n                            </tr>\n                           )  : '' ) )}\n                            </tbody>\n                        </table>\n\n                        {pages.length > 0 ?(\n                            <div className=\"container\">\n                                <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                    {pages.map((page) => (\n                                        this.isActive(page) ? (\n                                            <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                        ): (\n                                            <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                        )\n                                        \n                                        \n                                    ))}\n                                <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                            </div>\n                            \n                        ):''}\n\n                    </Fragment>\n                       )} else {\n                           return (\n                            \n                                <div className=\"notification\">\n                                    <p>No data showed. </p>\n                                </div>\n                                \n                           )\n                       }\n                        })()\n                    }\n                    </Card>\n                   </Cell>\n                   \n               </Grid>\n              \n            </div>\n        )\n    }\n}\nclass Printable extends Component {\n    render() {\n        return (\n            <div style={{padding:'2.5%'}}>\n                 {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n                 <h4>Forwarded Tickets</h4>\n                <table className=\"table is-bordered is-fullwidth is-striped\" style={{fontSize:'9pt'}}>\n                            <thead>\n                                <tr>\n                                    <th style={{width:'5%'}}> #ID </th>\n                                    <th style={{width:'10%'}}> No </th>\n                                    <th  style={{width:'28%'}}>Ticket Reques> </th>\n                                    <th style={{width:'15%'}}>BPR/Clie> </th>\n                                    <th style={{width:'7%'}}>Priorit></th>\n                                    <th  style={{width:'10%'}} >Sent t></th>\n                                    <th style={{width:'10%'}}> Status </th>\n                                    <th  style={{width:'15%'}}>Sent a></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.props.data.map((item, i) => (\n                           \n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td><b>{item._id}</b></td>\n                                    <td >\n                                    <b>{item.title}</b>\n                                    <p>Content: </p>\n                                      <div dangerouslySetInnerHTML={{ __html:item.description }} />\n\n                                    \n                                    </td>\n                                    <td>\n                                        <p>{item.client_name}</p>\n                                    </td>\n                                    <td>\n                                        {item.priority_id!=='' ? (\n                                            <span className={\"tag \"+item.label_color_priority}><b>{item.priority}</b></span>\n                                        ):''} \n                                    </td>\n                                    <td>\n                                        <p>{item.full_name}</p>\n                                    </td>\n                                    <td>\n                                    <b style={{color:item.label_color_status}}>{item.status}</b> \n                                    </td>\n                                    <td>\n                                        <p>{dateformat(item.forwarded_at,'dd mmm yyyy HH:MM')}</p>\n                                    </td>\n                                \n                            </tr>\n                            ) )}\n                            </tbody>\n                        </table> \n            </div>\n        )\n    }\n}","import React,{Component,Fragment} from 'react' \nimport { Grid,Cell, Paper,TextField,DialogContainer, Chip,SelectField,Button,Autocomplete, SelectionControlGroup,FileUpload, Card } from 'react-md'; \nimport axios from 'axios'\nimport $ from 'jquery'\nimport dateformat from 'dateformat'\n import * as summernote from 'summernote/dist/summernote-lite'\n//import '../../../styles.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport {insertLog} from '../../../../log/InsertLog'\n\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst clients=[]\nvar  data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id:'',\n            formdata: [],\n            files:[],\n            clients :[],\n            file_url:[],\n            module_id:'',\n            client_id:'',\n            title:'',\n            description:'',\n            created_by : '',\n            dialogVisible:false\n\n        } \n\n        this.onChangeClientId = this.onChangeClientId.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n\n        $('.summernote').summernote({\n            placeholder:'Add Note',\n            height:'20vh',\n            \n        })\n        console.log(this.props.ticket_reply_id)\n        try{\n            await axios.get(`/api/ccs-ticket-reply/${this.props.ticket_reply_id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({created_by :response.data.data[0].created_by})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        console.log(this.state.created_by)\n\n\n        try{\n            await axios.get(`/api/ccs-ticket-reply-file-by-ticket-id/${this.props.ticket_reply_id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({files :response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n       \n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    onChangeClientId = (evt) => {\n       \n        var index = this.state.clients.indexOf(evt)\n        var client_id= clients[index]\n        console.log(client_id)\n        this.setState({client_id:client_id})\n    }\n\n    onChangeTitle= (evt) => {\n        console.log(evt)\n        this.setState({title:evt})\n    }\n\n    replyEdited = () => {\n        this.props.replyEdited(this.props.ticket_reply_id)\n    }\n\n    saveTimeResolution = async (handled_by_user_id) => {\n        \n        const body = {\n            ticket_id : this.props.ticket_id,\n            handled_by_user_id : handled_by_user_id,\n            resolution_at : dateformat(new Date(),'yyyy-mm-dd HH:MM:ss')\n        }\n        try {\n            await axios.post(`/api/ccs-ticket-time-resolution`,body)\n            .then(response => {\n                if (response.data.status === 200) {\n                    console.log('time resolution saved')\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        \n    }\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n        var body = {\n            module_id : this.state.module_id,\n            ticket_id: this.props.ticket_id,\n            file_url:this.state.file_url,\n            replies:editor.innerHTML,\n            status_id : 8,\n            created_by : this.state.created_by\n        }\n        \n        \n        if (this.props.ticket_reply_id !== '' && this.props.ticket_reply_id !== undefined) {\n            body.updated_by = payload.userId\n            try { \n                await axios.put(`/api/ccs-ticket-reply/${this.props.ticket_reply_id}`,body)\n                .then(async response => {\n                    \n                        if (response.data.status ===200) {\n                            \n                            if (this.state.file_url.length > 0 ) {\n                                this.state.formdata.map((item,i) => {\n                                    data.append('file',item)\n                                })\n                               await  axios.post('/upload-file-ccs',data)\n                                .then((response) => {\n                                    try{\n                                        if (response.data.success) {\n\n                                        }else {\n\n                                        }\n                                    }catch(error){\n                                        console.log(error)\n                                    }\n                                })\n                            }\n                            if (this.props.client_email.includes(',')) { \n                                var emails = this.props.client_email.split(',')\n                                for (var i = 0; i < emails.length ; i++) {\n                                    const email_to_client = {\n                                        email_to : emails[i] ,\n                                        subject:'Reply Ticket Notification',\n                                        message: `<p>Your ticket is already replied. Please check http://17.5.16.28:9001/ccs/ticket/detail?ticket_id=${body.ticket_id} </p>`\n                                    }\n                                    try{\n                                        await axios.post(`/ccs-send-email`,email_to_client)\n                                        .then(response => {\n                                            if (response.data.status ===200) {\n                                                console.log('sent')\n                                            }else {\n                                                console.log('error send email')\n                                            }\n                                        })\n                                    }catch(e){\n                                        console.log(e)\n                                       \n                                    }\n                                }\n                            } else {\n                                const email_to_client = {\n                                    email_to : this.props.client_email,\n                                    subject:'Reply Ticket Notification',\n                                    message: `<p>Your ticket is already replied. Please check http://17.5.16.28:9001/ccs/ticket/detail?ticket_id=${body.ticket_id} </p>`\n                                }\n                                try{\n                                    await axios.post(`/ccs-send-email`,email_to_client)\n                                    .then(response => {\n                                        if (response.data.status ===200) {\n                                            console.log('sent')\n                                        }else {\n                                            console.log('error send email')\n                                        }\n                                    })\n                                }catch(e){\n                                    console.log(e)\n                                   \n                                }\n                            }\n\n                            this.replyEdited()\n\n                            this.notify('SUCCESS',response.data.message)\n                            \n                            insertLog('Edit Ticket Reply ID '+this.props.ticket_reply_id,this.state.module_id)\n\n                            //window.location.assign('/ccs/task')\n                        }else{\n                            this.notify('ERROR','Failed Processing data')\n                        }\n                        \n                   \n                })\n            } catch (error) {\n                this.notify('ERROR',error)\n            }\n         }else {\n            this.notify('ERROR','Unable Processing data')\n         }\n    }\n\n\n    handleLoad = (uploadedFile, uploadedData) => {\n       \n        const { name, size, type, lastModified } = uploadedFile;\n        const file = {\n          \n          name,\n          size,\n          type,\n          data: uploadedData,\n          lastModified: new Date(lastModified),\n        }\n        \n\n        this.setState({file_url : [...this.state.file_url,(uploadedFile.name)],formdata : [...this.state.formdata,(uploadedFile)] })\n\n       \n        \n    }\n\n    deleteFile = (file) => {\n        \n        const result = this.state.formdata.filter(({name}) => !name.includes(file))\n        \n        this.setState({formdata : result})\n        var index = this.state.file_url.indexOf(file);\n \n        if (index > -1) {\n            this.state.file_url.splice(index, 1);\n        }\n    }\n\n    cancelEditReply = () => {\n        this.props.cancelEditReply(false)\n    }\n    \n    render(){\n        return(\n            <div>\n                <Grid className=\" box  md-cell md-cell--12\">\n                   \n                  <Cell size={12} >\n\n                    <div className=\"summernote\">\n                        {/* This is for text editor Summernote */}\n                        {this.props.reply}\n                    </div>\n                    <br />\n\n                    {this.state.formdata.map((item,i) => (\n                        <div>\n                            <Chip  className=\"state-chip\" label={item.name} removable    onClick={() =>this.deleteFile(item.name)} /><br />\n                        </div>\n                    ))}\n\n                    {this.state.files.map((item,i) => (\n                        <div>\n                            <Chip  className=\"state-chip\" label={item.file_url} removable    onClick={() =>this.deleteFile(item.file_url)} /><br />\n                        </div>\n                    ))}\n                \n                \n                    <br />\n                    <FileUpload\n                        id=\"multiple-file-upload\"\n                        multiple\n                        onLoad={this.handleLoad}\n                        style={{backgroundColor:'#359ce6'}}\n                        name=\"multipart-file-upload\"\n                        label=\"Select files\"\n                    />\n                    <hr />\n                    <Button primary raised onClick={() => this.setState({dialogVisible:true}) } >Save & Accept</Button>\n                    <Button  raised onClick={this.cancelEditReply} >Cancel</Button>\n               </Cell>\n              \n               </Grid>\n\n               <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={[<Button raised primary onClick={this.handleSubmit  } >YES</Button>,<Button onClick={() => this.setState({dialogVisible :false})} >NO</Button>]}\n                    title=\"Confirmation\"\n                    >\n                    <p>Are you sure to proceed?</p>\n                </DialogContainer>\n\n\n               <ToastContainer />\n            </div>\n        )\n    }\n}","import React,{Component,Fragment} from 'react' \nimport {Link} from 'react-router-dom'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\nimport {savePDF} from '@progress/kendo-react-pdf'\nimport {\n    Card,\n   Grid,\n  DatePicker,\n  SelectField,\n  MenuButton,\n  Cell,\n  TextField,\n  Button,\n  } from 'react-md'\n//  import '../../../styles.scss'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print';\n\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\n\n\nexport default class Queued extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            data :[],\n            dataToExport :[],\n            dataToExportPDF:[],\n            isLoading:true,\n            clients:[],\n            priorities:[],\n            category_id :'',\n            priority_id :'',\n            date_from:'',\n            date_to:'',\n            client_id :  '',\n            total_data:0,\n            asc:1,\n            key:'',\n            isFilter:false,\n            currentPage:1,\n            displayPerPage : 100,\n\n        }\n\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('QUEUED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n        this.printable = React.createRef();\n\n    }\n\n    async componentDidMount () {\n        try {\n            await axios.get(`/api/ccs-tickets-queued-total?currentPage=0&displayPerPage=0`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        this.setState({total_data:response.data.data[0].total})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-queued?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data,isLoading:false})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        if (item.client_code > 0 ) {\n                            var obj = {\n                                label: item.client_code+'-'+item.client_name,\n                                value:item._id\n                            }\n                            dt[i] = obj\n                        }\n                        \n                        return false\n                    })\n                    this.setState({clients:dt})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    search = async (evt) => {\n        this.setState({key:evt})\n\n        var filterString = ''\n        \n        filterString= `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n\n        if (evt ==='') {\n            try {\n                await axios.get(`/api/ccs-tickets-queued-total?currentPage=0&displayPerPage=0${filterString}`)\n                .then(response => {\n                \n                        if (response.data.status === 200) {\n                            this.setState({total_data:response.data.data[0].total})\n                        }\n                    \n                })\n            }catch(error){\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-queued?currentPage=${1}&displayPerPage=${100}${filterString}`)\n                .then(response => {\n                \n                        if (response.data.status === 200) {\n                            this.setState({data:response.data.data})\n                        }\n                    \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else {\n            try {\n                await axios.get(`/api/ccs-tickets-queued-total?currentPage=0&displayPerPage=0&key=${evt}${filterString}`)\n                .then(response => {\n                \n                        if (response.data.status === 200) {\n                            this.setState({total_data:response.data.data[0].total})\n                        }\n                    \n                })\n            }catch(error){\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-queued?currentPage=${1}&displayPerPage=${100}&key=${evt}${filterString}`)\n                .then(response => {\n                \n                        if (response.data.status === 200) {\n                            this.setState({data:response.data.data})\n                        }\n                    \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage:1,\n            displayPerPage:100\n        })\n    }\n\n    onChangeDateFrom = (evt) => {\n        \n        this.setState({filter:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangeDateTo = (evt) => {\n        \n        this.setState({date_to:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n  \n\n    onChangeClientId = (evt) => {\n        this.setState({client_id:evt})\n    }\n\n    filter = async () => {\n        var filterString = ''\n        \n        filterString= `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n        try {\n            await axios.get(`/api/ccs-tickets-queued-total?currentPage=0&displayPerPage=0&key=${this.state.key}${filterString}`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        this.setState({total_data:response.data.data[0].total})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-queued?currentPage=${1}&displayPerPage=${100}&key=${this.state.key}${filterString}`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        this.setState({\n            currentPage:1,\n            displayPerPage:100\n        })\n       \n               \n    }\n    resetFilter = () => {\n        this.setState({\n            category_id :'',\n            priority_id :'',\n            date_from:'',\n            date_to:'',\n            client_id :  ''\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({asc:(this.state.asc*(-1))})\n        var data = this.state.data\n        this.sortArray(data,key,this.state.asc)\n        this.setState({data:data})\n    }\n\n     sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n       \n        this.setState({currentPage:i})\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data/this.state.displayPerPage)\n        this.setState({currentPage:endPage})\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({currentPage:1})\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data/this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i+1)\n        this.setState({currentPage:nextPage})\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1 ) < 1 ? 1 : (i - 1)\n        this.setState({currentPage:prevPage})\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n\n    loadDataByPage = async (i) => { \n        this.setState({isLoading:true,})\n        var filterString = ''\n        filterString= `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n\n\n        try {\n            await axios.get(`/api/ccs-tickets-queued?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        this.setState({isLoading:false, data:response.data.data})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n   exportXLS  = async (i) => { \n        var dataToExport = []\n        var filterString = ''\n        filterString= `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n\n\n        try {\n            await axios.get(`/api/ccs-tickets-queued?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {}\n                        obj['NO'] = i+1 \n                        obj['ID'] = item._id\n                        obj['Title'] = item.title\n                        {item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                            obj['Description'] =  '[MEDIA]'\n                        ):(\n                            obj['Description'] =   item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                        )}\n                        obj['BPR/Client'] = item.client_name\n                        obj['Status'] = item.status\n                     \n                        obj['Created at'] = dateformat(item.created_at,'dd mmm yyyy HH:MM')\n                     \n\n                        dt[i] = obj\n\n                    })\n                    dataToExport = dt\n                    this.setState({dataToExport: dt})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n        \n        fileName = `All  Queued Tickets per ${dateformat(new Date(), 'dd-mm-yyyy')}` \n        \n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension)\n    }\n\n    \n\n    beforeGetContent =  async () => {\n        var filterString = ''\n        filterString= `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n\n\n         try {\n             await axios.get(`/api/ccs-tickets-queued?currentPage=0&displayPerPage=0${filterString}`)\n             .then(response => {\n             \n                 if (response.data.status === 200) {\n                     this.setState({dataToExportPDF: response.data.data })\n                 }\n                 \n             })\n         }catch(error){\n             console.log(error)\n         }\n     }\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage+2\n        const endPage = Math.ceil(this.state.total_data/this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n \n        for(var i=(currentPage-3);i<=n ; i++){\n \n            pages[i-1] = i\n        }\n        const limitBottom = ((this.state.currentPage-1) * this.state.displayPerPage )\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        if(this.state.isLoading)\n            return(\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\"/>\n                        </div>\n                    </div>\n                \n                </div>\n            )\n        else\n        return (\n            <div >\n               \n               <Grid>\n               <Cell size={12}>\n                   <Card style={{padding:'2.5%', borderRadius: '10px' }}>\n                   <h4>Queued Tickets</h4>\n                   <Grid style={{paddingLeft:'30px',paddingRight:'30px'}}>\n                        <Cell size={10}></Cell>\n                        <Cell size={2}>\n                        <button className=\"button is-small is-link\" onClick={() => this.setState({isFilter : !this.state.isFilter})} ><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                        <MenuButton\n                                    id=\"menu-button-2\"\n                                    style={{listStyle:'none'}}\n                                    menuItems={[{\n                                        primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                    }, {\n                                        primaryText:   (<ReactToPrint\n                                            onBeforeGetContent = {this.beforeGetContent}\n                                            trigger={() =>  <p>PDF</p>}\n                                            content={() => this.componentRef }\n                                        />),\n                                    }]}\n                                    \n                                    centered\n                                    anchor={{\n                                        x: MenuButton.HorizontalAnchors.CENTER,\n                                        y: MenuButton.VerticalAnchors.CENTER,\n                                    }}\n                                >\n                                    <button className=\"button is-small is-primary\">\n                                        <i className=\"fa fa-print\"></i>\n                                        &nbsp;<b>Print</b> \n                                    </button>\n                                </MenuButton>\n                                <div style={{ display: \"none\" }}>\n                                        <Printable \n                                            ref={el => (this.componentRef = el)} \n                                            data={this.state.dataToExportPDF} \n                                            role={this.props.role}\n                                        />\n                                            \n                                </div>\n                        </Cell>\n                    </Grid>  \n                    {this.state.isFilter ? (\n                        <Grid>\n                             <Cell size={12}>\n                        \n                       \n                            <h4>Filter</h4>\n                            \n                            <DatePicker\n                                fullWidth\n                                id=\"appointment-date-portrait\"\n                                label=\"From Date\"\n                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                displayMode=\"landscape\"\n                                onChange={this.onChangeDateFrom}\n                                value={this.state.date_from}\n                            />\n                            <DatePicker\n                                fullWidth\n                                id=\"appointment-date-landscape\"\n                                label=\"To Date\"\n                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                displayMode=\"landscape\"\n                                onChange={this.onChangeDateTo}\n                                value={this.state.date_to}\n                            />\n                            <SelectField \n                                leftIcon={\"view_list\"}\n                                label=\"Select BPR/Client\"\n                                fullWidth\n                                menuItems={this.state.clients}\n                                onChange={this.onChangeClientId}\n                                value={this.state.client_id}\n                            />\n                            \n                            <br />\n                            <Button raised primary onClick={() => this.filter()} >Apply</Button>\n                            <Button flat onClick={() => this.resetFilter()} >Reset</Button>\n                       \n                          \n                   </Cell>\n                        </Grid>\n                    ):''}\n                    <Grid ref={this.tableData} >\n\n                        <Cell size={6}>\n                        \n                        </Cell>\n                        <Cell size={6}>\n                            <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                        </Cell>\n                    </Grid>\n               { (() => {\n                       if (this.state.data.length > 0 ) {\n\n                       return (\n                        <Fragment>\n                  \n                    <table className=\"table is-fullwidth is-striped\" ref={this.printable}  >\n                        <thead>\n                            <tr>\n                                <th style={{width:'10%'}}>#ID &nbsp; <span onClick={() => this.setSorting('_id')}><i className=\"fa fa-sort\"></i></span></th>\n                                <th style={{width:'60%'}}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span> </th>\n                                <th style={{width:'10%'}}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}><i className=\"fa fa-sort\"></i></span></th>\n                                <th style={{width:'20%'}}>Ticket Status</th>\n                                <th style={{width:'20%'}}>Created at &nbsp; <span onClick={() => this.setSorting('created_at')}><i className=\"fa fa-sort\"></i></span></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.data.map((item, i) => (\n                            //  (i <= limitTop && i >= limitBottom) ? (\n                            <tr>\n                                 <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                                 <td>\n                                   <Link to={`/ccs/ticket/detail?ticket_id=${item._id}&ticket_reply_id=${item._id}`} >  <b>{item.title}</b></Link>  \n                                 </td>\n                                 <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    <p style={{color:item.label_color_status}}><b>{item.status}</b></p>\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.created_at,'dd mmm yyyy HH:MM')}</p>\n                                </td>\n                                      \n                            </tr>\n                        // ):''\n                        ))}\n                        </tbody>\n                    </table>\n\n                    {pages.length > 0 ?(\n                        <div className=\"container\">\n                             <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                             <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ): (\n                                        <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    )\n                                    \n                                    \n                                ))}\n                             <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                             <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                        </div>\n                       \n                    ):''}\n\n                    </Fragment>\n                       )} else {\n                           return (\n                           \n                            <div className=\"notification\">\n                                <p>No data showed. </p>\n                            </div>\n                                \n                           )\n                       }\n                        })()\n                    }\n                    </Card>\n                   </Cell>\n                  \n                  \n               </Grid>\n              \n            </div>\n        )\n    }\n}\n\nclass Printable extends Component {\n    state={\n        data : []\n    }\n    componentDidMount = async () => {\n      \n    }\n    render() {\n        return (\n            <div style={{padding:'2.5%'}}>\n                 {/* <h1><b>Fitur Ini Belum tersedia</b></h1> */}\n             <h4>Queued Tickets</h4>\n                <table className=\"table is-fullwidth is-striped is-bordered\">\n                        <thead>\n                            <tr>\n                                <th style={{width:'5%'}}>No</th>\n                                <th style={{width:'10%'}}>#ID</th>\n                                <th style={{width:'55%'}}>Ticket Request  </th>\n                                <th style={{width:'10%'}}>BPR/Client </th>\n                                <th style={{width:'20%'}}>Ticket Status</th>\n                                <th style={{width:'20%'}}>Created at </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.props.data.map((item, i) => (\n                            //  (i <= limitTop && i >= limitBottom) ? (\n                            <tr>\n                                <td>{i+1}</td>\n                                 <td><b>{item._id}</b></td>\n                                 <td>\n                                   <b>{item.title}</b>\n                                   <p>Content: </p>\n                                     \n                                    <div dangerouslySetInnerHTML={{ __html:item.description }} />\n\n\n                                 </td>\n                                 <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    <p style={{color:item.label_color_status}}><b>{item.status}</b></p>\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.created_at,'dd mmm yyyy HH:MM')}</p>\n                                </td>\n                                      \n                            </tr>\n                        // ):''\n                        ))}\n                        </tbody>\n                    </table> \n            </div>\n        )\n    }\n}\n\n","import React,{Component,Fragment} from 'react' \nimport { Grid,Cell, Paper,TextField,Chip,SelectField,Button,Autocomplete, SelectionControlGroup,FileUpload, Card } from 'react-md'; \nimport axios from 'axios'\nimport $ from 'jquery'\n import * as summernote from 'summernote/dist/summernote-lite'\nimport {insertLog} from '../../../../log/InsertLog'\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst clients=[]\nvar  data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id:'',\n            formdata: [],\n            clients :[],\n            file_url:[],\n            module_id:'',\n            client_id:'',\n            title:'',\n            description:'',\n            created_by : '',\n            updated_by: payload.userId\n\n        } \n\n\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n\n        $('.summernote').summernote({\n            placeholder:'Add Note',\n            height:'20vh'\n        })\n        \n        try{\n            await axios.get(`/api/ccs-ticket-reply/${this.props.ticket_reply_id}`)\n            .then(response => {\n                \n                    if(response.data.status ===200) {\n                    \n                        response.data.data.map((item,i) => {\n                            \n                            this.setState({\n                                created_by:item.created_by\n                            })\n                        })\n\n                       \n                        \n                    }\n               \n            })\n         }catch(error){\n            console.log(error)\n        }\n        \n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    \n\n    onChangeTitle= (evt) => {\n        console.log(evt)\n        this.setState({title:evt})\n    }\n\n    finishReject = () => {\n        this.props.finishReject('')\n    }\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n\n\n        \n        var body = {\n            module_id : this.state.module_id, // this is for notification  , module_id field\n            ticket_id: this.props.ticket_id,\n            file_url:this.state.file_url,\n            replies:editor.innerHTML,\n            status_id : 7,\n            created_by: this.state.created_by\n        }\n        \n        \n        if (this.state._id !=='' && this.state._id !== undefined) {\n            body.updated_by = this.state.updated_by\n\n            await axios.put(`/api/ccs-ticket-reply/${this.state._id}`,body)\n             .then(response => {\n                 try { \n                     if (response.data.status ===200) {\n                        \n                         if (this.state.file_url.length > 0 ) {\n                            this.state.formdata.map((item,i) => {\n                                data.append('file',item)\n                            })\n                             axios.post('/upload-file-ccs',data)\n                              .then((response) => {\n                                  try{\n                                      if (response.data.success) {\n\n                                      }else {\n\n                                      }\n                                  }catch(error){\n                                      console.log(error)\n                                  }\n                              })\n                          }\n                         // this.notify('SUCCESS',response.data.message)\n                          this.rejectReply()\n                          this.cancelReject()\n                     }else{\n                        this.notify('ERROR','Failed Processing data')\n                     }\n                     \n                } catch (error) {\n                    this.notify('ERROR',error)\n                 }\n             })\n         }else {\n            body.created_by = this.state.updated_by\n            await axios.post(`/api/ccs-ticket-reply`,body)\n             .then(response => {\n                 try { \n                     if (response.data.status ===200) {\n                         if (this.state.file_url.length > 0 ) {\n                            this.state.formdata.map((item,i) => {\n                                data.append('file',item)\n                            })\n                             axios.post('/upload-file-ccs',data)\n                              .then((response) => {\n                                  try{\n                                      if (response.data.success) {\n\n                                      }else {\n\n                                      }\n                                  }catch(error){\n                                      console.log(error)\n                                  }\n                              })\n                          }\n\n                          this.rejectReply()\n                          this.cancelReject()\n                          \n                     }else{\n                        this.notify('ERROR','Failed Processing data')\n                     }\n                     \n                } catch (error) {\n                    this.notify('ERROR',error)\n                 }\n             })\n         }  \n\n         \n    }\n\n\n    handleLoad = (uploadedFile, uploadedData) => {\n       \n        const { name, size, type, lastModified } = uploadedFile;\n        const file = {\n          \n          name,\n          size,\n          type,\n          data: uploadedData,\n          lastModified: new Date(lastModified),\n        }\n        \n\n        this.setState({file_url : [...this.state.file_url,(uploadedFile.name)],formdata : [...this.state.formdata,(uploadedFile)] })\n\n       \n        \n    }\n\n    deleteFile = (file) => {\n        \n        const result = this.state.formdata.filter(({name}) => !name.includes(file))\n        \n        this.setState({formdata : result})\n        var index = this.state.file_url.indexOf(file);\n \n        if (index > -1) {\n            this.state.file_url.splice(index, 1);\n        }\n    }\n\n    cancelReject = () => {\n        this.props.cancelReject(false)\n    }\n\n    rejectReply = async (ticket_reply_id,created_by) => {\n        const body = {\n            status_id : 7,\n            module_id : this.state.module_id,\n            ticket_id: this.props.ticket_id,\n            created_by:this.state.created_by,\n            updated_by : payload.userId\n        }\n        try{\n            await axios.put(`/api/ccs-ticket-reply-reject/${this.props.ticket_reply_id}`,body)\n            .then(response => {\n                if (response.data.status ===200) {\n                    this.notify('SUCCESS','You Rejected!')\n                    insertLog('Reject  Ticket Reply ID '+this.props.ticket_reply_id,this.state.module_id)\n                    this.componentDidMount()\n\n                   // window.location.assign('/ccs/task')\n                }else {\n                    this.notify('ERROR','Failed processing data')\n                }\n            })\n        }catch(e){\n            console.log(e)\n            this.notify('ERROR','Failed processing data')\n        }\n        this.setState({replyAnswer:true})\n    }\n\n\n    \n    render(){\n        return(\n            <div >\n                <Grid className=\" box  md-cell md-cell--12\">\n\n                  \n                \n                  <Cell size={12} >\n\n                    <div className=\"summernote\">\n\n                    </div>\n                    <br />\n\n                    {this.state.formdata.map((item,i) => (\n                        <div>\n                            <Chip  className=\"state-chip\" label={item.name} removable    onClick={() =>this.deleteFile(item.name)} /><br />\n                        </div>\n                    ))}\n                \n                \n                    <br />\n                    <FileUpload\n                        id=\"multiple-file-upload\"\n                        multiple\n                        onLoad={this.handleLoad}\n                        style={{backgroundColor:'#359ce6'}}\n                        name=\"multipart-file-upload\"\n                        label=\"Select files\"\n                    />\n                    <hr />\n                    <Button primary raised onClick={this.handleSubmit} >Submit & Reject</Button>\n                    <Button  raised onClick={this.cancelReject} >Cancel</Button>\n               </Cell>\n              \n               </Grid>\n               {/* <ToastContainer /> */}\n            </div>\n        )\n    }\n}","import React,{Component,Fragment} from 'react' \nimport { Button,Autocomplete, Chip, FileUpload, SelectField, Avatar,SelectionControl,Grid,Cell, TextField } from 'react-md'; \nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport $ from 'jquery'\n import * as summernote from 'summernote/dist/summernote-lite'\n import { ToastContainer, toast } from 'react-toastify'\n import {insertLog} from '../../../../log/InsertLog'\n\nimport 'react-toastify/dist/ReactToastify.css'\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst helpdesks=[]\nvar  data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id:this.props.ticket_id,\n            role:'',\n            helpdesk :[],\n            module_id:'',\n            isAuto:false,\n          \n            handled_by_user_id:'',\n           \n            created_by : payload.userId\n        } \n\n       \n       \n        this.handleSubmit = this.handleSubmit.bind(this)\n       \n\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n        $('.summernote').summernote({\n            placeholder:'Add Note',\n            height:'20vh'\n        })\n\n        try{\n            await axios.get(`/api/ccs-ticket/${this.state._id}`)\n            .then(response => {\n                if(response.data.status ===200 ) {\n                    response.data.data.map((item,i) => {\n                        this.setState({\n                            max_resolution_time : item.max_resolution_time\n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await axios.get(`/api/helpdesk-users`)\n            .then(response => {\n                var dt = []\n                if(response.data.status ===200) {\n                   \n                    response.data.data.map((item,i) => {\n                       \n                        var obj = {\n                            leftAvatar: <Avatar src={item.avatar_url} ></Avatar>,\n                            label:item.full_name,\n                            value:item._id\n                        }\n                        dt[i] = obj\n                       \n                        return false\n                       \n                    })\n\n                    this.setState({helpdesk:dt})\n                    \n                }\n            \n        })\n        }catch(error){\n            console.log(error)\n        }\n\n        console.log(this.state.helpdesk)\n\n        \n      \n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n   \n\n    onChangeHandlerId = (evt) => {\n       \n        this.setState({handled_by_user_id:evt})\n    }\n\n    \n    \n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n       \n        const body = {\n            handled_by_user_id : this.state.handled_by_user_id,\n            status_id : 4,\n           \n        }\n     \n        body.updated_by = this.state.created_by\n        try{\n            await axios.post(`/api/ccs-ticket-set-handler-queued/`,body)\n            .then(response =>{\n                if (response.data.status === 200) {\n                   this.notify('SUCCESS','Success!')\n                   insertLog('Forward  Ticket ID '+this.state._id,this.state.module_id)\n\n                    window.history.go(-1)\n                }\n            } )\n        }catch(e){\n            this.notify('ERROR',e)\n        }\n         \n    }\n\n    \n    showForm = () => {\n        this.props.showForm('')\n    }\n   \n\n    render(){\n\n        var helpdesk = this.state.helpdesk\n\n        return(\n            <div >\n                {/* <ToastContainer /> */}\n             \n                            <Grid className=\"box grid-example md-cell md-cell--12\">\n                                <h2 className=\"md-cell md-cell--12\">\n                                Distribute Ticket\n                                </h2> \n                        \n                                <Cell size={12} >\n                                {!this.state.isAuto ? (\n                                     <SelectField \n                                        leftIcon={\"view_list\"}\n                                        label=\"Select Handler\"\n                                        fullWidth\n                                        menuItems={this.state.helpdesk}\n                                        onChange={this.onChangeHandlerId}\n                                        value={this.state.handled_by_user_id}\n                                    />\n                                ):''}\n                               \n                                <hr />\n                                <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                                <Button  raised onClick={this.showForm}  >Cancel</Button>\n\n                                </Cell>\n                            </Grid>\n                           \n               \n            </div>\n        )\n    }\n}","import React,{Component,Fragment} from 'react' \nimport { Grid,Cell, Paper,TextField,DialogContainer, Chip,SelectField,Button,Autocomplete, SelectionControlGroup,FileUpload, Card } from 'react-md'; \nimport axios from 'axios'\nimport $ from 'jquery'\nimport dateformat from 'dateformat'\n import * as summernote from 'summernote/dist/summernote-lite'\n//import '../../../styles.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst clients=[]\nvar  data = new FormData()\n\nexport default class Form extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id:'',\n            formdata: [],\n            files:[],\n            clients :[],\n            file_url:[],\n            client_id:'',\n            title:'',\n            description:'',\n            created_by : payload.userId,\n            dialogVisible:false\n\n        } \n\n        this.onChangeClientId = this.onChangeClientId.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeTitle = this.onChangeTitle.bind(this)\n\n    }\n\n    async componentDidMount() {\n\n        $('.summernote').summernote({\n            placeholder:'Add Note',\n            height:'20vh',\n            \n        })\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n        console.log(moduleName)\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n        console.log(module_id)\n\n        try{\n            await axios.get(`/api/ccs-ticket-reply-file-by-ticket-id/${this.props.ticket_reply_id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({files :response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n       \n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    onChangeClientId = (evt) => {\n       \n        var index = this.state.clients.indexOf(evt)\n        var client_id= clients[index]\n        console.log(client_id)\n        this.setState({client_id:client_id})\n    }\n\n    onChangeTitle= (evt) => {\n        console.log(evt)\n        this.setState({title:evt})\n    }\n\n    replyEdited = () => {\n        this.props.replyEdited(this.props.ticket_reply_id)\n    }\n\n    saveTimeResolution = async (handled_by_user_id) => {\n        \n        const body = {\n            ticket_id : this.props.ticket_id,\n            handled_by_user_id : handled_by_user_id,\n            resolution_at : dateformat(new Date(),'yyyy-mm-dd HH:MM:ss')\n        }\n        try {\n            await axios.post(`/api/ccs-ticket-time-resolution`,body)\n            .then(response => {\n                if (response.data.status === 200) {\n                    console.log('time resolution saved')\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        \n    }\n\n    handleSubmit = async (evt) => {\n        evt.preventDefault()\n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n        var body = {\n            description:editor.innerHTML,\n        \n        }\n        \n        \n        if (this.props.ticket_id !== '' && this.props.ticket_id !== undefined) {\n            body.updated_by = this.state.created_by\n            try { \n                await axios.put(`/api/ccs-ticket/${this.props.ticket_id}`,body)\n                .then(async response => {\n                    \n                        if (response.data.status ===200) {\n                           \n\n                           \n                            this.notify('SUCCESS',response.data.message)\n                            this.successEditTicket()\n                            //window.location.assign('/ccs/task')\n                        }else{\n                            this.notify('ERROR','Failed Processing data')\n                        }\n                        \n                   \n                })\n            } catch (error) {\n                this.notify('ERROR',error)\n            }\n         }else {\n            this.notify('ERROR','Unable Processing data')\n         }\n    }\n\n\n\n    cancelEditTicket = () => {\n        this.props.cancelEditTicket(false)\n    }\n\n    successEditTicket = () => {\n        this.props.successEditTicket()\n    }\n    \n    render(){\n        return(\n            <div>\n                <Grid className=\" box  md-cell md-cell--12\">\n                   \n                  <Cell size={12} >\n\n                    <div className=\"summernote\">\n                        {/* This is for text editor Summernote */}\n                        {this.props.description}\n                    </div>\n                    <br />\n\n                   \n                    <Button primary raised onClick={() => this.setState({dialogVisible:true}) } >Save</Button>\n                    <Button  raised onClick={this.cancelEditTicket} >Cancel</Button>\n               </Cell>\n              \n               </Grid>\n\n               <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={[<Button raised primary onClick={this.handleSubmit  } >YES</Button>,<Button onClick={() => this.setState({dialogVisible :false})} >NO</Button>]}\n                    title=\"Confirmation\"\n                    >\n                    <p>Are you sure to proceed?</p>\n                </DialogContainer>\n\n\n               <ToastContainer />\n            </div>\n        )\n    }\n}","import React,{Component} from 'react'\nimport {MenuButton,ListItem} from 'react-md'\n\nexport default class KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                // <ListItem key={1}  primaryText='Edit' rightIcon ={(<i className='fa fa-pencil' />)} style={{backgroundColor:'lightblue'}} onClick={ () => \n                //      this.setUpdate(this.props.id)} /> , \n                <ListItem key={1} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> ,\n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}","import React, { Fragment, Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    Toolbar, Grid, Cell, Button, TextField, Card, DialogContainer, FontIcon\n} from 'react-md'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../components/socket-address'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nimport { Session } from 'bc-react-session'\nimport KebabMenu from '../components/KebabMenu'\n\n\nconst { payload } = Session.get()\n\nexport default class DetailAllTicket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            module_id: '',\n            role: '',\n            role_id: '',\n            created_by: payload.userId,\n            ticket_id: '',\n            data: [],\n            client_id: '',\n            loadChild: [],\n            filter_from_date: '',\n            filter_to_date: '',\n            filter_category_id: '',\n            filter_priority_id: '',\n            dialogDeleteTicketVisible: false,\n            currentPage: 1,\n            displayPerPage: 100,\n            total_data: 0,\n            key: '',\n            isLoading: null,\n            asc: 1\n        }\n\n\n\n\n        const socket = io(socket_address) //SERVER MSO\n        socket.on('TICKET_ADDED', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('UPDATE_ANSWER', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('RATED', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('TICKET_FORWARDED', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('APPROVAL', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('TICKET_ADDED', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('REJECT', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('COMPLETED', (data) => {\n            this.initialFetch()\n        })\n\n        socket.on('QUEUED', (data) => {\n            this.initialFetch()\n        })\n    }\n\n    componentDidMount = async () => {\n        this.initialFetch()\n    }\n\n\n\n    initialFetch = async () => {\n        this.setState({ isLoading: true })\n        try {\n\n            await axios.get(`/api/ccs-ticket-parents-total?currentPage=0&displayPerPage=0`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n\n            await axios.get(`/api/ccs-ticket-parents?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                        this.setState({ isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        this.state.data.map((item, i) => {\n            if (item.total_child > 0) {\n                try {\n                    axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                        .then(response_child => {\n                            if (response_child.data.status === 200) {\n                                this.setState({ loadChild: [...this.state.loadChild, true] })\n                                item.loadChild = true\n                                item.child_ticket = response_child.data.data\n                            }\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n\n\n\n        const parsed = qs.parse(window.location.search)\n\n        var user_id = parsed.user_id\n        var client_id = parsed.client_id\n\n        this.getUserRole()\n    }\n\n    getUserRole = async () => {\n        var moduleName = window.location.href.split('/')\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        this.setState({ module_id: item._id })\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${this.state.module_id}/${this.state.created_by}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role })\n                        this.setState({ role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    toggleLoadChild = (i) => {\n\n        const loadChild = this.state.loadChild\n        loadChild[i] = !loadChild[i]\n\n        this.setState({\n            loadChild: loadChild\n        });\n\n    }\n\n    search = async (evt) => {\n        if (evt === '') {\n            try {\n\n                await axios.get(`/api/ccs-ticket-parents-total?client_id=${this.state.client_id}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&currentPage=1&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            this.state.data.map((item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    this.setState({ loadChild: [...this.state.loadChild, true] })\n                                    item.loadChild = true\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n            this.setState({ currentPage: 1 })\n\n\n        } else {\n            this.setState({ key: evt })\n\n            try {\n                axios.get(`/api/ccs-ticket-parents-total?client_id=${this.state.client_id}&key=${evt}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&key=${evt}&currentPage=1&displayPerPage=100`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            this.state.data.map(async (item, i) => {\n\n                //  setState({loadChild:[... loadChild,true]})\n                if (item.total_child > 0) {\n                    try {\n                        axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    this.setState({ loadChild: [...this.state.loadChild, true] })\n                                    item.loadChild = true\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n            })\n\n            this.setState({ currentPage: 1 })\n\n        }\n    }\n\n\n    showDetail(id) {\n        this.props.showDetail(id)\n    }\n\n\n    setDelete = (id) => {\n\n        this.setState({ ticket_id: id })\n        this.setState({ dialogDeleteTicketVisible: true })\n\n    }\n\n    processDelete = async () => {\n        try {\n            await axios.delete(`/api/ccs-ticket/${this.state.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ ticket_id: '' })\n                        this.setState({ dialogDeleteTicketVisible: false })\n\n                        this.notify('SUCCESS', 'Success deleting ticket')\n                        this.initialFetch()\n                    } else {\n                        this.notify('ERROR', 'Failed Processing data')\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    setSorting(key) {\n        //asc = asc*(-1)\n        this.setState({ asc: this.state.asc * (-1) })\n\n        // setState({asc:( asc*(-1))})\n\n        this.sortArray(this.state.data, key, this.state.asc)\n        this.setState({ data: this.state.data })\n    }\n\n    sortArray(array, property, direction) {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n\n    setActivePage(i) {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        // window.scrollTo(0,  tableData.current.offsetTop)\n\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd() {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageStart() {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageNext() {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPagePrevious() {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n\n        try {\n            await axios.get(`/api/ccs-ticket-parents?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false })\n                        this.setState({ data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        this.state.data.map(async (item, i) => {\n\n\n            if (item.total_child > 0) {\n                try {\n                    axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                        .then(response_child => {\n                            if (response_child.data.status === 200) {\n                                item.loadChild = true\n                                item.child_ticket = response_child.data.data\n                            }\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n\n\n        // console.log( data)\n\n    }\n\n    render() {\n\n\n\n        const pages = []\n\n        const m = this.state.currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (this.state.currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div style={{ paddingBottom: '15vh', }} >\n                    <ToastContainer />\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Toolbar\n                                title={<b>All Tickets</b>}\n                                nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a>}\n\n                            />\n                        </Cell>\n                    </Grid>\n                    <Card style={{ padding: '2.5%', borderRadius: '10px'  }}>\n                        <Grid>\n\n                            <Cell size={6}>\n\n\n                            </Cell>\n                            <Cell size={6}>\n                                <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                            </Cell>\n                        </Grid>\n                        <Grid /*ref={tableData}*/ >\n                            <Cell size={12}>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table   is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '3%' }}></th>\n                                                            <th style={{ width: '10%' }}>#ID &nbsp; <span onClick={() => this.setSorting('_id')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '20%' }}>Request Tickets &nbsp; <span onClick={() => this.setSorting('title')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '15%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '15%' }}>Handled by &nbsp; <span onClick={() => this.setSorting('full_name')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '10%' }}> Status &nbsp; <span onClick={() => this.setSorting('status')} ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Created at &nbsp; <span onClick={() => this.setSorting('created_at')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '2%' }}>&nbsp;</th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            < Fragment>\n                                                                <tr>\n                                                                    <td>\n\n                                                                        {item.total_child > 0 ? (\n                                                                            <a onClick={() => this.toggleLoadChild(i)}><FontIcon >{this.state.loadChild[i] ? 'arrow_drop_down' : 'arrow_right'} </FontIcon></a>\n\n                                                                        ) : ''}\n                                                                    </td>\n                                                                    <td> <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n\n                                                                    <td>\n                                                                        <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b> </Link> &nbsp;\n                                                                </td>\n                                                                    <td>\n                                                                        <p>{item.client_name}</p>\n                                                                    </td>\n                                                                    <td>\n                                                                        {item.priority_id !== '' ? (\n                                                                            <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                        ) : ''}\n\n                                                                    </td>\n                                                                    <td>\n                                                                        {item.full_name !== '' && item.full_name !== null ? (\n                                                                            <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                        ) : ''}\n\n                                                                    </td>\n                                                                    <td>\n                                                                        <span>\n                                                                            <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                                                        </span>\n                                                                    </td>\n                                                                    <td>\n                                                                        <p>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                    </td>\n                                                                    <td>\n                                                                        {this.state.role.includes('Superadmin') ? (\n                                                                            <KebabMenu setDelete={() => this.setDelete(item._id)} />\n                                                                        ) : '-'}\n                                                                    </td>\n                                                                </tr>\n                                                                { /*loadChild[i] &&    item.child_ticket !== undefined &&  item.child_ticket.length > 0  ? (\n                            <LoadChild parent_ticket_id = {item._id}  child_ticket ={item.child_ticket} role={role} />\n                        ):'' */}\n                                                                {this.state.loadChild[i] && item.child_ticket != undefined && item.child_ticket.length > 0 ?\n                                                                    item.child_ticket.map((item_child, i_child) => (\n                                                                        <Fragment>\n\n                                                                            <tr>\n                                                                                <td ></td>\n                                                                                <td style={{ paddingLeft: '2.5vw' }}><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                                                                                <td>\n                                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item_child._id}`} > <b>{item_child.title}</b> </Link> &nbsp;\n                                                                            </td>\n                                                                                <td>\n                                                                                    <p>{item_child.client_name}</p>\n                                                                                </td>\n                                                                                <td>\n                                                                                    {item_child.priority_id !== '' ? (\n                                                                                        <span className={\"tag \" + item_child.label_color_priority}><b>{item_child.priority}</b></span>\n                                                                                    ) : ''}\n                                                                                </td>\n\n                                                                                <td>\n                                                                                    {item_child.full_name_handler !== '' && item_child.full_name_handler !== null ? (\n                                                                                        <span className=\"tag\"><Link to={`/ccs/staff?id=${item_child.handled_by_user_id}`} >{item_child.full_name_handler}</Link></span>\n                                                                                    ) : ''}\n                                                                                </td>\n                                                                                <td>\n                                                                                    {this.state.role.includes('Customer') && item_child.status_id >= 4 && item_child.status_id !== 8 ? (\n                                                                                        <span>\n                                                                                            <b style={{ color: 'orange' }}>HANDLED</b>\n                                                                                        </span>\n                                                                                    ) : (\n                                                                                            <span>\n                                                                                                <b style={{ color: item_child.label_color_status }}>{item_child.status}</b>\n                                                                                            </span>\n                                                                                        )}\n                                                                                </td>\n                                                                                <td>\n                                                                                    <p>{dateformat(item_child.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                                </td>\n                                                                                <td>\n                                                                                    {this.state.role.includes('Superadmin') ? (\n                                                                                        <KebabMenu setDelete={() => this.setDelete(item_child._id)} />\n                                                                                    ) : '-'}\n                                                                                </td>\n\n                                                                            </tr>\n\n                                                                        </Fragment>\n\n                                                                    )) : ''}\n                                                            </Fragment>\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n\n                                                <DialogContainer\n                                                    width={'600px'}\n                                                    id=\"simple-action-dialog\"\n                                                    visible={this.state.dialogDeleteTicketVisible}\n                                                    onHide={() => !this.state.dialogDeleteTicketVisible}\n                                                    actions={[<Button raised primary onClick={this.processDelete} >YES</Button>, <Button onClick={() => this.setState({ dialogDeleteTicketVisible: false })} >NO</Button>]}\n                                                    title=\"Confirmation\"\n                                                >\n                                                    <p>Are you sure to proceed?</p>\n                                                </DialogContainer>\n\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Cell>\n                        </Grid>\n                    </Card>\n                </div>\n            )\n    }\n}\n\n\n\n\nfunction LoadChild(props) {\n    console.log(props)\n    const _id = props.parent_ticket_id\n\n    const parent_ticket_id = props.parent_ticket_id\n\n    return (\n        <Fragment>\n            {props.child_ticket != undefined && props.child_ticket.length > 0 ?\n                props.child_ticket.map((item, i) => (\n                    <Fragment>\n\n                        <tr>\n                            <td ></td>\n                            <td style={{ paddingLeft: '2.5vw' }}><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                            <td>\n                                <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b> </Link> &nbsp;\n                            </td>\n                            <td>\n                                <p>{item.client_name}</p>\n                            </td>\n                            <td>\n                                {item.priority_id !== '' ? (\n                                    <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                ) : ''}\n                            </td>\n\n                            <td>\n                                {item.full_name_handler !== '' && item.full_name_handler !== null ? (\n                                    <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name_handler}</Link></span>\n                                ) : ''}\n                            </td>\n                            <td>\n                                {props.role.includes('Customer') && item.status_id >= 4 && item.status_id !== 8 ? (\n                                    <span>\n                                        <b style={{ color: 'orange' }}>HANDLED</b>\n                                    </span>\n                                ) : (\n                                        <span>\n                                            <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                        </span>\n                                    )}\n                            </td>\n                            <td>\n                                <p>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                            </td>\n                            <td>\n                                {props.role.includes('Superadmin') ? (\n                                    <KebabMenu setDelete={() => props.setDelete(item._id)} />\n                                ) : '-'}\n                            </td>\n\n                        </tr>\n\n                    </Fragment>\n\n                )) : ''}\n\n        </Fragment>\n\n    )\n}\n","import React, { Component, Fragment } from 'react'\nimport { Link, Switch, BrowserRouter as Router, Route } from 'react-router-dom'\nimport {\n    Toolbar, Grid, Cell, Button, TextField, Card\n} from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport io from 'socket.io-client'\n\nimport { Session } from 'bc-react-session'\nimport { socket_address } from '../../../components/socket-address'\n\nconst { payload } = Session.get()\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user_id: '',\n            data: [],\n            priorities: [],\n            categories: [],\n            status: [],\n            total_data: 0,\n            filter_from_date: '',\n            filter_to_date: '',\n            filter_category_id: '',\n            filter_priority_id: '',\n            key: '',\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 100,\n            isLoading: true\n        }\n\n        // this.socket = io('localhost:4000') //localhost\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('TICKET_FORWARDED', (data) => {\n\n            if (data === payload.userId) {\n                this.componentDidMount()\n            }\n\n        })\n        this.tableData = React.createRef();\n\n    }\n    async componentDidMount() {\n\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var user_id = ''\n        var client_id = ''\n        this.setState({ client_id: client_id })\n        if (parsed.user_id === undefined || parsed.user_id === null || parsed.user_id === '') {\n\n        } else {\n            user_id = parsed.user_id\n            this.setState({ user_id: user_id })\n        }\n\n        if (parsed.client_id === undefined || parsed.client_id === null || parsed.client_id === '') {\n\n        } else {\n            client_id = parsed.client_id\n            this.setState({ client_id: client_id })\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-all-onprogress-total?user_id=${user_id}&client_id=${client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-all-onprogress?user_id=${user_id}&client_id=${client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress-total?user_id=${this.state.user_id}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress?user_id=${this.state.user_id}&client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${100}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n        } else {\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress-total?key=${evt}&user_id=${this.state.user_id}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress?key=${evt}&user_id=${this.state.user_id}&client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${100}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1, displayPerPage: 100\n        })\n    }\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({ filter_from_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({ filter_to_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ filter_priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ filter_category_id: evt })\n    }\n\n    doFilter = () => {\n        const body = {\n            priority_id: this.state.filter_priority_id,\n            category_id: this.state.filter_category_id,\n            from_date: this.state.filter_from_date,\n            to_date: this.state.filter_to_date,\n        }\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true, })\n        try {\n            await axios.get(`/api/ccs-tickets-all-onprogress-total?key=${this.state.key}&user_id=${this.state.user_id}&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-all-onprogress?key=${this.state.key}&user_id=${this.state.user_id}&client_id=${this.state.client_id}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div style={{ paddingBottom: '15vh', }} >\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Toolbar\n                                title={<b>All On Progress Tickets</b>}\n                                nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a>}\n\n                            />\n                        </Cell>\n                    </Grid>\n                    <Card style={{ padding: '2.5%', borderRadius: '10px'  }}>\n                        <Grid ref={this.tableData}>\n\n                            <Cell size={6}>\n\n                            </Cell>\n                            <Cell size={6}>\n                                <TextField placeholder={'Search ...'} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                            </Cell>\n                        </Grid>\n                        <Grid>\n                            <Cell size={12}>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table  is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}>#ID &nbsp; <span onClick={() => this.setSorting('_id')}  ><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '30%' }}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '10%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Handled By &nbsp; <span onClick={() => this.setSorting('full_name')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Handling Remaining time &nbsp; <span onClick={() => this.setSorting('time_left')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Handled at &nbsp; <span onClick={() => this.setSorting('_id')}  ><i className=\"fa fa-sort\"></i></span></th>\n\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            <tr key={i}>\n                                                                <td ><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n\n                                                                <td >\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> &nbsp;\n                            </td>\n                                                                <td>\n                                                                    <p>{item.client_name}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.priority_id !== '' ? (\n                                                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                    ) : ''}\n\n                                                                </td>\n                                                                <td>\n                                                                    {item.full_name !== '' && item.full_name !== null ? (\n                                                                        <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                    ) : ''}\n\n                                                                </td>\n                                                                <td>\n                                                                    {item.time_left_adjusted > 0 ? item.time_left_adjusted : item.time_left} days left\n                            </td>\n                                                                <td>\n                                                                    <p>{dateformat(item.created_at, 'dd mmm HH:MM')}</p>\n                                                                </td>\n                                                            </tr>\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Cell>\n                        </Grid>\n                    </Card>\n                </div>\n            )\n    }\n\n}","import React, { Component, Fragment } from 'react'\nimport { Link, Switch, BrowserRouter as Router, Route } from 'react-router-dom'\nimport {\n    Toolbar, Grid, Cell, Button, TextField, Card\n} from 'react-md'\nimport StarRatings from 'react-star-ratings'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../components/socket-address'\n\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user_id: '',\n            client_id: '',\n            key: '',\n            data: [],\n            priorities: [],\n            categories: [],\n            status: [],\n            filter_from_date: '',\n            filter_to_date: '',\n            filter_category_id: '',\n            filter_priority_id: '',\n            total_data: 0,\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 100,\n        }\n\n        // this.socket = io('localhost:4000')\n        this.socket = io(socket_address) //SERVER MSO\n\n        this.socket.on('ACCEPT', (data) => {\n            console.log(data)\n            if (data === payload.userId) {\n                this.componentDidMount()\n            }\n\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n\n\n    }\n    async componentDidMount() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var user_id = ''\n        var client_id = ''\n        this.setState({ client_id: client_id })\n        if (parsed.user_id === undefined || parsed.user_id === null || parsed.user_id === '') {\n\n        } else {\n            user_id = parsed.user_id\n            this.setState({ user_id: user_id })\n        }\n\n        if (parsed.client_id === undefined || parsed.client_id === null || parsed.client_id === '') {\n\n        } else {\n            client_id = parsed.client_id\n            this.setState({ client_id: client_id })\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-all-completed-total?user_id=${user_id}&client_id=${client_id}&currentPage=${0}&displayPerPage=${0}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-all-completed?user_id=${user_id}&client_id=${client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total?user_id=${this.state.user_id}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?user_id=${this.state.user_id}&client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total?user_id=${this.state.user_id}&client_id=${this.state.client_id}&key=${evt}&currentPage=${0}&displayPerPage=${0}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?user_id=${this.state.user_id}&client_id=${this.state.client_id}&key=${evt}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({ filter_from_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({ filter_to_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ filter_priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ filter_category_id: evt })\n    }\n\n    doFilter = () => {\n        const body = {\n            priority_id: this.state.filter_priority_id,\n            category_id: this.state.filter_category_id,\n            from_date: this.state.filter_from_date,\n            to_date: this.state.filter_to_date,\n        }\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n        console.log(i)\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true, })\n        try {\n            await axios.get(`/api/ccs-tickets-all-completed?user_id=${this.state.user_id}&client_id=${this.state.client_id}&key=${this.state.key}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n            return (\n                <div style={{ paddingBottom: '15vh', }}  >\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Toolbar\n                                title={<b>All Finished Tickets</b>}\n                                nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a>}\n\n                            />\n                        </Cell>\n                    </Grid>\n                    <Card style={{ padding: '2.5%' , borderRadius: '10px' }}>\n                        <Grid ref={this.tableData}>\n\n                            <Cell size={6}>\n\n\n                            </Cell>\n                            <Cell size={6}>\n                                <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                            </Cell>\n                        </Grid>\n                        <Grid>\n                            <Cell size={12}>\n\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table  is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}>#ID &nbsp; <span onClick={() => this.setSorting('_id')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '20%' }}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '10%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '8%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Handled By &nbsp; <span onClick={() => this.setSorting('full_name')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Finished at &nbsp; <span onClick={() => this.setSorting('updated_at')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Rating &nbsp; <span onClick={() => this.setSorting('rating')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            <tr key={i}>\n                                                                <td ><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n\n                                                                <td >\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> &nbsp;\n                            </td>\n                                                                <td>\n                                                                    <p>{item.client_name}</p>\n                                                                </td>\n                                                                <td>\n                                                                    <span className={\"tag \" + item.label_color_priority}>{item.priority}</span>\n                                                                </td>\n                                                                <td>\n                                                                    {item.full_name !== '' && item.full_name !== null ? (\n                                                                        <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                    ) : ''}\n\n                                                                </td>\n                                                                <td>\n                                                                    <p>{item.resolution_at !== null ? dateformat(item.resolution_at, 'dd mmm yyyy, HH:MM') : dateformat(item.updated_at, 'dd mmm yyyy, HH:MM')}</p>\n\n                                                                </td>\n                                                                <td>\n                                                                    {item.rating > 0 ? (\n                                                                        <Fragment>\n\n                                                                            <StarRatings\n                                                                                rating={parseFloat(item.rating.toString())}\n                                                                                starRatedColor=\"#f0c260\"\n                                                                                starDimension={'20px'}\n                                                                                numberOfStars={5}\n                                                                                name='rating'\n                                                                            />\n                                                                        </Fragment>\n                                                                    ) : ''}\n                                                                </td>\n\n                                                            </tr>\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n\n                            </Cell>\n                        </Grid>\n                    </Card>\n                </div>\n            )\n    }\n\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport {\n    Card,\n    ListItem, Avatar,\n    Grid,\n    List,\n    Cell,\n\n} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport StarRatings from 'react-star-ratings'\nimport { Session } from 'bc-react-session'\n\n\nconst { payload } = Session.get()\n\n\nexport default class Statistics extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            categories: [],\n            team_activities: [],\n            priorities: [],\n            total_split: 0,\n            total_tickets: 0,\n            total_answered: 0,\n            total_forwarded: 0,\n            total_available: 0,\n            total_queued: 0,\n            total_approve: 0,\n            total_finished: 0,\n            total_handle: 0,\n            total_rejected: 0,\n            role: this.props.role,\n            avg_rating: 0,\n            rate_per_rating: []\n        }\n        this.socket = io('localhost:4000')\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n    }\n\n    async componentDidMount() {\n        \n        try {\n            await axios.get(`/api/user/${payload.userId}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/logs-by-module-user-id/${module_id}/${payload.userId}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (i < 15) {\n                                dt.push(item)\n                            }\n                            return false\n                        })\n                        this.setState({ team_activities: dt })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n        if (this.state.role.includes('Help Desk') || this.state.role.includes('Implementator') || this.props.role.includes('Support Pelayanan') || this.state.role.includes('Specialist')) {\n            this.getTotalRejected()\n            this.getTotalHandle()\n            this.getAverageRating()\n            this.getTotalForwarded()\n            this.getPerRating()\n            this.getTotalFinish()\n            this.getTotalCompleted()\n        } else if (this.state.role.includes('Supervisor CCS')) {\n            this.getTotalTickets()\n            this.getTotalQueued()\n            this.getTotalApprove()\n        }\n    }\n\n    getTotalQueued = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-queued-total`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_queue: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalApprove = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-approval-total`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_approve: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalRejected = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_rejected: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getAverageRating = async () => {\n        try {\n            await axios.get(`/api/ccs-ticket-rating-average/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ avg_rating: response.data.data[0].average_rating })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getPerRating = async () => {\n        try {\n            await axios.get(`/api/ccs-ticket-rating-per-rating/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({\n                            rate_per_rating: response.data.data\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalCompleted = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-completed-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_finished: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalTickets = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-total`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_tickets: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalSplittedTickets = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_tickets: response.data.data.length })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalHandle = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-handle-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_handle: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalFinish = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_answered: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    getTotalForwarded = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-forward-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_forwarded: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n\n\n    render() {\n\n        const data = [\n            { x: 0, y: 8 },\n            { x: 1, y: 5 },\n            { x: 2, y: 4 },\n            { x: 3, y: 9 },\n            { x: 4, y: 1 },\n            { x: 5, y: 7 },\n            { x: 6, y: 6 },\n            { x: 7, y: 3 },\n            { x: 8, y: 2 },\n            { x: 9, y: 0 }\n        ];\n\n        return (\n            <div >\n\n                <Grid>\n                    <Cell size={12}>\n                        <Card style={{ padding: '2.5%' }}>\n                            <h4>Statistics</h4>\n                            <Grid style={{ paddingLeft: '30px', paddingRight: '30px' }}>\n                                <Cell size={11}></Cell>\n                                <Cell size={1}>\n                                    {/* <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                                &nbsp; &nbsp;<b>Print</b> \n                            </button> */}\n                                </Cell>\n                            </Grid>\n                            <Grid>\n                                <Cell size={12}>\n                                    {this.state.data.map((item, i) => (\n                                        <Fragment>\n                                            <figure >\n                                                <img className=\"is-rounded\" style={{ width: '5vw' }} src={item.avatar_url} alt=\"\" />\n                                            </figure>\n                                            {this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan') || this.props.role.includes('Specialist') ? (\n                                                <p style={{ textAlign: 'center' }}>\n                                                    {this.state.avg_rating > 0 ? this.state.avg_rating.toFixed(2) : this.state.avg_rating}  &nbsp;\n                                                    <StarRatings\n                                                        rating={this.state.avg_rating > 0 ? parseFloat(this.state.avg_rating.toString()) : 0}\n                                                        starRatedColor=\"orange\"\n                                                        starDimension={'1.2vw'}\n                                                        numberOfStars={5}\n                                                        name='rating'\n                                                    />\n\n\n                                                </p>\n                                            ) : ''}\n\n                                        </Fragment>\n                                    ))}\n\n                                </Cell>\n                            </Grid>\n                            <Grid>\n                                <Cell size={12} >\n                                    {\n                                        (() => {\n                                            if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan')) {\n                                                return (\n                                                    <div className=\"tile is-ancestor has-text-centered\">\n                                                        <Link to={`/ccs/task?tab_name=my-handle`} className=\"tile is-parent\" style={{}} >\n                                                            {/*  */}\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#f0c260' }}>\n                                                                <p className=\"title\">{this.state.total_handle}</p>\n                                                                <p className=\"subtitle\">Active Progress</p>\n                                                            </article>\n                                                            {/* </Link> */}\n                                                        </Link>\n\n\n                                                        <Link to={`/ccs/task?tab_name=finished`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#aaf2d8' }}>\n                                                                <p className=\"title\">{this.state.total_answered}</p>\n                                                                <p className=\"subtitle\">Closed</p>\n                                                            </article>\n\n                                                        </Link>\n\n\n                                                        <Link to={`/ccs/task?tab_name=rejected`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'pink' }}>\n                                                                <p className=\"title\">{this.state.total_rejected}</p>\n                                                                <p className=\"subtitle\">Rejected</p>\n                                                            </article>\n\n                                                        </Link>\n\n                                                        <Link to={`/ccs/task?tab_name=forwarded`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#53b5e6' }}>\n                                                                <p className=\"title\">{this.state.total_forwarded}</p>\n                                                                <p className=\"subtitle\">Forwarded</p>\n                                                            </article>\n\n                                                        </Link>\n\n\n                                                        <Link to={`/ccs/task?tab_name=completed`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'lightgreen' }}>\n                                                                <p className=\"title\">  {this.state.total_finished}</p>\n                                                                <p className=\"subtitle\">Finished</p>\n                                                            </article>\n\n                                                        </Link>\n                                                    </div>\n                                                )\n                                            } else if (this.props.role.includes('Specialist')) {\n                                                return (\n                                                    <div className=\"tile is-ancestor has-text-centered\">\n                                                        <Link to={`/ccs/task?tab_name=my-handle`} className=\"tile is-parent\" style={{}} >\n                                                            {/*  */}\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#f0c260' }}>\n                                                                <p className=\"title\">{this.state.total_handle}</p>\n                                                                <p className=\"subtitle\">Active Progress</p>\n                                                            </article>\n                                                            {/* </Link> */}\n                                                        </Link>\n\n\n                                                        <Link to={`/ccs/task?tab_name=finished`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#aaf2d8' }}>\n                                                                <p className=\"title\">{this.state.total_answered}</p>\n                                                                <p className=\"subtitle\">Closed</p>\n                                                            </article>\n\n                                                        </Link>\n\n\n                                                        <Link to={`/ccs/task?tab_name=rejected`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'pink' }}>\n                                                                <p className=\"title\">{this.state.total_rejected}</p>\n                                                                <p className=\"subtitle\">Rejected</p>\n                                                            </article>\n\n                                                        </Link>\n\n                                                        <Link to={`/ccs/task?tab_name=forwarded`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#53b5e6' }}>\n                                                                <p className=\"title\">{this.state.total_forwarded}</p>\n                                                                <p className=\"subtitle\">Cancelled</p>\n                                                            </article>\n\n                                                        </Link>\n\n\n                                                        <Link to={`/ccs/task?tab_name=completed`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'lightgreen' }}>\n                                                                <p className=\"title\">  {this.state.total_finished}</p>\n                                                                <p className=\"subtitle\">Finished</p>\n                                                            </article>\n\n                                                        </Link>\n                                                    </div>\n                                                )\n                                            } else if (this.props.role.includes('Supervisor CCS')) {\n                                                return (\n                                                    <div className=\"tile is-ancestor has-text-centered\">\n                                                        <Link to={`/ccs/task?tab_name=available-ticket`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'pink' }}>\n                                                                <p className=\"title\">{this.state.total_tickets}</p>\n                                                                <p className=\"subtitle\">Total Tickets</p>\n                                                            </article>\n\n                                                        </Link>\n\n                                                        <Link to={`/ccs/task?tab_name=approval`} className=\"tile is-parent\" >\n\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#aaf2d8' }}>\n                                                                <p className=\"title\">{this.state.total_approve}</p>\n                                                                <p className=\"subtitle\">Approval</p>\n                                                            </article>\n\n                                                        </Link>\n\n                                                        <Link to={`/ccs/task?tab_name=queued`} className=\"tile is-parent\" >\n                                                            {/*  */}\n                                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#53b5e6' }}>\n                                                                <p className=\"title\">{this.state.total_queue}</p>\n                                                                <p className=\"subtitle\">On Queue</p>\n                                                            </article>\n                                                            {/* </Link> */}\n                                                        </Link>\n\n\n                                                    </div>\n                                                )\n                                            }\n                                        })()\n                                    }\n\n                                </Cell>\n                            </Grid>\n                            {\n                                (() => {\n                                    if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan') || this.props.role.includes('Specialist')) {\n                                        return (\n                                            <Grid>\n                                                <Cell size={6}>\n\n                                                    <Grid>\n                                                        <Cell size={12} >\n                                                            <h4>My Activity</h4>\n                                                            <Grid>\n                                                                <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }} >\n                                                                    {this.state.team_activities.length > 0 ? (\n                                                                        <List style={{ listStyle: 'none' }}>\n                                                                            {this.state.team_activities.map((item, i) => (\n                                                                                <ListItem\n                                                                                    leftAvatar={<Avatar src={item.avatar_url}></Avatar>}\n                                                                                    primaryText={(<b>{item.full_name !== null ? item.full_name : item.client_name}</b>)}\n                                                                                    secondaryText={item.log + '\\n' + (dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss'))}\n                                                                                    threeLines\n                                                                                />\n                                                                            ))}\n                                                                        </List>\n                                                                    ) : (\n                                                                            <div className=\"notification\" style={{ marginRight: '5vw' }}>\n                                                                                <p>Data is empty ...</p>\n                                                                            </div>\n                                                                        )}\n                                                                </Cell>\n                                                            </Grid>\n\n                                                        </Cell>\n                                                    </Grid>\n\n                                                </Cell>\n                                                <Cell size={6}>\n                                                    <Grid>\n                                                        <Cell size={10}>\n                                                            <h4>My Ratings</h4>\n                                                        </Cell>\n                                                        <Cell size={2}>\n                                                            {this.state.avg_rating > 0 ? this.state.avg_rating.toFixed(2) : this.state.avg_rating}\n                                                        </Cell>\n                                                    </Grid>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }} >\n                                                            {this.state.rate_per_rating.map((item, i) =>\n                                                                //    if (o === item.rating) {\n                                                                //     console.log(o)\n                                                                //        return\n                                                                (\n                                                                    <Grid>\n                                                                        <Cell size={10}>\n                                                                            <p><b>{item.rating}</b> &nbsp;\n                                                                           <StarRatings\n                                                                                    rating={parseFloat(item.rating.toString())}\n                                                                                    starRatedColor=\"black\"\n                                                                                    starDimension={'1.2vw'}\n                                                                                    numberOfStars={5}\n                                                                                    name='rating'\n                                                                                />\n                                                                            </p>\n                                                                        </Cell>\n                                                                        <Cell size={2}>\n                                                                            {item.count_rating}\n                                                                        </Cell>\n                                                                    </Grid>\n                                                                )\n                                                            )\n\n                                                            }\n                                                        </Cell>\n                                                    </Grid>\n                                                </Cell>\n                                            </Grid>\n                                        )\n                                    } else if (this.props.role.includes('Supervisor CCS')) {\n                                        return (\n                                            <Grid>\n                                                <Cell size={12}>\n                                                    <h4>My Activity</h4>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }} >\n                                                            {this.state.team_activities.length > 0 ? (\n                                                                <List style={{ listStyle: 'none' }}>\n                                                                    {this.state.team_activities.map((item, i) => (\n                                                                        <ListItem\n                                                                            leftAvatar={<Avatar src={item.avatar_url}></Avatar>}\n                                                                            primaryText={(<b>{item.full_name !== null ? item.full_name : item.client_name}</b>)}\n                                                                            secondaryText={item.log + '\\n' + (dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss'))}\n                                                                            threeLines\n                                                                        />\n                                                                    ))}\n                                                                </List>\n                                                            ) : (\n                                                                    <div className=\"notification\" style={{ marginRight: '5vw' }}>\n                                                                        <p>Data is empty ...</p>\n                                                                    </div>\n                                                                )}\n                                                        </Cell>\n                                                    </Grid>\n                                                </Cell>\n\n                                            </Grid>\n                                        )\n                                    }\n                                })()\n                            }\n\n\n                        </Card>\n                    </Cell>\n\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nclass Printable extends Component {\n    render() {\n        return (\n            <h1>Printable</h1>\n        )\n    }\n}","import React,{Component,Fragment} from 'react'\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport {Grid,Cell, Button} from 'react-md'\nimport axios from 'axios'\nimport qs, { parse } from 'query-string'\nimport dateformat from 'dateformat'\nimport {AllTickets,Approval,Rejected,Completed,MyHandle,Finished,Forwarded, Queued} from '../ticket/exports';\nimport DetailAllTicket from '../../home/DetailAllTicket'\nimport DetailOnProgress from '../../home/DetailOnProgress'\nimport DetailAllCompleted from '../../home/DetailAllCompleted'\nimport Statistics from '../statistics/Statistics'\nimport {Session} from 'bc-react-session'\nimport 'bulma-extensions/bulma-badge/dist/css/bulma-badge.min.css'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\n\nconst {payload}  = Session.get()\nvar contain = ''\nexport default class Task extends Component {\n   constructor(props){\n       super(props)\n        this.state = {\n            _id:'',\n            role:'',\n            role_id:'',\n            data:[],\n            role_controls:[],\n            announcements:[],\n            contain:'',\n            total_answered:0,\n            total_finished:0,\n            total_queue:0,\n            total_handle:0,\n            total_forwarded:0,\n            total_rejected:0,\n            total_available:0,\n            total_approve:0,\n            list_contain:'',\n\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n\n        }\n\n        this.showDetail = this.showDetail.bind(this)\n\n        // this.socket = io('localhost:4000') //localhost\n        this.socket = io(socket_address)  //SERVER MSO\n        this.socket.on('TICKET_FORWARDED', (data) => {\n          this.componentDidMount()\n           \n        })\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('TICKET_ADDED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('QUEUED', (data) => {\n            \n             this.getTotalQueued()\n         })\n\n\n       \n    }\n\n    async componentDidMount() {\n\n        const parsed = qs.parse(window.location.search) \n\n        this.setState({\n            list_contain : parsed.tab_name\n        })\n        \n        \n        \n        if (this.props.role.includes('Superadmin')  ) {\n           \n            this.getTotalTicketProcessedSuperadmin()\n            \n        }\n        else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') || this.props.role.includes('Specialist')  || this.props.role.includes('Support Pelayanan') ) {\n            this.getTotalRejected()\n            this.getTotalHandle()\n            this.getTotalForward()\n            this.getTotalFinish()\n            this.getTotalCompleted()\n        }else if (this.props.role.includes('Supervisor CCS') ) {\n            this.getTotalAvailable()\n            this.getTotalApprove()\n            this.getTotalQueued()\n        }else if (this.props.role.includes('Customer')  ) {\n            this.getTotalCompleted()\n            this.getTotalHandle()\n            this.getTotalAvailable()\n        }\n        \n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:window.location.pathname,role_id:this.props.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                   \n                    response.data.data.map((item,i) => {\n                        module_id = item._id\n                    })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n\n        try {\n            await axios.get(`/api/announcements-by-module-id/${module_id}`)\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        if (dateformat(item.star_date,'yyyy-mm-dd') <= dateformat(new Date(),'yyyy-mm-dd') && dateformat(item.end_date,'yyyy-mm-dd') >= dateformat(new Date(),'yyyy-mm-dd')) {\n                            var obj = item\n                            dt.push(obj)\n                        }\n                        \n                        return false\n                    })\n                    this.setState({announcements:dt})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n    }\n\n    getTotalTicketProcessedSuperadmin = async() => {\n        try {\n            await axios.get(`/api/ccs-tickets-all-completed-total`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({\n                            total_finished: response.data.data[0].total\n                        })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-all-onprogress-total`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({\n                            total_handle: response.data.data[0].total\n                        })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-total`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({\n                            total_tickets: response.data.data[0].total\n                        })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    \n\n    getTotalRejected  = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected-total/${payload.userId}`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    this.setState({total_rejected:response.data.data[0].total})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    getTotalCompleted  = async () => {\n       \n        if (this.props.role.includes('Customer')) {\n            var client_id=''\n            await axios.get(`/api/user/${payload.userId}`)\n            .then(response => {\n                try{\n                    if(response.data.status ===200) {\n                    \n                        response.data.data.map((item,i) => {\n                            client_id = item.client_id\n                        })\n                    }\n                }catch(error){\n                    console.log(error)\n                }\n            })\n            this.setState({client_id:client_id})\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?client_id=${client_id}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({total_finished:response.data.data.length})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed-total/${payload.userId}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({total_finished:response.data.data[0].total})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n\n    getTotalHandle = async () => {\n        \n\n        if (this.props.role.includes('Customer')) {\n            var client_id=''\n            await axios.get(`/api/user/${payload.userId}`)\n            .then(response => {\n                try{\n                    if(response.data.status ===200) {\n                    \n                        response.data.data.map((item,i) => {\n                            client_id = item.client_id\n                        })\n                    }\n                }catch(error){\n                    console.log(error)\n                }\n            })\n            this.setState({client_id:client_id})\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress-total?client_id=${client_id}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({total_handle:response.data.data[0].total})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle-total/${payload.userId}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({total_handle:response.data.data[0].total})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n\n    }\n\n    getTotalFinish = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished-total/${payload.userId}`)\n            .then(response => {\n                \n                if (response.data.status === 200) {\n                    this.setState({total_answered:response.data.data[0].total})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    getTotalAvailable = async () => {\n        try{\n            await axios.get(`/api/ccs-tickets-total`)\n            .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({total_available:response.data.data[0].total})\n                    }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n        if (this.props.role.includes('Customer')) {\n            var client_id=''\n            await axios.get(`/api/user/${payload.userId}`)\n            .then(response => {\n                try{\n                    if(response.data.status ===200) {\n                    \n                        response.data.data.map((item,i) => {\n                            client_id = item.client_id\n                        })\n                    }\n                }catch(error){\n                    console.log(error)\n                }\n            })\n            this.setState({client_id:client_id})\n\n            try{\n                await axios.get(`/api/ccs-tickets-total?client_id=${client_id}`)\n                .then(response => {\n                    \n                        if (response.data.status === 200) {\n                            this.setState({total_tickets:response.data.data[0].total})\n                        }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n    getTotalApprove =  async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-approval-total`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        this.setState({total_approve:response.data.data[0].total})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    getTotalQueued = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-queued-total`)\n            .then(response => {\n            \n                    if (response.data.status === 200) {\n                        this.setState({total_queue:response.data.data[0].total})\n                    }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    getTotalForward = async () => { \n        try {\n            await axios.get(`/api/ccs-tickets-my-forward-total/${payload.userId}`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    this.setState({total_forwarded:response.data.data[0].total})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    showDetail = (id) => {\n      \n        contain = 'detail'\n        this.setState({\n            contain:'detail',\n           \n        })\n\n        this.state._id = id\n    }\n\n    \n\n    closeDetail = () => {\n        this.setState({contain:'',_id:''})\n        contain=''\n    }\n\n    setTabList = (act) => {    \n        if (act === 'create') {\n            this.setState({contain:act})\n        }else{\n            this.setState({list_contain:act})\n        }\n       \n    }\n\n    render() \n    {  \n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var list_contain = parsed.tab_name\n        \n        var tabList = []\n        if (this.props.role.includes('Superadmin')) {\n           \n            tabList = [\n              \n                {color:'darkblue',action:'all-ticket',icon:'fa fa-ticket',tooltip:'All Tickets',badge:this.state.total_tickets},\n                {color:'#f0c260',action:'all-handle',icon:'fa fa-ticket',tooltip:'All On Progress',badge:this.state.total_handle},\n                {color:'green',action:'all-completed',icon:'fa fa-ticket',tooltip:'All Finished',badge:this.state.total_finished},\n            ] \n        }\n        else if (this.props.role.includes('Customer')) {\n           \n            tabList = [\n              \n                {color:'darkblue',action:'my-ticket',icon:'fa fa-ticket',tooltip:'All My Tickets',badge:this.state.total_tickets},\n                {color:'#f0c260',action:'my-handle',icon:'fa fa-ticket',tooltip:'On Progress',badge:this.state.total_handle},\n                {color:'green',action:'completed',icon:'fa fa-ticket',tooltip:'Finished',badge:this.state.total_finished},\n            ] \n        }else if (this.props.role.includes('Help Desk') ) {\n            \n            tabList = [\n                /*{color:'lightblue',action:'available-ticket',icon:'fa fa-ticket',tooltip:'Available',badge:0}, */\n                {color:'#f0c260',action:'my-handle',icon:'fa fa-ticket',tooltip:'On Progress',badge:this.state.total_handle},\n                {color:'#58e077',action:'finished',icon:'fa fa-ticket',tooltip:'Closed',badge:this.state.total_answered},\n                {color:'red',action:'rejected',icon:'fa fa-ticket',tooltip:'Rejected',badge:this.state.total_rejected},\n                {color:'darkblue',action:'forwarded',icon:'fa fa-ticket',tooltip:'Forwarded',badge:this.state.total_forwarded},\n                {color:'green',action:'completed',icon:'fa fa-ticket',tooltip:'Finished',badge:this.state.total_finished},\n                {color:'#3bc3f5',action:'statistics',icon:'fa fa-ticket',tooltip:'Statistics'}\n            ] \n        \n        }else if (this.props.role.includes('Implementator')  || this.props.role.includes('Support Pelayanan') ) {\n                \n            tabList = [\n                // {color:'lightblue',action:'available-ticket',icon:'fa fa-ticket',tooltip:'Available',badge:0},\n                {color:'#f0c260',action:'my-handle',icon:'fa fa-ticket',tooltip:'On Progress',badge:this.state.total_handle},\n                {color:'#58e077',action:'finished',icon:'fa fa-ticket',tooltip:'Closed',badge:this.state.total_answered},\n                {color:'red',action:'rejected',icon:'fa fa-ticket',tooltip:'Rejected',badge:this.state.total_rejected},\n                {color:'darkblue',action:'forwarded',icon:'fa fa-ticket',tooltip:'Forwarded',badge:this.state.total_forwarded},\n                {color:'green',action:'completed',icon:'fa fa-ticket',tooltip:'Finished',badge:this.state.total_finished},\n                {color:'#3bc3f5',action:'statistics',icon:'fa fa-ticket',tooltip:'Statistics'}\n            ] \n        }\n        else if (this.props.role.includes('Supervisor CCS')) {\n           \n            tabList = [\n                {color:'lightblue',action:'available-ticket',icon:'fa fa-ticket',tooltip:'Tickets',badge:this.state.total_available},\n                {color:'darkblue',action:'approval',icon:'fa fa-ticket',tooltip:'Approval',badge:this.state.total_approve},\n                {color:'#37737a',action:'queued',icon:'fa fa-ticket',tooltip:'Queued',badge:this.state.total_queue,},\n                {color:'#3bc3f5',action:'statistics',icon:'fa fa-ticket',tooltip:'Statistics'}\n            ] \n        }else if (this.props.role.includes('Specialist')) {\n           \n            tabList = [\n               \n                {color:'#f0c260',action:'my-handle',icon:'fa fa-ticket',tooltip:'On Progress',badge:this.state.total_handle},\n                {color:'#58e077',action:'finished',icon:'fa fa-ticket',tooltip:'Closed',badge:this.state.total_answered},\n                {color:'red',action:'rejected',icon:'fa fa-ticket',tooltip:'Rejected',badge:this.state.total_rejected},\n                {color:'darkblue',action:'forwarded',icon:'fa fa-ticket',tooltip:'Canceled',badge:this.state.total_forwarded},\n                {color:'green',action:'completed',icon:'fa fa-ticket',tooltip:'Finished',badge:this.state.total_finished},\n                {color:'#3bc3f5',action:'statistics',icon:'fa fa-ticket',tooltip:'Statistics'}\n            ] \n        }\n        return(\n        \n            <div >\n              \n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--4\">\n                        Hi, {payload.username}  <p>{this.props.role}</p>\n                    </h2> \n                    <div className=\"md-cell md-cell--8\">\n                        \n                          \n                    </div>\n                   </Grid>\n                   <Cell size={12}>\n                        {this.state.announcements.length > 0 ? (\n                            <Fragment>\n                                <h4>Announcements</h4>\n                                {this.state.announcements.map((item,i) => (\n                                    <div className=\"notification is-warning animated zoomIn\">\n                                         <div dangerouslySetInnerHTML={{ __html:item.description }} />\n                                    </div>\n                                ))}\n                            </Fragment>\n                        ):''}\n                    </Cell>\n\n                   {this.state.role_create ?  (\n                        <Link to ='/ccs/ticket/form' data-tooltip='Add New Ticket'><Button style={{\n                            position:'fixed',\n                            right:'10px',\n                            bottom:'20px',\n                            float:'bottom'\n                        }} secondary floating iconClassName=\"fa fa-plus\"></Button></Link>\n                    ) :''\n                }\n               \n            \n                        <div className=\"tabs\" style={{border:'none'}}>\n                            <ul>\n                                 { tabList.map((item,i) => {\n                                     if (list_contain === item.action) {\n                                         return(  //,padding:'10px 5px 0 0 '\n                                                <li \n                                                    style={{borderBottom:'solid 3px '+item.color,backgroundColor:'#c7d6eb',borderTopRightRadius:'8px' ,borderTopLeftRadius:'8px'}} >\n                                                    <Link to ={'/ccs/task?tab_name='+item.action} >{item.tooltip} &nbsp; {item.badge !== undefined && item.badge !== null ?  (\n                                                        <span className={\"tag \"} style={{backgroundColor:item.color,color:'white'}}>{item.badge}</span>\n                                                ):''}</Link> \n                                                    {/* {item.badge !== undefined && item.badge !== null ?  (\n                                                            <span className={\"tag \"} style={{backgroundColor:item.color,color:'white'}}>{item.badge}</span>\n                                                    ):''} */}\n                                                    \n                                                </li>\n                                        )\n                                     }else {\n                                        return( //padding:'10px 5px 0 0 ', \n                                                <li \n                                                style={{borderBottom:'solid 3px '+item.color,}} > \n                                                <Link to ={'/ccs/task?tab_name='+item.action} >{item.tooltip} &nbsp; {item.badge !== undefined && item.badge !== null ?  (\n                                                        <span className={\"tag \"} style={{backgroundColor:item.color,color:'white'}}>{item.badge}</span>\n                                                ):''} </Link>  \n                                                \n                                            </li>\n                                            )\n                                     }\n                                   \n                                    })}\n                              \n                                \n                            </ul>\n                        </div>\n                    <Grid>\n                   \n                    <Cell size={12}>\n                            {(() => {\n                                switch(list_contain){\n                                    case 'all-ticket' : return <DetailAllTicket role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'all-handle' : return <DetailOnProgress role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'all-completed' : return <DetailAllCompleted role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'my-ticket' : return <AllTickets role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'available-ticket' : return <AllTickets role={this.props.role} handle={(id)=> this.handle(id)} showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'my-handle' : return <MyHandle role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'rejected' : return <Rejected role={this.props.role}  showDetail = {(id) => this.showDetail(id) } />\n                                    case 'finished' : return <Finished role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'completed' : return <Completed role={this.props.role}  showDetail = {(id) => this.showDetail(id) } getTotalCompleted = {(total) => this.getTotalCompleted(total)}/>\n                                    case 'approval' : return <Approval role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'queued' : return <Queued role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'forwarded' : return <Forwarded role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    case 'statistics' : return <Statistics role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                    default : {\n                                        if (this.props.role.includes('Superadmin') ) {\n                                            return  <DetailAllTicket role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                        }\n                                        else if (this.props.role.includes('Help Desk') ||  this.props.role.includes('Specialist') || this.props.role.includes('Implementator') || this.props.role.includes('Support Pelayanan') ) {\n                                            return <MyHandle role={this.props.role}  showDetail = {(id) => this.showDetail(id) }/>\n                                        }else  {\n                                            return <AllTickets role={this.props.role}  showDetail = {(id) => this.showDetail(id) } handle={(id)=> this.handle(id)} showDetail = {(id) => this.showDetail(id) }/>\n                                        }\n                                    }\n                                }\n\n                               \n                            })()}\n                            {(() => {\n                                    if (list_contain ==='') {\n                                        \n                                    }\n                            })()}\n                    </Cell>\n                </Grid>\n            </div>\n           \n        )\n    }\n}","import Task from './Task'\n\nexport default {\n    routeProps: {\n        path: '/ccs/task',\n        exact: true,\n        component: Task,\n    },\n    name: 'Task',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Cell, TextField } from 'react-md'\nimport axios from 'axios'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Help extends Component {\n    state = {\n        data: []\n    }\n\n\n    async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-help/${module_id}/${payload.userId}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n    }\n\n    scrollHelp = (id) => {\n        //console.log(id)\n        var elmnt = window.document.getElementById(id);\n        // console.log(elmnt)\n        const y = elmnt.getBoundingClientRect().top + window.scrollY;\n        window.scroll({\n            top: y,\n            behavior: 'smooth'\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Help\n                    </h2>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={12} className=\"box\">\n                        <Grid>\n                            <Cell size={4} offset={8} >\n                                <TextField placeholder=\"Search...\" />\n                            </Cell>\n                        </Grid>\n                        <Grid>\n                            <Cell size={12}>\n                                <Grid>\n                                    <Cell size={2} style={{ borderRight: 'solid 1px #000' }}>\n                                        <table className=\"table is-bordered\">\n                                            <tbody>\n                                                {this.state.data.map((item, i) => (\n                                                    <tr>\n                                                        <a onClick={() => this.scrollHelp(item._id)} ><b>{item.title}</b></a>\n                                                    </tr>\n                                                ))}\n                                            </tbody>\n                                        </table>\n                                    </Cell>\n                                    <Cell size={10}>\n                                        {this.state.data.map((item, i) => (\n                                            <div id={item._id} >\n                                                <h5>{item.title}</h5>\n                                                <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                <hr />\n                                            </div>\n\n                                        ))}\n                                    </Cell>\n                                </Grid>\n\n                            </Cell>\n                        </Grid>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import Help from './Help.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/help',\n        exact: true,\n        component: Help,\n    },\n    name: 'Help',\n}","import React,{Component} from 'react'\nimport {Grid,Cell, TextField, Button, DatePicker, SelectField} from 'react-md'\nimport axios from 'axios'\n\nexport default class Filter extends Component {\n\n    state ={\n        letter_in_id : '',\n        clients:[],\n        status:[],\n    }\n\n    async componentDidMount() {\n        try{\n            axios.get(`/api/clients`)\n            .then(response => {\n                if (response.data.status ===200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.client_code+' - '+item.client_name,\n                            value: item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n\n                    this.setState({clients:dt})\n                }\n              \n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            axios.get(`/api/ccs-status`)\n            .then(response => {\n                if (response.data.status ===200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:(<b style={{color:item.label_color}} >{ item.status}</b>),\n                            value: item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n\n                    this.setState({status:dt})\n                }\n              \n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Grid className=\"grid-example\">\n                    <DatePicker\n                        fullWidth\n                        id=\"appointment-date-portrait\"\n                        label=\"From Date\"\n                        className=\"md-cell md-cell--12-tablet md-cell--6\"\n                        displayMode=\"landscape\"\n                    />\n                    <DatePicker\n                        fullWidth\n                        id=\"appointment-date-landscape\"\n                        label=\"To Date\"\n                        className=\"md-cell md-cell--12-tablet md-cell--6\"\n                        displayMode=\"landscape\"\n                    />\n                    <SelectField \n                    \n                        leftIcon={\"view_list\"}\n                        label=\"Select BPR/Client \"\n                        className=\"md-cell md-cell--12-tablet md-cell--8\"\n                        menuItems={this.state.clients}\n                    />\n                    <SelectField \n                        leftIcon={\"view_list\"}\n                        label=\"Select Status\"\n                        className=\"md-cell md-cell--12-tablet md-cell--4\"\n                        menuItems={this.state.status}\n                    />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <button className=\"button is-primary is-small\"><i className=\"fa fa-filter\"/>&nbsp;Apply</button>\n                    &nbsp;\n                    <button className=\"button  is-small\">< i className=\"fa fa-refresh\" />&nbsp;Reset</button>\n                </Grid>\n            </div>\n            \n        )\n    }\n}\n\n","\nimport axios from 'axios'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nconst  insertLog   = async (log) => {\n    const body = {\n        user_id : payload.userId,\n        log : log !== '' ? log : this.props.log,\n        app_version : '1.0.0'\n    }\n    console.log(body)\n    try {\n        await axios.post(`/api/ccs-log`,body)\n        .then(response => {\n            if (response.data.status ===200 ) {\n\n            }\n        })\n    }catch(e){\n        console.log(e)\n    }\n}\n\nexport   {\n    \n    insertLog\n\n   \n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Button, SelectField, Cell, Card, MenuButton, TextField, IconSeparator, Avatar } from 'react-md'\nimport Filter from './Filter'\nimport axios from 'axios'\nimport { insertLog } from '../../log/InsertLog.js'\n\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\n\nimport qs from 'query-string'\nimport ReactToPrint from 'react-to-print'\nimport dateformat from 'dateformat'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\n\nimport StarRatings from 'react-star-ratings'\nexport default class Team extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            collapsed: true,\n            data: [],\n            list_contain: '',\n            loadChild: [],\n            isLoading: true,\n            clients: [],\n            status: [],\n            showFilter: false,\n            asc: 1,\n            key: '',\n            overtime_respond: '',\n            overtime_resolution: ''\n        }\n\n\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n        })\n\n    }\n\n    async componentDidMount() {\n\n        const parsed = qs.parse(window.location.search)\n        const tab_name = parsed.tab_name\n        if (parsed === undefined || parsed === null) {\n            tab_name = 'tickets'\n        }\n\n        this.setState({ list_contain: tab_name })\n\n        try {\n            await axios.get(`/api/ccs-teams`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n    }\n\n    search = async (evt) => {\n        this.setState({\n            key: evt\n        })\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-teams`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-teams?key=${evt}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    onChangeOvertimeRespond = (evt) => {\n        this.setState({\n            overtime_respond: evt\n        })\n    }\n\n    onChangeOvertimeResolution = (evt) => {\n        this.setState({\n            overtime_resolution: evt\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    filter = async () => {\n        var filterString = ''\n        filterString = `?key=${this.state.key}&overtime_respond=${this.state.overtime_respond}&overtime_resolution=${this.state.overtime_resolution}`\n        try {\n            await axios.get(`/api/ccs-teams${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    resetFilter = () => {\n        this.setState({\n            overtime_resolution: '',\n            overtime_respond: ''\n        })\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n        var filterString = ''\n        filterString = `?key=${this.state.key}&overtime_respond=${this.state.overtime_respond}&overtime_resolution=${this.state.overtime_resolution}`\n\n\n\n        try {\n            await axios.get(`/api/ccs-teams${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['NO'] = i + 1\n                            obj['Name'] = item.full_name\n                            obj['Level'] = item.role\n                            obj[' On Progress'] = item.total_onprogress\n\n                            obj['Total Finished'] = item.total_finished\n                            obj['Average rating'] = item.average_rating !== null && item.average_rating > 0 ? item.average_rating.toFixed(2) : 0\n                            obj['Total Respond Time'] = item.total_respond_time !== null && item.total_respond_time > 0 ? item.total_respond_time.toFixed(2) : ''\n                            obj['Total Resolution Time'] = item.total_resolution_time !== null && item.total_resolution_time > 0 ? item.total_resolution_time.toFixed(2) : ''\n                            obj['Overtime Respond (hours)'] = item.total_overtime_respond !== null && item.total_overtime_respond > 0 ? item.total_overtime_respond.toFixed(2) : ''\n                            obj['Overtime Resolution (days)'] = item.total_overtime_resolution !== null && item.total_overtime_resolution > 0 ? item.total_overtime_resolution.toFixed(2) : ''\n                            obj['SCORE'] = item.total_score\n\n\n\n                            dt[i] = obj\n\n                        })\n                        dataToExport = dt\n                        this.setState({ dataToExport: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        console.log(dataToExport)\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `Team Report per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n\n    render() {\n        const { isLoading, data } = this.state\n        var filterOvertime = []\n        var filterOvertimeRespond = []\n\n        filterOvertime[0] = { value: 'BETWEEN 1 AND 21', label: '1 - 20' }\n        filterOvertime[1] = { value: 'BETWEEN 20 AND 51', label: '21 - 50' }\n        filterOvertime[2] = { value: 'BETWEEN 50 AND 81', label: '51 - 80' }\n        filterOvertime[3] = { value: 'BETWEEN 81 AND 101', label: '81 - 100' }\n        filterOvertime[4] = { value: '> 100', label: '> 100' }\n\n        filterOvertimeRespond[0] = { value: 'BETWEEN 1 AND 21', label: '1 - 20' }\n        filterOvertimeRespond[1] = { value: 'BETWEEN 20 AND 51', label: '21 - 50' }\n        filterOvertimeRespond[2] = { value: 'BETWEEN 50 AND 81', label: '51 - 80' }\n        filterOvertimeRespond[3] = { value: 'BETWEEN 81 AND 101', label: '81 - 100' }\n        filterOvertimeRespond[4] = { value: '> 100', label: '> 100' }\n\n\n\n        return (\n            <div>\n                <Fragment>\n\n                    <Grid>\n                        <Cell size={12}>\n                            <div className=\"columns is-vcentered\" >\n                                <div className=\"column is-6\">\n\n                                </div>\n                                <div className=\"column is-2 \" style={{ alignContent: 'right' }}>\n                                    <div className=\"container\">\n\n\n                                        <button className=\"button is-info is-small \" onClick={() => this.setState({ showFilter: !this.state.showFilter })}>\n                                            {this.state.showFilter ? (<i className=\"fa fa-caret-up\"></i>) : (<i className=\"fa fa-caret-down\"></i>)}&nbsp; Filter\n                                    </button>\n\n                                    &nbsp;\n                                    <MenuButton\n                                            id=\"menu-button-2\"\n                                            style={{ listStyle: 'none' }}\n                                            menuItems={[{\n                                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                            }, {\n                                                primaryText: (<ReactToPrint\n                                                    trigger={() => <p>PDF</p>}\n                                                    content={() => this.componentRef}\n                                                />),\n                                            }]}\n\n                                            centered\n                                            anchor={{\n                                                x: MenuButton.HorizontalAnchors.CENTER,\n                                                y: MenuButton.VerticalAnchors.CENTER,\n                                            }}\n                                        >\n                                            <button className=\"button is-small is-primary\">\n                                                <i className=\"fa fa-print\"></i>\n                                        &nbsp;<b>Print</b>\n                                            </button>\n                                        </MenuButton>\n                                        <div style={{ display: \"none\" }}>\n                                            <Printable\n                                                ref={el => (this.componentRef = el)}\n                                                data={this.state.data}\n                                            />\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"column is-4\">\n                                    <TextField\n                                        placeholder=\"Search ... \"\n                                        onChange={this.search}\n                                    />\n                                </div>\n                            </div>\n                        </Cell>\n                    </Grid>\n                    {this.state.showFilter ? (\n                        <Grid className=\"grid-example\">\n                            <Cell size={12} >\n                                <Card style={{ padding: '2vw' }}>\n                                    <SelectField\n                                        leftIcon={\"view_list\"}\n                                        label=\"Overtime Respond\"\n                                        className=\"md-cell md-cell--12-tablet md-cell--8\"\n                                        menuItems={filterOvertime}\n                                        value={this.state.overtime_respond}\n                                        onChange={this.onChangeOvertimeRespond}\n\n                                    />\n                                    <SelectField\n                                        leftIcon={\"view_list\"}\n                                        label=\"Overtime Resolution\"\n                                        className=\"md-cell md-cell--12-tablet md-cell--8\"\n                                        menuItems={filterOvertime}\n                                        onChange={this.onChangeOvertimeResolution}\n                                        value={this.state.overtime_resolution}\n                                    />\n\n                                    <br />\n                                    <button className=\"button is-primary is-small\" onClick={this.filter}><i className=\"fa fa-filter\" />&nbsp;Apply</button>\n                                        &nbsp;\n                                        <button className=\"button  is-small\" onClick={this.resetFilter}>< i className=\"fa fa-refresh\" />&nbsp;Reset</button>\n                                </Card>\n                            </Cell>\n                        </Grid>\n                    ) : ''}\n                    <Grid>\n                        <Cell size={12} >\n                            <Card style={{ padding: '2.5%', borderRadius: '10px' }}>\n                                <table className=\" is-fullwidth is-striped is-bordered\">\n                                    <thead>\n                                        <tr>\n\n                                            <th width='20%'> Name &nbsp; <span onClick={() => this.setSorting('full_name')}><i className=\"fa fa-sort\"></i></span></th>\n                                            <th width='10%'>OnProgress &nbsp; <span onClick={() => this.setSorting('total_onprogress')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='8%'>Finished &nbsp; <span onClick={() => this.setSorting('total_finished')}><i className=\"fa fa-sort\"></i></span></th>\n                                            <th width='18%'>Avrg. Rating &nbsp;<span onClick={() => this.setSorting('average_rating')}><i className=\"fa fa-sort\"></i></span>  </th>\n                                            <th width='9%'>Total Respond Time (hrs) &nbsp; <span onClick={() => this.setSorting('score')}><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='9%'>Total Resolution Time (hrs) &nbsp; <span onClick={() => this.setSorting('score')}><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='9%'>Overtime Respond  (hrs) &nbsp; <span onClick={() => this.setSorting('score')}><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='9%'>Overtime Resolution  (days) &nbsp; <span onClick={() => this.setSorting('score')}><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='8%'>Score  &nbsp; <span onClick={() => this.setSorting('score')}><i className=\"fa fa-sort\"></i></span> </th>\n\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {!isLoading && data.length > 0 ? data.map((item, i) => (\n                                            <Fragment>\n                                                <tr style={{ backgroundColor: i < 4 ? '#c5ebb0' : i >= data.length - 4 ? '#f7dae5' : '' }}>\n\n\n                                                    <td>\n                                                        <Link to={`/ccs/staff?id=${item._id}`}>\n                                                            <div className=\"media\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item.avatar_url} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <b>{item.full_name}</b>\n                                                                        <p>{item.role}</p>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </Link>\n                                                    </td>\n                                                    <td>\n                                                        <Link to={`/ccs/dashboard/onprogress?user_id=${item._id}`}> <b>{item.total_onprogress}</b></Link>\n                                                    </td>\n                                                    <td>\n                                                        <Link to={`/ccs/dashboard/completed?user_id=${item._id}`}><b>{item.total_finished} </b></Link>\n\n                                                    </td>\n                                                    <td>\n                                                        {item.average_rating !== null && item.average_rating > 0 ? (\n                                                            <Fragment>\n                                                                <b style={{ textAlign: 'center' }}>\n                                                                    {item.average_rating.toFixed(2)} &nbsp;\n                                                <StarRatings\n                                                                        rating={item.average_rating}\n                                                                        starRatedColor=\"orange\"\n                                                                        starDimension={'1vw'}\n                                                                        numberOfStars={5}\n                                                                        name='rating'\n                                                                    />\n                                                                </b>\n                                                            </Fragment>\n                                                        ) : ''}\n\n                                                    </td>\n\n                                                    <td><b>{item.total_respond_time !== null && item.total_respond_time > 0 ? item.total_respond_time.toFixed(2) : ''}</b></td>\n                                                    <td><b>{item.total_resolution_time !== null && item.total_resolution_time > 0 ? item.total_resolution_time.toFixed(2) : ''}</b></td>\n                                                    <td><b>{item.total_overtime_respond !== null && item.total_overtime_respond > 0 ? item.total_overtime_respond.toFixed(2) : ''}</b></td>\n                                                    <td><b>{item.total_overtime_resolution !== null && item.total_overtime_resolution > 0 ? item.total_overtime_resolution.toFixed(2) : ''}</b></td>\n                                                    <td><h4>{item.total_score}</h4></td>\n\n                                                </tr>\n\n\n\n\n                                            </Fragment>\n                                        )) : (\n                                                <tr>\n                                                    <td colSpan={6}>\n                                                        <div className=\"notification is-fullwidth\">\n                                                            <p>Loading ... </p>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n\n                                            )}\n                                    </tbody>\n                                </table>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                </Fragment>\n            </div>\n        )\n    }\n}\n\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div style={{ padding: '2.5%' }}>\n                <Grid>\n                    <Cell size={12}>\n                        <h4>Teams Resume</h4>\n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={12}\n                    >\n                        <table className=\"table  is-fullwidth is-striped is-bordered\">\n                            <thead>\n                                <tr>\n\n                                    <th width='20%'> Name </th>\n                                    <th width='10%'>OnProgress </th>\n                                    <th width='8%'>Finished </th>\n                                    <th width='18%'>Avrg. Rating </th>\n                                    <th width='9%'>Total Respond Time (hrs) </th>\n                                    <th width='9%'>Total Resolution Time (hrs)  </th>\n                                    <th width='9%'>Overtime Respond  (hrs)  </th>\n                                    <th width='9%'>Overtime Resolution  (days)  </th>\n                                    <th width='8%'>Score  </th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.data.map((item, i) => (\n                                    <Fragment>\n                                        <tr>\n\n\n                                            <td>\n                                                <Link to={`/ccs/staff?id=${item._id}`}>\n                                                    <div className=\"media\">\n                                                        <div className=\"media-left\">\n                                                            <Avatar src={item.avatar_url} />\n                                                        </div>\n                                                        <div className=\"media-content\">\n                                                            <div className=\"content\">\n                                                                <b>{item.full_name}</b>\n                                                                <p>{item.role}</p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Link>\n                                            </td>\n                                            <td>\n                                                <Link to={`/ccs/dashboard/onprogress?user_id=${item._id}`}> <b>{item.total_onprogress}</b></Link>\n                                            </td>\n                                            <td>\n                                                <Link to={`/ccs/dashboard/completed?user_id=${item._id}`}><b>{item.total_finished} </b></Link>\n\n                                            </td>\n                                            <td>\n                                                {item.average_rating !== null && item.average_rating > 0 ? (\n                                                    <Fragment>\n                                                        <b style={{ textAlign: 'center' }}>\n                                                            {item.average_rating.toFixed(2)} &nbsp;\n                                                <StarRatings\n                                                                rating={item.average_rating}\n                                                                starRatedColor=\"orange\"\n                                                                starDimension={'1vw'}\n                                                                numberOfStars={5}\n                                                                name='rating'\n                                                            />\n                                                        </b>\n                                                    </Fragment>\n                                                ) : ''}\n\n                                            </td>\n\n                                            <td><b>{item.total_respond_time !== null && item.total_respond_time > 0 ? item.total_respond_time.toFixed(2) : ''}</b></td>\n                                            <td><b>{item.total_resolution_time !== null && item.total_resolution_time > 0 ? item.total_resolution_time.toFixed(2) : ''}</b></td>\n                                            <td><b>{item.total_overtime_respond !== null && item.total_overtime_respond > 0 ? item.total_overtime_respond.toFixed(2) : ''}</b></td>\n                                            <td><b>{item.total_overtime_resolution !== null && item.total_overtime_resolution > 0 ? item.total_overtime_resolution.toFixed(2) : ''}</b></td>\n                                            <td><h4>{item.total_score}</h4></td>\n\n                                        </tr>\n\n\n\n\n                                    </Fragment>\n                                ))}\n                            </tbody>\n                        </table>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Button, SelectField, Cell, Card, DatePicker, TextField, MenuButton, IconSeparator, Avatar } from 'react-md'\nimport Filter from './Filter'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport { insertLog } from '../../log/InsertLog.js'\nimport dateformat from 'dateformat'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport qs from 'query-string'\nimport ReactToPrint from 'react-to-print'\n\nexport default class Team extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            collapsed: true,\n            data: [],\n            list_contain: '',\n            loadChild: [],\n            isLoading: true,\n            clients: [],\n            status: [],\n            asc: 1,\n            key: '',\n        }\n\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n        })\n\n    }\n\n    async componentDidMount() {\n\n        const parsed = qs.parse(window.location.search)\n        const tab_name = parsed.tab_name\n        if (parsed === undefined || parsed === null) {\n            tab_name = 'tickets'\n        }\n\n        this.setState({ list_contain: tab_name })\n\n        try {\n            await axios.get(`/api/ccs-customers`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n\n    }\n\n    search = async (evt) => {\n\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-customers`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-customers?key=${evt}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({ key: evt })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n\n        try {\n            await axios.get(`/api/ccs-customers?key=${this.state.key}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['NO'] = i + 1\n                            obj['Name'] = item.client_name\n                            obj['Total On Progress'] = item.total_onprogress\n\n                            obj['Total Finished'] = item.total_finished\n                            obj['Total Tickets'] = item.total_tickets\n\n\n\n\n                            dt[i] = obj\n\n                        })\n                        dataToExport = dt\n                        this.setState({ dataToExport: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        console.log(dataToExport)\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `Customer Report per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <Fragment>\n\n                    <Grid>\n                        <Cell size={12}>\n                            <div className=\"columns is-vcentered\" >\n                                <div className=\"column is-6\">\n\n                                </div>\n                                <div className=\"column is-2 \" style={{ alignContent: 'right' }}>\n                                    <MenuButton\n                                        id=\"menu-button-2\"\n                                        style={{ listStyle: 'none' }}\n                                        menuItems={[{\n                                            primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                        }, {\n                                            primaryText: (<ReactToPrint\n                                                trigger={() => <p>PDF</p>}\n                                                content={() => this.componentRef}\n                                            />),\n                                        }]}\n\n                                        centered\n                                        anchor={{\n                                            x: MenuButton.HorizontalAnchors.CENTER,\n                                            y: MenuButton.VerticalAnchors.CENTER,\n                                        }}\n                                    >\n                                        <button className=\"button is-small is-primary\">\n                                            <i className=\"fa fa-print\"></i>\n                                        &nbsp;<b>Print</b>\n                                        </button>\n                                    </MenuButton>\n                                    <div style={{ display: \"none\" }}>\n                                        <Printable\n                                            ref={el => (this.componentRef = el)}\n                                            data={this.state.data}\n                                        />\n\n                                    </div>\n                                </div>\n                                <div className=\"column is-4\">\n                                    <TextField\n                                        placeholder=\"Search ... \"\n                                        onChange={this.search}\n                                    />\n                                </div>\n                            </div>\n                        </Cell>\n                    </Grid>\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%', borderRadius: '10px' }}>\n                                <table className=\" is-fullwidth is-striped\">\n                                    <thead>\n                                        <tr>\n\n                                            <th width='27%'> Name &nbsp; <span onClick={() => this.setSorting('client_name')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='15%'> Total On Progress &nbsp; <span onClick={() => this.setSorting('total_onprogress')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='15%'> Total Finished &nbsp; <span onClick={() => this.setSorting('total_finished')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th width='15%'> Total TIckets  &nbsp; <span onClick={() => this.setSorting('total_tickets')} ><i className=\"fa fa-sort\"></i></span> </th>\n\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {!this.state.isLoading && this.state.data.length > 0 ? this.state.data.map((item, i) => (\n                                            <Fragment>\n                                                <tr>\n                                                    <td>\n                                                        <Link to={`/ccs/customer?id=${item._id}`}>\n\n                                                            <div className=\"media\">\n                                                                <div className=\"media-left\">\n                                                                    <Avatar src={item.avatar_url} />\n                                                                </div>\n                                                                <div className=\"media-content\">\n                                                                    <div className=\"content\">\n                                                                        <b>{item.client_name}</b>\n                                                                        <p>{item.role}</p>\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </Link>\n                                                    </td>\n                                                    <td>\n                                                        <h4><Link to={`/ccs/dashboard/onprogress?client_id=${item.employee_id}`}>{item.total_onprogress}</Link> </h4>\n\n                                                    </td>\n                                                    <td>\n                                                        <h4><Link to={`/ccs/dashboard/completed?client_id=${item.employee_id}`}>{item.total_finished}</Link> </h4>\n\n                                                    </td>\n                                                    <td>\n                                                        <h4> <Link to={`/ccs/dashboard/all?client_id=${item.employee_id}`}>{item.total_tickets}</Link></h4>\n                                                    </td>\n\n                                                </tr>\n\n\n\n\n                                            </Fragment>\n                                        )) : (\n                                                <tr>\n                                                    <td colSpan={6}>\n                                                        <div className=\"notification is-fullwidth\">\n                                                            <p>Loading ... </p>\n                                                        </div>\n                                                    </td>\n                                                </tr>\n\n                                            )}\n                                    </tbody>\n                                </table>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                </Fragment>\n            </div>\n        )\n    }\n}\n\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <div style={{ padding: '2.5%' }}>\n                <Grid>\n                    <Cell size={12}>\n                        <h4>Customer Resume</h4>\n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={12}\n                    >\n                        <table className=\" is-fullwidth is-striped\">\n                            <thead>\n                                <tr>\n\n                                    <th width='27%'> Name </th>\n                                    <th width='15%'> Total On Progress  </th>\n                                    <th width='15%'> Total Finished </th>\n                                    <th width='15%'> Total TIckets </th>\n\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.props.data.length > 0 ? this.props.data.map((item, i) => (\n                                    <Fragment>\n                                        <tr>\n                                            <td>\n                                                <Link to={`/ccs/customer?id=${item._id}`}>\n\n                                                    <div className=\"media\">\n                                                        <div className=\"media-left\">\n                                                            <Avatar src={item.avatar_url} />\n                                                        </div>\n                                                        <div className=\"media-content\">\n                                                            <div className=\"content\">\n                                                                <b>{item.client_name}</b>\n                                                                <p>{item.role}</p>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                </Link>\n                                            </td>\n                                            <td>\n                                                <h4><Link to={`/ccs/dashboard/onprogress?client_id=${item.employee_id}`}>{item.total_onprogress}</Link> </h4>\n\n                                            </td>\n                                            <td>\n                                                <h4><Link to={`/ccs/dashboard/completed?client_id=${item.employee_id}`}>{item.total_finished}</Link> </h4>\n\n                                            </td>\n                                            <td>\n                                                <h4> <Link to={`/ccs/dashboard/all?client_id=${item.employee_id}`}>{item.total_tickets}</Link></h4>\n                                            </td>\n\n                                        </tr>\n\n\n\n\n                                    </Fragment>\n                                )) : (\n                                        <tr>\n                                            <td colSpan={6}>\n                                                <div className=\"notification is-fullwidth\">\n                                                    <p>Loading ... </p>\n                                                </div>\n                                            </td>\n                                        </tr>\n\n                                    )}\n                            </tbody>\n                        </table>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Button, SelectField, Cell, Card, DatePicker, MenuButton, TextField, FontIcon } from 'react-md'\nimport Filter from './Filter'\nimport Team from './Team'\nimport Customers from './Customers'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\n\nimport axios from 'axios'\nimport { insertLog } from '../../log/InsertLog.js'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nimport ReactToPrint from 'react-to-print'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\n\nexport default class Report extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            collapsed: true,\n            data: [],\n            dataToExportPDF: [],\n            dataToExport: [],\n            list_contain: '',\n            loadChild: [],\n            isLoading: true,\n            clients: [],\n            status: [],\n            showFilter: false,\n            key: '',\n            category_id: '',\n            status_id: '',\n            priority_id: '',\n            client_id: '',\n            date_to: '',\n            date_from: '',\n            asc: 1,\n            total_data: 0,\n            currentPage: 1,\n            displayPerPage: 100\n        }\n\n\n        this.tableData = React.createRef();\n\n        this.addLog = this.addLog.bind(this)\n\n        this.socket = io(socket_address) //SERVER MSO\n        this.socket.on('TICKET_ADDED', (data) => {\n\n            this.componentDidMount()\n        })\n\n\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n\n        })\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('TICKET_ADDED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('QUEUED', (data) => {\n            // console.log(data)\n\n            this.componentDidMount()\n        })\n    }\n\n    componentDidMount = async () => {\n\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var tab_name = ''\n        if (parsed.tab_name === undefined || parsed.tab_name === null || parsed.tab_name === '') {\n            tab_name = 'tickets'\n        } else {\n            tab_name = parsed.tab_name\n        }\n\n        this.setState({ list_contain: tab_name })\n\n        try {\n            await axios.get(`/api/ccs-ticket-parents-total?currentPage=0&displayPerPage=0`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-parents?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        var dt = []\n                        response.data.data.map(async (item, i) => {\n                            dt[i] = true\n                            if (item.total_child > 0) {\n                                try {\n                                    await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                                        .then(response_child => {\n                                            if (response_child.data.status === 200) {\n                                                item.loadChild = true\n\n                                                item.child_ticket = response_child.data.data\n                                            }\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n\n\n\n                            return false\n                        })\n                        this.setState({ data: response.data.data, loadChild: dt, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: (<span className={\"tag \" + item.label_color} >{item.priority}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ priorities: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n\n                            var obj = {\n                                label: item.client_code + ' - ' + item.client_name,\n                                value: item._id\n                            }\n                            dt[i] = obj\n\n\n                            return false\n                        })\n\n                        this.setState({ clients: dt })\n\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.category,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ categories: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-status`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: <p style={{ color: item.label_color }}><b>{item.status}</b></p>,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ status: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        console.log(this.state.data)\n\n        // this.addLog()\n    }\n\n    addLog = () => {\n        insertLog('Access Report Page')\n    }\n\n    setTabList = (act) => {\n        if (act === 'create') {\n            this.setState({ contain: act })\n        } else {\n            this.setState({ list_contain: act })\n        }\n\n    }\n\n    toggleLoadChild = (i) => {\n        const loadChild = this.state.loadChild\n        loadChild[i] = !loadChild[i]\n\n        this.setState({\n            loadChild: loadChild\n        });\n\n        console.log(this.state.loadChild)\n    }\n\n    onChangeDateFrom = (evt) => {\n\n        this.setState({ date_from: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n    onChangeStatusId = (evt) => {\n        this.setState({ status_id: evt })\n    }\n\n    onChangeClientId = (evt) => {\n        this.setState({ client_id: evt })\n    }\n\n    changeKey = async (evt) => {\n        this.setState({ key: evt })\n        var filterString = ''\n        filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-ticket-parents-total${filterString}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-ticket-parents${filterString}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                dt[i] = true\n                                return false\n                            })\n                            this.setState({ data: response.data.data, loadChild: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            this.state.data.map(async (item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    item.loadChild = true\n\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n\n\n            })\n        } else {\n\n            try {\n                await axios.get(`/api/ccs-ticket-parents-total${filterString}&key=${evt}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-ticket-parents${filterString}&key=${evt}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                dt[i] = true\n                                return false\n                            })\n                            this.setState({ data: response.data.data, loadChild: dt })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            this.state.data.map(async (item, i) => {\n                if (item.total_child > 0) {\n                    try {\n                        await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                            .then(response_child => {\n                                if (response_child.data.status === 200) {\n                                    item.loadChild = true\n\n                                    item.child_ticket = response_child.data.data\n                                }\n                            })\n                    } catch (error) {\n                        console.log(error)\n                    }\n                }\n\n\n            })\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    filter = async () => {\n        var filterString = ''\n\n        filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n        try {\n            await axios.get(`/api/ccs-ticket-parents-total${filterString}&key=${this.state.key}&currentPage=0&displayPerPage=0`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-ticket-parents${filterString}&key=${this.state.key}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            dt[i] = true\n                            return false\n                        })\n                        this.setState({ data: response.data.data, loadChild: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        this.state.data.map(async (item, i) => {\n            if (item.total_child > 0) {\n                try {\n                    await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                        .then(response_child => {\n                            if (response_child.data.status === 200) {\n                                item.loadChild = true\n\n                                item.child_ticket = response_child.data.data\n                            }\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n\n\n        })\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n\n\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n\n    resetFilter = () => {\n        this.setState({\n            category_id: '',\n            priority_id: '',\n            status_id: '',\n            client_id: '',\n            date_to: '',\n            date_from: '',\n        })\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n\n        var filterString = ''\n\n        filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n        try {\n            await axios.get(`/api/ccs-ticket-parents${filterString}&key=${this.state.key}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map(async (item, i) => {\n                            dt[i] = true\n                            if (item.total_child > 0) {\n                                try {\n                                    await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                                        .then(response_child => {\n                                            if (response_child.data.status === 200) {\n                                                item.loadChild = true\n\n                                                item.child_ticket = response_child.data.data\n                                            }\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n\n\n                            return false\n                        })\n                        this.setState({ data: response.data.data, loadChild: dt, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n\n        var filterString = ''\n\n        filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n        try {\n            await axios.get(`/api/ccs-tickets${filterString}&key=${this.state.key}&currentPage=${0}&displayPerPage=${0}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map(async (item, i) => {\n                            var obj = {}\n                            obj['NO'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Title'] = item.title\n                            obj['Parent ID'] = item.parent_ticket_id\n                            {\n                                item.description.includes('<img ') || item.description.includes('<iframe ') ? (\n                                    obj['Description'] = '[MEDIA]'\n                                ) : (\n                                        obj['Description'] = item.description.replace(/<\\/?[^>]+(>|$)/g, \"\")\n\n                                    )\n                            }\n                            obj['BPR/Client'] = item.client_name\n                            obj['Priority'] = item.priority\n                            obj['Handled By'] = item.full_name\n                            obj['Status'] = item.status\n                            obj['Respond Time (h:m:s)'] = item.max_respond_at !== null && item.max_respond_at !== '' ? dateformat(item.max_respond_at, 'dd mmm yyyy, HH:MM') : '-'\n                            obj['Resolution Time (h:m:s)'] = item.max_resolution_at !== null && item.max_resolution_at !== '' ? dateformat(item.max_resolution_at, 'dd mmm yyyy, HH:MM') : '-'\n\n                            dt.push(obj)\n\n                            return false\n                        })\n                        dataToExport = dt\n                        this.setState({ dataToExport: dataToExport })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        console.log(dataToExport)\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `Tickets Report per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async () => {\n        var filterString = ''\n\n        filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}&status_id=${this.state.status_id}&client_id=${this.state.client_id}`\n\n\n        try {\n            await axios.get(`/api/ccs-tickets${filterString}&currentPage=${0}&displayPerPage=${0}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ dataToExportPDF: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n\n\n    render() {\n        const parsed = qs.parse(window.location.search)\n        var tab_name = ''\n        if (parsed.tab_name === undefined || parsed.tab_name === null || parsed.tab_name === '') {\n            tab_name = 'tickets'\n        } else {\n            tab_name = parsed.tab_name\n        }\n\n\n\n        const tabList = [\n            { color: '#348066', action: 'tickets', icon: 'fa fa-ticket', tooltip: 'Ticket Report' },\n            { color: 'darkblue', action: 'team', icon: 'fa fa-users', tooltip: 'Teams' },\n            { color: 'orange', action: 'customer', icon: 'fa fa-users', tooltip: 'Customers' },\n\n        ]\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        if (this.state.isLoading)\n            return (\n                <div className=\"notification\">\n                    <div className=\"media\">\n                        <div className=\"media-left\">\n                            <p className=\"text\">Loading ... &nbsp;</p>\n                        </div>\n                        <div className=\"media-content\">\n                            <img className=\"icon\" src=\"/images/loading.gif\" alt=\"\" />\n                        </div>\n                    </div>\n\n                </div>\n            )\n        else\n\n\n            return (\n                <Fragment >\n\n                    <Grid className=\"grid-example\">\n                        <h2 className=\"md-cell md-cell--12\">\n                            Report\n                    </h2>\n                    </Grid>\n                    <div className=\"tabs\" style={{ border: 'none' }}>\n                        <ul>\n                            {tabList.map((item, i) => {\n                                if (tab_name === item.action) {\n                                    return (<li\n                                        style={{ borderBottom: 'solid 3px ' + item.color, backgroundColor: '#c7d6eb', padding: '10px 5px 0 0 ', borderTopRightRadius: '8px', borderTopLeftRadius: '8px' }} >\n                                        <Link to={\"/ccs/report?tab_name=\" + item.action} ><i className={item.icon} ></i>&nbsp;{item.tooltip} </Link>\n\n                                    </li>\n                                    )\n                                } else {\n                                    return (<li\n                                        style={{ borderBottom: 'solid 3px ' + item.color, padding: '10px 5px 0 0 ', }} >\n                                        <Link to={\"/ccs/report?tab_name=\" + item.action} ><i className={item.icon} ></i>&nbsp; {item.tooltip} </Link>\n\n                                    </li>\n                                    )\n                                }\n\n                            })}\n                        </ul>\n                    </div>\n                    {\n                        (() => {\n                            switch (tab_name) {\n                                case 'tickets':\n                                    return (\n                                        <Fragment>\n                                            <Grid className=\"grid-example\">\n                                                <Cell size={12}>\n                                                    <h4>Ticket Report</h4>\n                                                </Cell>\n                                            </Grid>\n                                            <Grid>\n                                                <Cell size={12}>\n                                                    <div className=\"columns is-vcentered\" >\n                                                        <div className=\"column is-6\">\n\n                                                        </div>\n                                                        <div className=\"column is-2 \" style={{ alignContent: 'right' }}>\n                                                            <div className=\"container\">\n\n                                                                <button className=\"button is-info is-small \" onClick={() => this.setState({ showFilter: !this.state.showFilter })}>\n                                                                    {this.state.showFilter ? (<i className=\"fa fa-caret-up\"></i>) : (<i className=\"fa fa-caret-down\"></i>)}&nbsp; Filter\n                                                        </button>\n\n                                                        &nbsp;\n                                                        <MenuButton\n                                                                    id=\"menu-button-2\"\n                                                                    style={{ listStyle: 'none' }}\n                                                                    menuItems={[{\n                                                                        primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                                                                    }, {\n                                                                        primaryText: (<ReactToPrint\n                                                                            onBeforeGetContent={this.beforeGetContent}\n                                                                            trigger={() => <p>PDF</p>}\n                                                                            content={() => this.componentRef}\n                                                                        />),\n                                                                    }]}\n\n                                                                    centered\n                                                                    anchor={{\n                                                                        x: MenuButton.HorizontalAnchors.CENTER,\n                                                                        y: MenuButton.VerticalAnchors.CENTER,\n                                                                    }}\n                                                                >\n                                                                    <button className=\"button is-small is-primary\">\n                                                                        <i className=\"fa fa-print\"></i>\n                                                                &nbsp;<b>Print</b>\n                                                                    </button>\n                                                                </MenuButton>\n                                                                <div style={{ display: \"none\" }}>\n                                                                    <Printable\n                                                                        ref={el => (this.componentRef = el)}\n                                                                        data={this.state.dataToExportPDF}\n                                                                    />\n\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"column is-4\">\n                                                            <TextField\n                                                                onChange={this.changeKey}\n                                                                placeholder=\"Search ... \"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </Cell>\n                                            </Grid>\n                                            {this.state.showFilter ? (\n                                                <Grid className=\"grid-example\">\n                                                    <Cell size={12} >\n                                                        <Card style={{ padding: '2.5%', borderRadius: '10px' }}>\n                                                            <DatePicker\n                                                                fullWidth\n                                                                id=\"appointment-date-portrait\"\n                                                                label=\"From Date\"\n                                                                className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                                                displayMode=\"landscape\"\n                                                                onChange={this.onChangeDateFrom}\n                                                                value={this.state.date_from}\n                                                            />\n                                                            <DatePicker\n                                                                fullWidth\n                                                                id=\"appointment-date-landscape\"\n                                                                label=\"To Date\"\n                                                                className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                                                displayMode=\"landscape\"\n                                                                onChange={this.onChangeDateTo}\n                                                                value={this.state.date_to}\n                                                            />\n                                                            <SelectField\n                                                                leftIcon={\"view_list\"}\n                                                                label=\"Select BPR/Client \"\n                                                                className=\"md-cell md-cell--12-tablet md-cell--8\"\n                                                                menuItems={this.state.clients}\n                                                                onChange={this.onChangeClientId}\n                                                                value={this.state.client_id}\n                                                            />\n                                                            <SelectField\n                                                                leftIcon={\"view_list\"}\n                                                                label=\"Select Category\"\n                                                                className=\"md-cell md-cell--12-tablet md-cell--8\"\n                                                                menuItems={this.state.categories}\n                                                                onChange={this.onChangeCategoryId}\n                                                                value={this.state.category_id}\n                                                            />\n                                                            <SelectField\n                                                                leftIcon={\"view_list\"}\n                                                                label=\"Select Priority\"\n                                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                                menuItems={this.state.priorities}\n                                                                onChange={this.onChangePriorityId}\n                                                                value={this.state.priority_id}\n                                                            />\n                                                            <SelectField\n                                                                leftIcon={\"view_list\"}\n                                                                label=\"Select Status\"\n                                                                className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                                                menuItems={this.state.status}\n                                                                onChange={this.onChangeStatusId}\n                                                                value={this.state.status_id}\n                                                            />\n\n                                                            <br />\n                                                            <button className=\"button is-primary is-small\" onClick={this.filter}><i className=\"fa fa-filter\" />&nbsp;Apply</button>\n                                                        &nbsp;\n                                                        <button className=\"button  is-small\" onClick={this.resetFilter}>< i className=\"fa fa-refresh\" />&nbsp;Reset</button>\n                                                        </Card>\n                                                    </Cell>\n                                                </Grid>\n                                            ) : ''}\n                                            <Grid ref={this.tableData}  >\n                                                <Cell size={12}  >\n                                                    <Card style={{ padding: '2.5%', borderRadius: '10px' }}>\n                                                        <table className=\"table   is-fullwidth is-striped\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th width='3%'></th>\n                                                                    <th> #ID&nbsp; <span onClick={() => this.setSorting('_id')} ><i className=\"fa fa-sort\"></i></span> </th>\n\n                                                                    <th width='23%'> Ticket Request &nbsp; <span onClick={() => this.setSorting('title')} ><i className=\"fa fa-sort\"></i></span> </th>\n\n                                                                    <th width='9%'>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                                    <th width='15%'> BPR /Client Name &nbsp; <span onClick={() => this.setSorting('client_code')}> <i className=\"fa fa-sort\"></i></span> </th>\n\n                                                                    <th width='15%'>Handled By &nbsp; <span onClick={() => this.setSorting('full_name')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                                    <th width='15%'>Status  &nbsp; <span onClick={() => this.setSorting('status')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                                    <th>Respond Time (h:m:s) &nbsp; <span onClick={() => this.setSorting('respond_time')} ><i className=\"fa fa-sort\"></i></span> </th>\n                                                                    <th>Resolution Time (h:m:s)&nbsp; <span onClick={() => this.setSorting('resolution_time')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {!this.state.isLoading && this.state.data.length > 0 ? this.state.data.map((item, i) => (\n                                                                    <Fragment>\n                                                                        <tr>\n                                                                            <td>\n                                                                                {item.total_child > 0 ? (\n                                                                                    <a onClick={() => this.toggleLoadChild(i)}><FontIcon >{this.state.loadChild[i] ? 'arrow_drop_down' : 'arrow_right'} </FontIcon></a>\n\n                                                                                ) : ''}\n                                                                            </td>\n                                                                            <td >\n\n                                                                                <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link> &nbsp;\n\n\n                                                        </td>\n\n                                                                            <td >\n\n                                                                                <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b> </Link> &nbsp;\n\n\n                                                                </td>\n\n\n                                                                            <td>\n                                                                                {item.priority_id !== '' ? (\n                                                                                    <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                                ) : '-'}\n                                                                            </td>\n                                                                            <td>\n                                                                                <p>{item.client_name}</p>\n                                                                            </td>\n                                                                            <td>\n                                                                                {item.handled_by_user_id !== '' ? (\n                                                                                    <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                                ) : '-'}\n\n                                                                            </td>\n                                                                            <td>\n                                                                                <span>\n                                                                                    <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                                                                </span>\n                                                                            </td>\n                                                                            <td>\n                                                                                <p>{item.max_respond_at !== null && item.max_respond_at !== '' ? dateformat(item.max_respond_at, 'dd mmm yyyy, HH:MM') : '-'}</p>\n\n                                                                            </td>\n                                                                            <td>\n                                                                                <p>{item.max_resolution_at !== null && item.max_resolution_at !== '' ? dateformat(item.max_resolution_at, 'dd mmm yyyy, HH:MM') : '-'}</p>\n\n                                                                            </td>\n                                                                        </tr>\n                                                                        {\n                                                                            // item.child_ticket != undefined &&  item.child_ticket.length > 0 ? \n                                                                            this.state.loadChild[i] && item.child_ticket != undefined && item.child_ticket.map((child, i_child) => (\n                                                                                <tr>\n                                                                                    <td ></td>\n                                                                                    <td style={{ paddingLeft: '2.8vw' }} >\n\n                                                                                        <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link> &nbsp;\n\n\n                                                                    </td>\n                                                                                    <td >\n                                                                                        {/* <FontIcon>subdirectory_arrow_right</FontIcon> {*/}\n                                                                                        <Link to={`/ccs/ticket/detail?ticket_id=${child._id}`} > <b>{child.title}</b> </Link> &nbsp;\n\n                                                                    </td>\n                                                                                    <td>\n                                                                                        {item.priority_id !== '' ? (\n                                                                                            <span className={\"tag \" + child.label_color_priority}><b>{child.priority}</b></span>\n                                                                                        ) : '-'}\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <p>{child.client_name}</p>\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <td>\n                                                                                            {child.full_name_handler !== '' && child.full_name_handler !== null ? (\n                                                                                                <span className=\"tag\"><Link to={`/ccs/staff?id=${child.handled_by_user_id}`} >{child.full_name_handler}</Link></span>\n                                                                                            ) : ''}\n                                                                                        </td>\n\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <span>\n                                                                                            <b style={{ color: child.label_color_status }}>{child.status}</b>\n                                                                                        </span>\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <p>{item.max_respond_at !== null && item.max_respond_at !== '' ? dateformat(item.max_respond_at, 'dd mmm yyyy, HH:MM') : '-'}</p>\n\n                                                                                    </td>\n                                                                                    <td>\n                                                                                        <p>{item.max_resolution_at !== null && item.max_resolution_at !== '' ? dateformat(item.max_resolution_at, 'dd mmm yyyy, HH:MM') : '-'}</p>\n\n                                                                                    </td>\n                                                                                </tr>\n\n                                                                            ))\n                                                                            // :'' \n                                                                        }\n\n                                                                    </Fragment>\n                                                                )) : (\n                                                                        <tr>\n                                                                            <td colSpan={7}>\n                                                                                <div className=\"notification is-fullwidth\">\n                                                                                    <p>Loading ... </p>\n                                                                                </div>\n                                                                            </td>\n                                                                        </tr>\n\n                                                                    )}\n                                                            </tbody>\n                                                        </table>\n                                                        {pages.length > 0 ? (\n                                                            <div className=\"container\">\n                                                                <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                                <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                                {pages.map((page) => (\n                                                                    this.isActive(page) ? (\n                                                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                    ) : (\n                                                                            <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                        )\n\n\n                                                                ))}\n                                                                <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                                <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                            </div>\n\n                                                        ) : ''}\n\n                                                    </Card>\n                                                </Cell>\n                                            </Grid>\n                                        </Fragment>\n                                    )\n                                case 'team':\n                                    return (\n                                        <div>\n                                            <Grid className=\"grid-example\">\n                                                <Cell size={12}>\n                                                    <h4>Teams</h4>\n                                                </Cell>\n                                            </Grid>\n\n                                            <Team />\n\n                                        </div>\n                                    )\n                                case 'customer':\n                                    return (\n                                        <div>\n                                            <Grid className=\"grid-example\">\n                                                <Cell size={12}>\n                                                    <h4>Customers</h4>\n                                                </Cell>\n                                            </Grid>\n\n                                            <Customers />\n\n                                        </div>\n                                    )\n                            }\n                        })()\n                    }\n\n                </Fragment>\n            )\n    }\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        data: [],\n        loadChild: []\n    }\n\n    componentDidMount = async () => {\n    }\n\n    render() {\n        return (\n            <div style={{ padding: '2.5%' }}>\n\n                <h4>Ticket Reports</h4>\n\n                <table className=\"table is-bordered is-fullwidth is-striped\" style={{ fontSize: '8pt' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ width: '5%' }}>No</th>\n                            <th style={{ width: '8%' }}>#ID</th>\n                            <th style={{ width: '8%' }}>Parent Ticket #ID</th>\n                            <th style={{ width: '22%' }}> Ticket Request</th>\n\n                            <th style={{ width: '8%' }}> BPR /Client Name</th>\n                            <th style={{ width: '8%' }}>Handled By </th>\n                            <th style={{ width: '8%' }}>Status  </th>\n                            <th style={{ width: '8%' }} >Respond Time (h:m:s)</th>\n                            <th style={{ width: '9%' }} >Resolution Time (h:m:s)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.length > 0 ? this.props.data.map((item, i) => (\n\n                            <tr>\n                                <td>{i + 1}</td>\n                                <td>{item._id}</td>\n                                <td>{item.parent_ticket_id}</td>\n                                <td>\n\n                                    {item.priority_id !== '' ? (\n                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                    ) : '-'} &nbsp; <b>{item.title}</b>\n                                    <p>Content: </p>\n                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n\n                                </td>\n\n\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.handled_by_user_id !== '' ? (\n                                        item.full_name\n                                    ) : '-'}\n\n                                </td>\n                                <td>\n                                    <span>\n                                        <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                    </span>\n                                </td>\n                                <td>\n                                    <p>{item.max_respond_at !== null && item.max_respond_at !== '' ? dateformat(item.max_respond_at, 'dd mmm yyyy, HH:MM') : '-'}</p>\n\n                                </td>\n                                <td>\n                                    <p>{item.max_resolution_at !== null && item.max_resolution_at !== '' ? dateformat(item.max_resolution_at, 'dd mmm yyyy, HH:MM') : '-'}</p>\n\n                                </td>\n                            </tr>\n\n\n\n                        )) : (\n                                '-'\n\n                            )}\n                    </tbody>\n                </table>\n\n            </div>\n        )\n    }\n}\n\n","import Report from './Report'\n\nexport default {\n    routeProps: {\n        path: '/ccs/report',\n        exact: true,\n        component: Report,\n    },\n    name: 'Report',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Cell, Card, Avatar, DatePicker, List, ListItem } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport StarRatings from 'react-star-ratings'\nimport { insertLog } from '../../../log/InsertLog'\nimport 'react-vis/dist/style.css';\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../components/socket-address'\nimport {\n    BarChart, Bar, Cell as CellGraph, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Dashboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            role: '',\n            data: [],\n            team_activities: [],\n            total_teams: 0,\n            team_ranks: [],\n            total_per_client: [],\n            contain: '',\n            total_split: 0,\n            total_tickets: 0,\n            total_answered: 0,\n            total_forwarded: 0,\n            total_available: 0,\n            total_approve: 0,\n            total_finished: 0,\n            total_handle: 0,\n            total_rejected: 0,\n            total_unrated: 0,\n        }\n\n\n        this.socket = io(socket_address)\n\n        this.socket.on('TICKET_ADDED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('UPDATE_ANSWER', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('TICKET_ADDED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('QUEUED', (data) => {\n            this.componentDidMount()\n        })\n\n    }\n\n    async componentDidMount() {\n\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role })\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        if (this.state.role.includes('Superadmin') || this.state.role.includes('Direktur')) {\n            /*\n            try{\n                await axios.get(`/api/ccs-ticket-rating-average`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item,i) => {\n                            if (i < 15) {\n                                dt.push(item)\n                            }\n                            return false\n                        })\n                        this.setState({team_ranks:dt})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n            */\n\n            try {\n                await axios.get(`/api/ccs-teams`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n\n                            this.setState({ team_ranks: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-customers`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                if (i < 15) {\n                                    dt.push(item)\n                                }\n                                return false\n                            })\n                            this.setState({ total_per_client: dt })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                await axios.get(`/api/ccs-teams`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_teams: response.data.data.length\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_completed: response.data.data[0].total\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress-total`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_onprogress: response.data.data[0].total\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-total`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_tickets: response.data.data[0].total\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                await axios.get(`/api/logs-by-module-id/${module_id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                if (i < 15) {\n                                    dt.push(item)\n                                }\n                                return false\n                            })\n                            this.setState({ team_activities: dt })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            this.getTicketRunningDate()\n\n\n\n        } else if (this.state.role.includes('Help Desk') || this.state.role.includes('Implementator') || this.state.role.includes('Specialist')) {\n            this.getTotalRejected()\n            this.getTotalHandle()\n            this.getTotalForward()\n            this.getTotalFinish()\n            this.getTotalCompleted()\n\n        } else if (this.state.role.includes('Supervisor CCS')) {\n            this.getTotalAvailable()\n            this.getTotalApprove()\n            this.getTotalTickets()\n            this.getTotalSplittedTickets()\n\n        } else if (this.state.role.includes('Customer')) {\n            var client_id = ''\n            try {\n                await axios.get(`/api/user/${payload.userId}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            client_id = response.data.data[0].client_id\n                            this.setState({ client_id: response.data.data[0].client_id })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            if (client_id === null) {\n                client_id = ''\n            }\n\n            try {\n                await axios.get(`/api/logs-by-module-user-id/${module_id}/${payload.userId}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                if (i < 15) {\n                                    dt.push(item)\n                                }\n                                return false\n                            })\n                            this.setState({ team_activities: dt })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total?client_id=${client_id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_completed: response.data.data[0].total\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-unrated-total?client_id=${client_id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_unrated: response.data.data[0].total\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-onprogress-total?client_id=${client_id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_onprogress: response.data.data[0].total\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-total?client_id=${client_id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({\n                                total_tickets: response.data.data[0].total\n                            })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            this.getTicketRunningDate()\n\n        }\n\n        //insertLog('Access Dashboard Page',module_id)\n\n\n    }\n\n    getTotalRejected = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_rejected: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalCompleted = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-completed-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_finished: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalTickets = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-total`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_tickets: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalSplittedTickets = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_tickets: response.data.data.length })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalHandle = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-handle-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_handle: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalFinish = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_answered: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalAvailable = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-total`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_available: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n    getTotalApprove = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-approval-total`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_approve: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTotalForward = async () => {\n        try {\n            await axios.get(`/api/ccs-tickets-my-forward-total/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_forwarded: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    getTicketRunningDate = async () => {\n        var dt = []\n        var date = new Date();\n        var lastDay = dateformat(new Date(date.getFullYear(), date.getMonth() + 1, 0), 'd')\n\n        if (this.props.role.includes('Customer')) {\n            var client_id = ''\n\n            await axios.get(`/api/user/${payload.userId}`)\n                .then(response => {\n                    try {\n                        if (response.data.status === 200) {\n\n                            response.data.data.map((item, i) => {\n                                client_id = item.client_id\n                            })\n                        }\n                    } catch (error) {\n                        console.log(error)\n                    }\n                })\n            this.setState({ client_id: client_id })\n            for (var i = 1; i <= lastDay; i++) {\n                var obj = {}\n                obj.date = i\n                try {\n                    await axios.get(`/api/ccs-tickets-all-completed?client_id=${client_id}&date=${(dateformat(new Date(), 'yyyy-mm') + '-' + (i))}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                obj.Completed = response.data.data.length\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n                try {\n                    await axios.get(`/api/ccs-tickets-all-onprogress?client_id=${client_id}&date=${(dateformat(new Date(), 'yyyy-mm') + '-' + (i))}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                obj.Onprogress = response.data.data.length\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                dt[i - 1] = obj\n            }\n\n            this.setState({ data_ticket_running: dt })\n\n        } else {\n            for (var i = 1; i <= lastDay; i++) {\n                var obj = {}\n                obj.date = i\n                try {\n                    await axios.get(`/api/ccs-tickets-all-completed?date=${(dateformat(new Date(), 'yyyy-mm') + '-' + (i))}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                obj.Completed = response.data.data.length\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n\n                try {\n                    await axios.get(`/api/ccs-tickets-all-onprogress?date=${(dateformat(new Date(), 'yyyy-mm') + '-' + (i))}`)\n                        .then(response => {\n\n                            if (response.data.status === 200) {\n                                obj.Onprogress = response.data.data.length\n                            }\n\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n                dt[i - 1] = obj\n            }\n\n            this.setState({ data_ticket_running: dt })\n\n        }\n    }\n\n    render() {\n\n        const data01 = [\n            { name: 'On Progress Tickets', value: this.state.total_onprogress }, { name: 'Completed Tickets', value: this.state.total_completed },\n\n        ];\n\n        const COLORS = ['#0088FE', '#00C49F']\n\n\n        return (\n            <div>\n                {/* <div className=\"columns\">\n                    <div className=\"column is-8\">\n\n                    </div>\n                    <div className=\"column is-4\">\n                        <div className=\"md-grid\">\n                            <DatePicker\n                                id=\"show-all-days\"\n                              \n                                className=\"md-cell md-cell--6\"\n                                label=\"From Date\"\n                            /> \n                            <DatePicker\n                                id=\"show-all-days-disabled-outer\"\n                               \n                                className=\"md-cell md-cell--6\"\n                                label=\"To Date\"\n                            />\n                        </div>\n                    </div>\n                </div> */}\n                <section className=\"info-tiles\">\n                    {(() => {\n                        if (this.state.role.includes('Customer')) {\n                            return (\n                                <div className=\"tile is-ancestor has-text-centered\">\n                                    <Fragment>\n                                        <Link to={`/ccs/task?tab_name=my-ticket`} className=\"tile is-parent\" >\n                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'lightblue' }}>\n                                                <p className=\"title\"> {this.state.total_tickets}</p>\n                                                <p className=\"subtitle\">Total Tickets</p>\n                                            </article>\n                                        </Link>\n                                        <Link to={`/ccs/task?tab_name=my-handle`} className=\"tile is-parent\" >\n                                            <article className=\"tile is-child box\" style={{ backgroundColor: ' orange' }}>\n                                                <p className=\"title\"> {this.state.total_onprogress}</p>\n                                                <p className=\"subtitle\">On Progress Tickets</p>\n                                            </article>\n                                        </Link>\n                                        <Link to={`/ccs/task?tab_name=completed`} className=\"tile is-parent\" >\n                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#aaf2d8 ' }}>\n                                                <p className=\"title\"> {this.state.total_completed}</p>\n                                                <p className=\"subtitle\">Finished Tickets ({this.state.total_unrated} Unrated)</p>\n                                            </article>\n                                        </Link>\n                                    </Fragment>\n                                </div>\n                            )\n                        } else if (this.state.role.includes('Superadmin') || this.state.role.includes('Direktur')) {\n                            return (\n                                <div className=\"tile is-ancestor has-text-centered \">\n                                    <Fragment>\n                                        <Link to={`/ccs/dashboard/all`} className=\"tile is-parent\" >\n                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'lightblue' }}>\n                                                <p className=\"title\"> {this.state.total_tickets}</p>\n                                                <p className=\"subtitle\">Total Tickets</p>\n                                            </article>\n                                        </Link>\n                                        <Link to={`/ccs/dashboard/onprogress`} className=\"tile is-parent\" >\n                                            <article className=\"tile is-child box\" style={{ backgroundColor: ' orange' }}>\n                                                <p className=\"title\"> {this.state.total_onprogress}</p>\n                                                <p className=\"subtitle\">On Progress Tickets</p>\n                                            </article>\n                                        </Link>\n\n                                        <Link to={`/ccs/dashboard/completed`} className=\"tile is-parent\" >\n                                            <article className=\"tile is-child box\" style={{ backgroundColor: '#aaf2d8 ' }}>\n                                                <p className=\"title\"> {this.state.total_completed}</p>\n                                                <p className=\"subtitle\">Finished Tickets</p>\n                                            </article>\n                                        </Link>\n                                        <Link to={`/ccs/teams`} className=\"tile is-parent\" >\n                                            <article className=\"tile is-child box\" style={{ backgroundColor: 'pink' }}>\n                                                <p className=\"title\"> {this.state.total_teams}</p>\n                                                <p className=\"subtitle\">Teams</p>\n                                            </article>\n                                        </Link>\n                                    </Fragment>\n                                </div>\n                            )\n                        }\n                    })()}\n\n                </section>\n                {(() => {\n                    if (this.state.role.includes('Customer')) {\n                        return (\n                            <Fragment>\n                                <Grid>\n                                    <Cell size={6} >\n                                        <Card style={{borderRadius:'10px'}}>\n                                            <Grid>\n                                                <Cell size={12} >\n                                                    <h4>My Activities</h4>&nbsp;<Link to={`/ccs/log`} >See All</Link>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }} >\n                                                            {this.state.team_activities.length > 0 ? (\n                                                                <List style={{ listStyle: 'none' }}>\n                                                                    {this.state.team_activities.map((item, i) => (\n                                                                        <ListItem\n                                                                            leftAvatar={<Avatar src={item.avatar_url}></Avatar>}\n\n                                                                            primaryText={(<b>{item.full_name !== null ? item.full_name : item.client_name}</b>)}\n                                                                            secondaryText={item.log + '\\n' + (dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss'))}\n                                                                            threeLines\n                                                                        />\n\n                                                                    ))}\n\n\n                                                                </List>\n                                                            ) : (\n                                                                    <div className=\"notification\" style={{ marginRight: '5vw' }}>\n                                                                        <p>Data is empty ...</p>\n                                                                    </div>\n                                                                )}\n                                                        </Cell>\n                                                    </Grid>\n\n                                                </Cell>\n                                            </Grid>\n                                        </Card>\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <Card style={{borderRadius:'10px'}} >\n                                            <Grid>\n                                                <Cell size={12} >\n                                                    <h4>Graph Ticket</h4> &nbsp; <a>&nbsp;</a>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }}>\n                                                            <BarChart\n                                                                width={1000}\n                                                                height={380}\n                                                                data={this.state.data_ticket_running}\n                                                                margin={{\n                                                                    top: 5, right: 10, left: 10, bottom: 5,\n                                                                }}\n                                                            >\n                                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                <XAxis dataKey=\"date\" />\n                                                                <YAxis />\n                                                                <Tooltip />\n                                                                <Legend />\n                                                                <Bar dataKey=\"Onprogress\" fill=\"#8884d8\" />\n                                                                <Bar dataKey=\"Completed\" fill=\"#82ca9d\" />\n                                                            </BarChart>\n\n                                                        </Cell>\n                                                    </Grid>\n                                                </Cell>\n                                            </Grid>\n                                        </Card>\n                                    </Cell>\n                                </Grid>\n                            </Fragment>\n                        )\n                    } else if (this.state.role.includes('Superadmin') || this.state.role.includes('Direktur')) {\n                        return (\n                            <Fragment>\n                                <Grid>\n\n                                    <Cell size={6} >\n                                        <Card style={{borderRadius:'10px'}} >\n                                            <Grid>\n                                                <Cell size={12} >\n                                                    <h4>Users Activities</h4>&nbsp;<Link to={`/ccs/log`} >See All</Link>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }} >\n                                                            {this.state.team_activities.length > 0 ? (\n                                                                <List style={{ listStyle: 'none' }}>\n                                                                    {this.state.team_activities.map((item, i) => (\n                                                                        <ListItem\n                                                                            leftAvatar={<Avatar src={item.avatar_url}></Avatar>}\n\n                                                                            primaryText={(<b>{item.full_name !== null ? item.full_name : item.client_name}</b>)}\n                                                                            secondaryText={item.log + '\\n' + (dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss'))}\n                                                                            threeLines\n                                                                        />\n\n                                                                    ))}\n\n\n                                                                </List>\n                                                            ) : (\n                                                                    <div className=\"notification\" style={{ marginRight: '5vw' }}>\n                                                                        <p>Data is empty ...</p>\n                                                                    </div>\n                                                                )}\n                                                        </Cell>\n                                                    </Grid>\n\n                                                </Cell>\n                                            </Grid>\n                                        </Card>\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <Card style={{borderRadius:'10px'}} >\n                                            <Grid>\n                                                <Cell size={12} >\n                                                    <h4>Team Ranks</h4>&nbsp;<Link to={`/ccs/teams`} >See All</Link>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }}>\n                                                            {this.state.team_ranks.length > 0 ? (\n                                                                <List style={{ listStyle: 'none' }}>\n                                                                    {this.state.team_ranks.map((item, i) => (\n                                                                        <Link to={`/ccs/staff?id=${item._id}`} >\n                                                                            <ListItem\n                                                                                leftAvatar={<Avatar src={item.avatar_url}></Avatar>}\n                                                                                rightIcon={(<Fragment><b>{item.total_score > 0 ? item.total_score.toFixed(2) : item.total_score}</b>\n                                                                            &nbsp;\n\n                                                                                </Fragment>)}\n                                                                                primaryText={<b>{item.full_name}</b>}\n                                                                                secondaryText={item.average_rating !== null && item.average_rating > 0 ? (\n                                                                                    <Fragment>\n                                                                                        <b style={{ textAlign: 'center' }}>\n                                                                                            {item.average_rating.toFixed(2)} &nbsp;\n                                                                                <StarRatings\n                                                                                                rating={item.average_rating}\n                                                                                                starRatedColor=\"orange\"\n                                                                                                starDimension={'1.5vw'}\n                                                                                                numberOfStars={5}\n                                                                                                name='rating'\n                                                                                            />\n                                                                                        </b>\n                                                                                    </Fragment>\n                                                                                ) : ''}\n                                                                                threeLines\n                                                                            />\n                                                                        </Link>\n\n                                                                    ))}\n                                                                </List>\n                                                            ) : (\n                                                                    <div className=\"notification\" style={{ marginRight: '5vw' }}>\n                                                                        <p>Data is empty ...</p>\n                                                                    </div>\n\n\n                                                                )}\n\n                                                        </Cell>\n                                                    </Grid>\n\n                                                </Cell>\n                                            </Grid>\n                                        </Card>\n                                    </Cell>\n\n                                </Grid>\n                                <Grid>\n\n                                    <Cell size={6}>\n                                        <Card style={{borderRadius:'10px'}} >\n                                            <Grid>\n                                                <Cell size={12} >\n                                                    <h4>Graph Ticket</h4> &nbsp; <a>&nbsp;</a>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '60vh', overflowY: 'scroll' }}>\n                                                            <BarChart\n                                                                width={1000}\n                                                                height={380}\n                                                                data={this.state.data_ticket_running}\n                                                                margin={{\n                                                                    top: 5, right: 10, left: 10, bottom: 5,\n                                                                }}\n                                                            >\n                                                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                                                <XAxis dataKey=\"date\" />\n                                                                <YAxis />\n                                                                <Tooltip />\n                                                                <Legend />\n                                                                <Bar dataKey=\"Onprogress\" fill=\"#8884d8\" />\n                                                                <Bar dataKey=\"Completed\" fill=\"#82ca9d\" />\n                                                            </BarChart>\n\n                                                        </Cell>\n                                                    </Grid>\n                                                </Cell>\n                                            </Grid>\n                                        </Card>\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <Card style={{borderRadius:'10px'}} >\n                                            <Grid>\n                                                <Cell size={12} >\n                                                    <h4>TIcket per Client</h4>\n                                                    <Grid>\n                                                        <Cell size={12} style={{ height: '64vh', overflowY: 'scroll' }}>\n                                                            {this.state.total_per_client.length > 0 ? (\n                                                                <List style={{ listStyle: 'none' }}>\n                                                                    {this.state.total_per_client.map((item, i) => (\n                                                                        <Link to={'/ccs/customer?id=' + item._id} >\n                                                                            <ListItem\n                                                                                leftAvatar={<Avatar src={item.avatar_url}></Avatar>}\n                                                                                rightIcon={(<Fragment><b>{item.total_tickets}</b>\n                                                                            &nbsp; Ticket(s)\n                                                                                </Fragment>)}\n                                                                                primaryText={<b>{item.client_name}</b>}\n\n                                                                                threeLines\n                                                                            >\n\n                                                                            </ListItem>\n                                                                        </Link>\n\n                                                                    ))}\n                                                                </List>\n                                                            ) : (\n                                                                    <div className=\"notification\" style={{ marginRight: '5vw' }}>\n                                                                        <p>Data is empty ...</p>\n                                                                    </div>\n                                                                )}\n\n                                                        </Cell>\n                                                    </Grid>\n\n                                                </Cell>\n                                            </Grid>\n                                        </Card>\n                                    </Cell>\n\n                                </Grid>\n                            </Fragment>\n                        )\n                    }\n                })()}\n\n\n\n            </div>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Grid, Cell } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport Task from '../menus/task/Task'\nimport Dashboard from './Dashboard'\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            role: '',\n            data: [],\n            contain: '',\n            role_id: '',\n            announcements: [],\n        }\n\n\n\n    }\n\n    async componentDidMount() {\n      \n        this.setState({ contain: 'form' })\n\n\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n       \n\n        const link = (window.location.pathname)\n\n        try {\n            await axios.get(`/api/role-control-by-link-role-id/${link}/${this.state.role_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/announcements-by-module-id/${module_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (dateformat(item.star_date, 'yyyy-mm-dd') <= dateformat(new Date(), 'yyyy-mm-dd') && dateformat(item.end_date, 'yyyy-mm-dd') >= dateformat(new Date(), 'yyyy-mm-dd')) {\n                                var obj = item\n                                dt.push(obj)\n                            }\n\n                            return false\n                        })\n                        this.setState({ announcements: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                {(() => {\n                    if (payload.userId === null) {\n                        return (<Redirect to={'/'} />)\n                    } else {\n\n                        if (!this.state.role.includes('Help Desk') && !this.state.role.includes('Implementator') && !this.state.role.includes('Support Pelayanan') && !this.state.role.includes('Specialist') && !this.state.role.includes('Supervisor CCS')) {\n                            return (\n                                <Grid className=\"grid-example\">\n\n                                    <h2 className=\"md-cell md-cell--12\">\n                                        Hi, {payload.username}  <p>{this.state.role}</p>\n                                    </h2>\n                                    <Cell size={12}>\n                                        {this.state.announcements.length > 0 ? (\n                                            <Fragment>\n                                                <h4>Announcements</h4>\n                                                {this.state.announcements.map((item, i) => (\n                                                    <div className=\"notification is-warning animated zoomIn\">\n                                                        <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                    </div>\n                                                ))}\n                                            </Fragment>\n                                        ) : ''}\n                                    </Cell>\n\n                                    <Cell size={12}>\n                                        <Dashboard role={this.state.role} />\n                                    </Cell>\n                                </Grid>\n                            )\n                        } else {\n\n                            return (<Redirect to={'/ccs/task'} /> )\n                        }\n                    }\n                })()}\n\n\n            </div>\n        )\n    }\n}","\nimport CCS from './CCS'\n\n\nexport default {\n    routeProps: {\n        path: '/ccs',\n        exact: true,\n        component: CCS,\n    },\n    name: 'CCS',\n}","import Preferences from '../../../components/Preferences'\n\nexport default {\n    routeProps: {\n        path: '/ccs/setting/preferences',\n        exact: true,\n        component: Preferences,\n    },\n    name: 'Preferences',\n}","import Profile from '../../../components/Profile'\n\nexport default {\n    routeProps: {\n        path: '/ccs/setting/profile',\n        exact: true,\n        component: Profile,\n    },\n    name: 'Profile',\n}","import ChangePassword from '../../../components/ChangePassword'\n\nexport default {\n    routeProps: {\n        path: '/ccs/setting/changepwd',\n        exact: true,\n        component: ChangePassword,\n    },\n    name: 'ChangePassword',\n}","import Detail from './Detail.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/detail',\n        exact: false,\n        component: Detail,\n    },\n    name: 'Detail',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\n\nimport {\n    Avatar,\n    Grid, Cell,\n    Button, Toolbar, MenuButton, FontIcon, IconSeparator,\n   \n} from 'react-md'\nimport { FormForward, FormSplit, FormReply } from './exports'\n\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <MenuButton\n\n                icon\n                className={this.props.className}\n                menuItems={this.props.menuItems}\n            >\n                more_vert\n            </MenuButton>\n        )\n    }\n}\n\n\n\n\nKebabMenu.propTypes = {\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    menuItems: PropTypes.array,\n    setAction: PropTypes.func\n};\n\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            parent_ticket_id: '',\n            data: [],\n            data_parent: [],\n            role: '',\n            attachment: [],\n            answers: [],\n            attachment_parent: [],\n            formAction: '',\n        }\n    }\n\n    async componentDidMount() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        this.setState({ _id: parsed.ticket_id })\n        try {\n            await axios.get(`/api/ccs-ticket/${parsed.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, parent_ticket_id: response.data.data[0].parent_ticket_id })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state._id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ attachment: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        //IF OPENED BY CUSTOMER\n        if (this.props.role.includes('Customer')) {\n            console.log('customer')\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-customer-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        //IF TICKET IS A SPLITED TICKET\n        if (this.state.parent_ticket_id !== '') {\n            try {\n                await axios.get(`/api/ccs-ticket/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data_parent: response.data.data })\n\n                        }\n\n                    })\n                await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ attachment_parent: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    closeDetail = () => {\n        this.props.closeDetail()\n    }\n\n    setAction = (act) => {\n        this.setState({ formAction: act })\n    }\n\n    render() {\n        var menuItems = []\n        if (this.props.role.includes('Supervisor CCS')) {\n            menuItems = [\n                {\n                    primaryText: 'Split',\n                    onClick: (() => {\n                        this.setAction('split')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Distribute',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                },\n                {\n                    primaryText: 'Send as Incoming Letter',\n                    onClick: (() => {\n                        alert('Send as Incoming Letter')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Forward',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Specialist')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Send Back to',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        }\n\n        return (\n            <div style={{ paddingBottom: '15vh' }} >\n                <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>{\"Detail #\" + this.state._id}</b>}\n                            nav={<Link to='/ccs/task/'><Button icon >arrow_back</Button></Link>}\n                            actions={<KebabMenu menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />}\n                        />\n\n\n\n                        <section className=\"box container md-cell md-cell--12\">\n                            {\n                                this.state.data.map((item, i) => (\n                                    <div key={i}>\n                                        <h4 className=\"subtitle is-3\"><strong>{item.title}</strong></h4>\n\n                                        <IconSeparator label={item.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                            <Avatar src={'/avatar/user.png'} />\n                                        </IconSeparator>\n\n                                        <p><i>{dateformat(item.created_at, 'dd mmm hh:MM')}</i></p>\n                                        <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                        <br />\n                                        {this.state.data_parent.length > 0 ? (\n                                            <Fragment>\n                                                <p>Origin Ticket : </p>\n                                                <article className=\"message is-light ticket-detail is-small\">\n                                                    <div className=\"message-body\">\n                                                        {\n                                                            this.state.data_parent.map((item_parent, i_parent) => (\n                                                                <div key={i_parent}>\n                                                                    <h4 className=\"subtitle is-4\"><strong>{item_parent.title}</strong></h4>\n\n                                                                    <IconSeparator label={item_parent.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                                        <Avatar src={'/avatar/user.png'} />\n                                                                    </IconSeparator>\n\n                                                                    <p><i>{dateformat(item_parent.created_at, 'dd mmm hh:MM')}</i></p>\n                                                                    <div dangerouslySetInnerHTML={{ __html: item_parent.description }} />\n                                                                    <article>\n                                                                        <div className=\"message\">\n\n                                                                        </div>\n                                                                    </article>\n                                                                </div>\n                                                            ))\n                                                        }\n                                                        <section className=\"container md-cell md-cell--12\">\n\n                                                            {(() => {\n                                                                if (this.state.attachment_parent.length > 0) {\n                                                                    return (<h4>Attachments :</h4>)\n                                                                }\n                                                            })()\n                                                            }\n                                                            {this.state.attachment_parent.map((item_attachment_parent, i_attachment_parent) => (\n                                                                <iframe title={item_attachment_parent.file_url} key={i_attachment_parent} src={item_attachment_parent.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                                                            ))\n                                                            }\n\n                                                        </section>\n                                                    </div>\n                                                </article>\n                                            </Fragment>\n\n                                        ) : ''}\n                                    </div>\n                                ))\n                            }\n\n\n                            <br />\n\n\n\n                            {(() => {\n                                if (this.state.attachment.length > 0) {\n                                    return (<h4>Attachments :</h4>)\n                                }\n                            })()\n                            }\n                            {this.state.attachment.map((item, i) => (\n                                <iframe title={item.file_url} src={item.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                            ))\n                            }\n\n                        </section>\n                    </Cell>\n                </Grid>\n\n                <br />\n                <Grid>\n                    <Cell size={12}>\n                        {this.state.answers.length > 0 ? (\n                            <Fragment>\n                                <h4 className=\"md-cell md-cell--12\">Answers:</h4>\n\n                                {this.state.answers.map((item_answer, i_answer) => (\n                                    <div>\n                                        &nbsp; <section className=\"box container md-cell md-cell--12\" key={i_answer}>\n                                            <div>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'pink' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'orange' }} className=\"fa fa-warning\"></i> REJECTED</h5>\n\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'lightgreen' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'green' }} className=\"fa fa-check\"></i> ACCEPTED</h5>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                    </div>\n                                ))}\n                            </Fragment>\n\n                        ) : ''}\n                        <br />\n                        <hr />\n\n                        {this.props.role.includes('Supervisor CCS') ? (\n                            <div>\n                                <button className=\"button  \" onClick={() => this.setState({ formAction: 'split' })}>\n                                    <FontIcon>create</FontIcon>&nbsp;Split\n                        </button> &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                        </button> &nbsp;\n                                <button className=\"button \" onClick={() => alert('Send as Incoming Letter')}>\n                                    <FontIcon>mail</FontIcon>&nbsp;Send as Incoming Letter\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Forward\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Customer') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'rating' })}>\n                                    <FontIcon>star</FontIcon>&nbsp;Make Rating\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Specialist') ? (\n                            <div style={{ marginBottom: '15vh', alignItems: 'center' }}>\n\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n\n                                <MenuButton\n                                    id=\"menu-button-2\"\n                                    anchor={{\n                                        x: MenuButton.HorizontalAnchors.INNER_LEFT,\n                                        y: MenuButton.VerticalAnchors.TOP_LEFT,\n                                    }}\n                                    position={MenuButton.Positions.TOP_LEFT}\n                                    flat\n                                    primary\n                                    menuItems={[{\n                                        primaryText: 'to Support 1',\n                                    }, {\n                                        primaryText: 'to Support 2',\n                                    }]}\n                                >\n                                    <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                        <FontIcon>forward</FontIcon>&nbsp;Send Back to\n                            </button>\n                                </MenuButton>\n                            </div>\n                        ) : ''}\n\n\n\n                        <hr />\n                        {(() => {\n                            switch (this.state.formAction) {\n                                case 'split': return (<FormSplit role={this.props.role} ticket_id={this.state._id} />)\n                                case 'forward': return (<FormForward role={this.props.role} ticket_id={this.state._id} />)\n                                case 'reply': return (<FormReply role={this.props.role} ticket_id={this.state._id} />)\n                                default: return ''\n                            }\n                        })()}\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import DetailApproval from './DetailApproval.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/detail-approval',\n        exact: false,\n        component: DetailApproval,\n    },\n    name: 'DetailApproval',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\n\nimport {\n    Avatar,\n    Grid, Cell,\n    Button, Toolbar, MenuButton, FontIcon, IconSeparator,\n\n} from 'react-md'\nimport { FormForward, FormSplit, FormReply } from './exports'\n\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <MenuButton\n\n                icon\n                className={this.props.className}\n                menuItems={this.props.menuItems}\n            >\n                more_vert\n            </MenuButton>\n        )\n    }\n}\n\n\n\n\nKebabMenu.propTypes = {\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    menuItems: PropTypes.array,\n    setAction: PropTypes.func\n};\n\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            parent_ticket_id: '',\n            data: [],\n            data_parent: [],\n            role: '',\n            attachment: [],\n            answers: [],\n            attachment_parent: [],\n            formAction: '',\n        }\n    }\n\n    async componentDidMount() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        this.setState({ _id: parsed.ticket_id })\n        try {\n            await axios.get(`/api/ccs-ticket/${parsed.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, parent_ticket_id: response.data.data[0].parent_ticket_id })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state._id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ attachment: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        //IF OPENED BY CUSTOMER\n        if (this.props.role.includes('Customer')) {\n            console.log('customer')\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-customer-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        //IF TICKET IS A SPLITED TICKET\n        if (this.state.parent_ticket_id !== '') {\n            try {\n                await axios.get(`/api/ccs-ticket/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data_parent: response.data.data })\n\n                        }\n\n                    })\n                await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ attachment_parent: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    closeDetail = () => {\n        this.props.closeDetail()\n    }\n\n    setAction = (act) => {\n        this.setState({ formAction: act })\n    }\n\n    render() {\n        var menuItems = []\n        if (this.props.role.includes('Supervisor CCS')) {\n            menuItems = [\n                {\n                    primaryText: 'Split',\n                    onClick: (() => {\n                        this.setAction('split')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Distribute',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                },\n                {\n                    primaryText: 'Send as Incoming Letter',\n                    onClick: (() => {\n                        alert('Send as Incoming Letter')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Forward',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Specialist')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Send Back to',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        }\n\n        return (\n            <div style={{ paddingBottom: '15vh' }} >\n                <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>{\"Detail #\" + this.state._id}</b>}\n                            nav={<Link to='/ccs/task/'><Button icon >arrow_back</Button></Link>}\n                            actions={<KebabMenu menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />}\n                        />\n\n\n\n                        <section className=\"box container md-cell md-cell--12\">\n                            {\n                                this.state.data.map((item, i) => (\n                                    <div key={i}>\n                                        <h4 className=\"subtitle is-3\"><strong>{item.title}</strong></h4>\n\n                                        <IconSeparator label={item.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                            <Avatar src={'/avatar/user.png'} />\n                                        </IconSeparator>\n\n                                        <p><i>{dateformat(item.created_at, 'dd mmm hh:MM')}</i></p>\n                                        <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                        <br />\n                                        {this.state.data_parent.length > 0 ? (\n                                            <Fragment>\n                                                <p>Origin Ticket : </p>\n                                                <article className=\"message is-light ticket-detail is-small\">\n                                                    <div className=\"message-body\">\n                                                        {\n                                                            this.state.data_parent.map((item_parent, i_parent) => (\n                                                                <div key={i_parent}>\n                                                                    <h4 className=\"subtitle is-4\"><strong>{item_parent.title}</strong></h4>\n\n                                                                    <IconSeparator label={item_parent.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                                        <Avatar src={'/avatar/user.png'} />\n                                                                    </IconSeparator>\n\n                                                                    <p><i>{dateformat(item_parent.created_at, 'dd mmm hh:MM')}</i></p>\n                                                                    <div dangerouslySetInnerHTML={{ __html: item_parent.description }} />\n                                                                    <article>\n                                                                        <div className=\"message\">\n\n                                                                        </div>\n                                                                    </article>\n                                                                </div>\n                                                            ))\n                                                        }\n                                                        <section className=\"container md-cell md-cell--12\">\n\n                                                            {(() => {\n                                                                if (this.state.attachment_parent.length > 0) {\n                                                                    return (<h4>Attachments :</h4>)\n                                                                }\n                                                            })()\n                                                            }\n                                                            {this.state.attachment_parent.map((item_attachment_parent, i_attachment_parent) => (\n                                                                <iframe title={item_attachment_parent.file_url} key={i_attachment_parent} src={item_attachment_parent.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                                                            ))\n                                                            }\n\n                                                        </section>\n                                                    </div>\n                                                </article>\n                                            </Fragment>\n\n                                        ) : ''}\n                                    </div>\n                                ))\n                            }\n\n\n                            <br />\n\n\n\n                            {(() => {\n                                if (this.state.attachment.length > 0) {\n                                    return (<h4>Attachments :</h4>)\n                                }\n                            })()\n                            }\n                            {this.state.attachment.map((item, i) => (\n                                <iframe title={item.file_url} src={item.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                            ))\n                            }\n\n                        </section>\n                    </Cell>\n                </Grid>\n\n                <br />\n                <Grid>\n                    <Cell size={12}>\n                        {this.state.answers.length > 0 ? (\n                            <Fragment>\n                                <h4 className=\"md-cell md-cell--12\">Answers:</h4>\n\n                                {this.state.answers.map((item_answer, i_answer) => (\n                                    <div>\n                                        &nbsp; <section className=\"box container md-cell md-cell--12\" key={i_answer}>\n                                            <div>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'pink' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'orange' }} className=\"fa fa-warning\"></i> REJECTED</h5>\n\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'lightgreen' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'green' }} className=\"fa fa-check\"></i> ACCEPTED</h5>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                    </div>\n                                ))}\n                            </Fragment>\n\n                        ) : ''}\n                        <br />\n                        <hr />\n\n                        {this.props.role.includes('Supervisor CCS') ? (\n                            <div>\n                                <button className=\"button  \" onClick={() => this.setState({ formAction: 'split' })}>\n                                    <FontIcon>create</FontIcon>&nbsp;Split\n                        </button> &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                        </button> &nbsp;\n                                <button className=\"button \" onClick={() => alert('Send as Incoming Letter')}>\n                                    <FontIcon>mail</FontIcon>&nbsp;Send as Incoming Letter\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Forward\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Customer') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'rating' })}>\n                                    <FontIcon>star</FontIcon>&nbsp;Make Rating\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Specialist') ? (\n                            <div style={{ marginBottom: '15vh', alignItems: 'center' }}>\n\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n\n                                <MenuButton\n                                    id=\"menu-button-2\"\n                                    anchor={{\n                                        x: MenuButton.HorizontalAnchors.INNER_LEFT,\n                                        y: MenuButton.VerticalAnchors.TOP_LEFT,\n                                    }}\n                                    position={MenuButton.Positions.TOP_LEFT}\n                                    flat\n                                    primary\n                                    menuItems={[{\n                                        primaryText: 'to Support 1',\n                                    }, {\n                                        primaryText: 'to Support 2',\n                                    }]}\n                                >\n                                    <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                        <FontIcon>forward</FontIcon>&nbsp;Send Back to\n                            </button>\n                                </MenuButton>\n                            </div>\n                        ) : ''}\n\n\n\n                        <hr />\n                        {(() => {\n                            switch (this.state.formAction) {\n                                case 'split': return (<FormSplit role={this.props.role} ticket_id={this.state._id} />)\n                                case 'forward': return (<FormForward role={this.props.role} ticket_id={this.state._id} />)\n                                case 'reply': return (<FormReply role={this.props.role} ticket_id={this.state._id} />)\n                                default: return ''\n                            }\n                        })()}\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import DetailCompleted from './DetailCompleted.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/detail-completed',\n        exact: false,\n        component: DetailCompleted,\n    },\n    name: 'DetailCompleted',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\n\nimport {\n    Avatar,\n    Grid, Cell,\n    Button, Toolbar, MenuButton, FontIcon, IconSeparator,\n\n} from 'react-md'\nimport { FormForward, FormSplit, FormReply } from './exports'\n\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <MenuButton\n\n                icon\n                className={this.props.className}\n                menuItems={this.props.menuItems}\n            >\n                more_vert\n            </MenuButton>\n        )\n    }\n}\n\n\n\n\nKebabMenu.propTypes = {\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    menuItems: PropTypes.array,\n    setAction: PropTypes.func\n};\n\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            parent_ticket_id: '',\n            data: [],\n            data_parent: [],\n            role: '',\n            attachment: [],\n            answers: [],\n            attachment_parent: [],\n            formAction: '',\n        }\n    }\n\n    async componentDidMount() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        this.setState({ _id: parsed.ticket_id })\n        try {\n            await axios.get(`/api/ccs-ticket/${parsed.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, parent_ticket_id: response.data.data[0].parent_ticket_id })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state._id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ attachment: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        //IF OPENED BY CUSTOMER\n        if (this.props.role.includes('Customer')) {\n            console.log('customer')\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-customer-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        //IF TICKET IS A SPLITED TICKET\n        if (this.state.parent_ticket_id !== '') {\n            try {\n                await axios.get(`/api/ccs-ticket/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data_parent: response.data.data })\n\n                        }\n\n                    })\n                await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ attachment_parent: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    closeDetail = () => {\n        this.props.closeDetail()\n    }\n\n    setAction = (act) => {\n        this.setState({ formAction: act })\n    }\n\n    render() {\n        var menuItems = []\n        if (this.props.role.includes('Supervisor CCS')) {\n            menuItems = [\n                {\n                    primaryText: 'Split',\n                    onClick: (() => {\n                        this.setAction('split')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Distribute',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                },\n                {\n                    primaryText: 'Send as Incoming Letter',\n                    onClick: (() => {\n                        alert('Send as Incoming Letter')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Forward',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Specialist')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Send Back to',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        }\n\n        return (\n            <div style={{ paddingBottom: '15vh' }} >\n                <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>{\"Detail #\" + this.state._id}</b>}\n                            nav={<Link to='/ccs/task/'><Button icon >arrow_back</Button></Link>}\n                            actions={<KebabMenu menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />}\n                        />\n\n\n\n                        <section className=\"box container md-cell md-cell--12\">\n                            {\n                                this.state.data.map((item, i) => (\n                                    <div key={i}>\n                                        <h4 className=\"subtitle is-3\"><strong>{item.title}</strong></h4>\n\n                                        <IconSeparator label={item.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                            <Avatar src={'/avatar/user.png'} />\n                                        </IconSeparator>\n\n                                        <p><i>{dateformat(item.created_at, 'dd mmm hh:MM')}</i></p>\n                                        <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                        <br />\n                                        {this.state.data_parent.length > 0 ? (\n                                            <Fragment>\n                                                <p>Origin Ticket : </p>\n                                                <article className=\"message is-light ticket-detail is-small\">\n                                                    <div className=\"message-body\">\n                                                        {\n                                                            this.state.data_parent.map((item_parent, i_parent) => (\n                                                                <div key={i_parent}>\n                                                                    <h4 className=\"subtitle is-4\"><strong>{item_parent.title}</strong></h4>\n\n                                                                    <IconSeparator label={item_parent.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                                        <Avatar src={'/avatar/user.png'} />\n                                                                    </IconSeparator>\n\n                                                                    <p><i>{dateformat(item_parent.created_at, 'dd mmm hh:MM')}</i></p>\n                                                                    <div dangerouslySetInnerHTML={{ __html: item_parent.description }} />\n                                                                    <article>\n                                                                        <div className=\"message\">\n\n                                                                        </div>\n                                                                    </article>\n                                                                </div>\n                                                            ))\n                                                        }\n                                                        <section className=\"container md-cell md-cell--12\">\n\n                                                            {(() => {\n                                                                if (this.state.attachment_parent.length > 0) {\n                                                                    return (<h4>Attachments :</h4>)\n                                                                }\n                                                            })()\n                                                            }\n                                                            {this.state.attachment_parent.map((item_attachment_parent, i_attachment_parent) => (\n                                                                <iframe title={item_attachment_parent.file_url} key={i_attachment_parent} src={item_attachment_parent.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                                                            ))\n                                                            }\n\n                                                        </section>\n                                                    </div>\n                                                </article>\n                                            </Fragment>\n\n                                        ) : ''}\n                                    </div>\n                                ))\n                            }\n\n\n                            <br />\n\n\n\n                            {(() => {\n                                if (this.state.attachment.length > 0) {\n                                    return (<h4>Attachments :</h4>)\n                                }\n                            })()\n                            }\n                            {this.state.attachment.map((item, i) => (\n                                <iframe title={item.file_url} src={item.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                            ))\n                            }\n\n                        </section>\n                    </Cell>\n                </Grid>\n\n                <br />\n                <Grid>\n                    <Cell size={12}>\n                        {this.state.answers.length > 0 ? (\n                            <Fragment>\n                                <h4 className=\"md-cell md-cell--12\">Answers:</h4>\n\n                                {this.state.answers.map((item_answer, i_answer) => (\n                                    <div>\n                                        &nbsp; <section className=\"box container md-cell md-cell--12\" key={i_answer}>\n                                            <div>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'pink' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'orange' }} className=\"fa fa-warning\"></i> REJECTED</h5>\n\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'lightgreen' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'green' }} className=\"fa fa-check\"></i> ACCEPTED</h5>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                    </div>\n                                ))}\n                            </Fragment>\n\n                        ) : ''}\n                        <br />\n                        <hr />\n\n                        {this.props.role.includes('Supervisor CCS') ? (\n                            <div>\n                                <button className=\"button  \" onClick={() => this.setState({ formAction: 'split' })}>\n                                    <FontIcon>create</FontIcon>&nbsp;Split\n                        </button> &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                        </button> &nbsp;\n                                <button className=\"button \" onClick={() => alert('Send as Incoming Letter')}>\n                                    <FontIcon>mail</FontIcon>&nbsp;Send as Incoming Letter\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Forward\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Customer') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'rating' })}>\n                                    <FontIcon>star</FontIcon>&nbsp;Make Rating\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Specialist') ? (\n                            <div style={{ marginBottom: '15vh', alignItems: 'center' }}>\n\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n\n                                <MenuButton\n                                    id=\"menu-button-2\"\n                                    anchor={{\n                                        x: MenuButton.HorizontalAnchors.INNER_LEFT,\n                                        y: MenuButton.VerticalAnchors.TOP_LEFT,\n                                    }}\n                                    position={MenuButton.Positions.TOP_LEFT}\n                                    flat\n                                    primary\n                                    menuItems={[{\n                                        primaryText: 'to Support 1',\n                                    }, {\n                                        primaryText: 'to Support 2',\n                                    }]}\n                                >\n                                    <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                        <FontIcon>forward</FontIcon>&nbsp;Send Back to\n                            </button>\n                                </MenuButton>\n                            </div>\n                        ) : ''}\n\n\n\n                        <hr />\n                        {(() => {\n                            switch (this.state.formAction) {\n                                case 'split': return (<FormSplit role={this.props.role} ticket_id={this.state._id} />)\n                                case 'forward': return (<FormForward role={this.props.role} ticket_id={this.state._id} />)\n                                case 'reply': return (<FormReply role={this.props.role} ticket_id={this.state._id} />)\n                                default: return ''\n                            }\n                        })()}\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import DetailFinished from './DetailFinished.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/detail-finished',\n        exact: false,\n        component: DetailFinished,\n    },\n    name: 'DetailFinished',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\n\nimport {\n    Avatar,\n    Grid, Cell,\n    Button, Toolbar, MenuButton, FontIcon, IconSeparator,\n\n} from 'react-md'\nimport { FormForward, FormSplit, FormReply } from './exports'\n\n\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <MenuButton\n\n                icon\n                className={this.props.className}\n                menuItems={this.props.menuItems}\n            >\n                more_vert\n            </MenuButton>\n        )\n    }\n}\n\n\n\n\nKebabMenu.propTypes = {\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    menuItems: PropTypes.array,\n    setAction: PropTypes.func\n};\n\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            parent_ticket_id: '',\n            data: [],\n            data_parent: [],\n            role: '',\n            attachment: [],\n            answers: [],\n            attachment_parent: [],\n            formAction: '',\n        }\n    }\n\n    async componentDidMount() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        this.setState({ _id: parsed.ticket_id })\n        try {\n            await axios.get(`/api/ccs-ticket/${parsed.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, parent_ticket_id: response.data.data[0].parent_ticket_id })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state._id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ attachment: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        //IF OPENED BY CUSTOMER\n        if (this.props.role.includes('Customer')) {\n            console.log('customer')\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-customer-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        //IF TICKET IS A SPLITED TICKET\n        if (this.state.parent_ticket_id !== '') {\n            try {\n                await axios.get(`/api/ccs-ticket/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data_parent: response.data.data })\n\n                        }\n\n                    })\n                await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ attachment_parent: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    closeDetail = () => {\n        this.props.closeDetail()\n    }\n\n    setAction = (act) => {\n        this.setState({ formAction: act })\n    }\n\n    render() {\n        var menuItems = []\n        if (this.props.role.includes('Supervisor CCS')) {\n            menuItems = [\n                {\n                    primaryText: 'Split',\n                    onClick: (() => {\n                        this.setAction('split')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Distribute',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                },\n                {\n                    primaryText: 'Send as Incoming Letter',\n                    onClick: (() => {\n                        alert('Send as Incoming Letter')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Forward',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Specialist')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Send Back to',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        }\n\n        return (\n            <div style={{ paddingBottom: '15vh' }} >\n                <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>{\"Detail #\" + this.state._id}</b>}\n                            nav={<Link to='/ccs/task/'><Button icon >arrow_back</Button></Link>}\n                            actions={<KebabMenu menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />}\n                        />\n\n\n\n                        <section className=\"box container md-cell md-cell--12\">\n                            {\n                                this.state.data.map((item, i) => (\n                                    <div key={i}>\n                                        <h4 className=\"subtitle is-3\"><strong>{item.title}</strong></h4>\n\n                                        <IconSeparator label={item.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                            <Avatar src={'/avatar/user.png'} />\n                                        </IconSeparator>\n\n                                        <p><i>{dateformat(item.created_at, 'dd mmm hh:MM')}</i></p>\n                                        <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                        <br />\n                                        {this.state.data_parent.length > 0 ? (\n                                            <Fragment>\n                                                <p>Origin Ticket : </p>\n                                                <article className=\"message is-light ticket-detail is-small\">\n                                                    <div className=\"message-body\">\n                                                        {\n                                                            this.state.data_parent.map((item_parent, i_parent) => (\n                                                                <div key={i_parent}>\n                                                                    <h4 className=\"subtitle is-4\"><strong>{item_parent.title}</strong></h4>\n\n                                                                    <IconSeparator label={item_parent.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                                        <Avatar src={'/avatar/user.png'} />\n                                                                    </IconSeparator>\n\n                                                                    <p><i>{dateformat(item_parent.created_at, 'dd mmm hh:MM')}</i></p>\n                                                                    <div dangerouslySetInnerHTML={{ __html: item_parent.description }} />\n                                                                    <article>\n                                                                        <div className=\"message\">\n\n                                                                        </div>\n                                                                    </article>\n                                                                </div>\n                                                            ))\n                                                        }\n                                                        <section className=\"container md-cell md-cell--12\">\n\n                                                            {(() => {\n                                                                if (this.state.attachment_parent.length > 0) {\n                                                                    return (<h4>Attachments :</h4>)\n                                                                }\n                                                            })()\n                                                            }\n                                                            {this.state.attachment_parent.map((item_attachment_parent, i_attachment_parent) => (\n                                                                <iframe title={item_attachment_parent.file_url} key={i_attachment_parent} src={item_attachment_parent.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                                                            ))\n                                                            }\n\n                                                        </section>\n                                                    </div>\n                                                </article>\n                                            </Fragment>\n\n                                        ) : ''}\n                                    </div>\n                                ))\n                            }\n\n\n                            <br />\n\n\n\n                            {(() => {\n                                if (this.state.attachment.length > 0) {\n                                    return (<h4>Attachments :</h4>)\n                                }\n                            })()\n                            }\n                            {this.state.attachment.map((item, i) => (\n                                <iframe title={item.file_url} src={item.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                            ))\n                            }\n\n                        </section>\n                    </Cell>\n                </Grid>\n\n                <br />\n                <Grid>\n                    <Cell size={12}>\n                        {this.state.answers.length > 0 ? (\n                            <Fragment>\n                                <h4 className=\"md-cell md-cell--12\">Answers:</h4>\n\n                                {this.state.answers.map((item_answer, i_answer) => (\n                                    <div>\n                                        &nbsp; <section className=\"box container md-cell md-cell--12\" key={i_answer}>\n                                            <div>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'pink' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'orange' }} className=\"fa fa-warning\"></i> REJECTED</h5>\n\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'lightgreen' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'green' }} className=\"fa fa-check\"></i> ACCEPTED</h5>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                    </div>\n                                ))}\n                            </Fragment>\n\n                        ) : ''}\n                        <br />\n                        <hr />\n\n                        {this.props.role.includes('Supervisor CCS') ? (\n                            <div>\n                                <button className=\"button  \" onClick={() => this.setState({ formAction: 'split' })}>\n                                    <FontIcon>create</FontIcon>&nbsp;Split\n                        </button> &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                        </button> &nbsp;\n                                <button className=\"button \" onClick={() => alert('Send as Incoming Letter')}>\n                                    <FontIcon>mail</FontIcon>&nbsp;Send as Incoming Letter\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Forward\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Customer') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'rating' })}>\n                                    <FontIcon>star</FontIcon>&nbsp;Make Rating\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Specialist') ? (\n                            <div style={{ marginBottom: '15vh', alignItems: 'center' }}>\n\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n\n                                <MenuButton\n                                    id=\"menu-button-2\"\n                                    anchor={{\n                                        x: MenuButton.HorizontalAnchors.INNER_LEFT,\n                                        y: MenuButton.VerticalAnchors.TOP_LEFT,\n                                    }}\n                                    position={MenuButton.Positions.TOP_LEFT}\n                                    flat\n                                    primary\n                                    menuItems={[{\n                                        primaryText: 'to Support 1',\n                                    }, {\n                                        primaryText: 'to Support 2',\n                                    }]}\n                                >\n                                    <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                        <FontIcon>forward</FontIcon>&nbsp;Send Back to\n                            </button>\n                                </MenuButton>\n                            </div>\n                        ) : ''}\n\n\n\n                        <hr />\n                        {(() => {\n                            switch (this.state.formAction) {\n                                case 'split': return (<FormSplit role={this.props.role} ticket_id={this.state._id} />)\n                                case 'forward': return (<FormForward role={this.props.role} ticket_id={this.state._id} />)\n                                case 'reply': return (<FormReply role={this.props.role} ticket_id={this.state._id} />)\n                                default: return ''\n                            }\n                        })()}\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import DetailHandle from './DetailHandle.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/detail-handle',\n        exact: false,\n        component: DetailHandle,\n    },\n    name: 'DetailHandle',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\n\nimport {\n    Avatar,\n    Grid, Cell,\n    Button, Toolbar, MenuButton, FontIcon, IconSeparator,\n \n} from 'react-md'\nimport { FormForward, FormSplit, FormReply } from './exports'\n\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <MenuButton\n\n                icon\n                className={this.props.className}\n                menuItems={this.props.menuItems}\n            >\n                more_vert\n            </MenuButton>\n        )\n    }\n}\n\n\n\n\nKebabMenu.propTypes = {\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    menuItems: PropTypes.array,\n    setAction: PropTypes.func\n};\n\n\nexport default class Detail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            parent_ticket_id: '',\n            data: [],\n            data_parent: [],\n            role: '',\n            attachment: [],\n            answers: [],\n            attachment_parent: [],\n            formAction: '',\n        }\n    }\n\n    async componentDidMount() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        this.setState({ _id: parsed.ticket_id })\n        try {\n            await axios.get(`/api/ccs-ticket/${parsed.ticket_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, parent_ticket_id: response.data.data[0].parent_ticket_id })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state._id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ attachment: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        //IF OPENED BY CUSTOMER\n        if (this.props.role.includes('Customer')) {\n            console.log('customer')\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-customer-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-ticket-reply-by-ticket-id/${this.state._id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ answers: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        //IF TICKET IS A SPLITED TICKET\n        if (this.state.parent_ticket_id !== '') {\n            try {\n                await axios.get(`/api/ccs-ticket/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data_parent: response.data.data })\n\n                        }\n\n                    })\n                await axios.get(`/api/ccs-ticket-file-by-ticket-id/${this.state.parent_ticket_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ attachment_parent: response.data.data })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n    }\n\n    closeDetail = () => {\n        this.props.closeDetail()\n    }\n\n    setAction = (act) => {\n        this.setState({ formAction: act })\n    }\n\n    render() {\n        var menuItems = []\n        if (this.props.role.includes('Supervisor CCS')) {\n            menuItems = [\n                {\n                    primaryText: 'Split',\n                    onClick: (() => {\n                        this.setAction('split')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Distribute',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                },\n                {\n                    primaryText: 'Send as Incoming Letter',\n                    onClick: (() => {\n                        alert('Send as Incoming Letter')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Help Desk') || this.props.role.includes('Implementator')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Forward',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        } else if (this.props.role.includes('Specialist')) {\n            menuItems = [\n                {\n                    primaryText: 'Reply',\n                    onClick: (() => {\n                        this.setAction('reply')\n                    })\n                }\n                ,\n                {\n                    primaryText: 'Send Back to',\n                    onClick: (() => {\n                        this.setAction('forward')\n                    })\n                }\n            ]\n        }\n\n        return (\n            <div style={{ paddingBottom: '15vh' }} >\n                <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>{\"Detail #\" + this.state._id}</b>}\n                            nav={<Link to='/ccs/task/'><Button icon >arrow_back</Button></Link>}\n                            actions={<KebabMenu menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />}\n                        />\n\n\n\n                        <section className=\"box container md-cell md-cell--12\">\n                            {\n                                this.state.data.map((item, i) => (\n                                    <div key={i}>\n                                        <h4 className=\"subtitle is-3\"><strong>{item.title}</strong></h4>\n\n                                        <IconSeparator label={item.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                            <Avatar src={'/avatar/user.png'} />\n                                        </IconSeparator>\n\n                                        <p><i>{dateformat(item.created_at, 'dd mmm hh:MM')}</i></p>\n                                        <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                        <br />\n                                        {this.state.data_parent.length > 0 ? (\n                                            <Fragment>\n                                                <p>Origin Ticket : </p>\n                                                <article className=\"message is-light ticket-detail is-small\">\n                                                    <div className=\"message-body\">\n                                                        {\n                                                            this.state.data_parent.map((item_parent, i_parent) => (\n                                                                <div key={i_parent}>\n                                                                    <h4 className=\"subtitle is-4\"><strong>{item_parent.title}</strong></h4>\n\n                                                                    <IconSeparator label={item_parent.client_name} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                                        <Avatar src={'/avatar/user.png'} />\n                                                                    </IconSeparator>\n\n                                                                    <p><i>{dateformat(item_parent.created_at, 'dd mmm hh:MM')}</i></p>\n                                                                    <div dangerouslySetInnerHTML={{ __html: item_parent.description }} />\n                                                                    <article>\n                                                                        <div className=\"message\">\n\n                                                                        </div>\n                                                                    </article>\n                                                                </div>\n                                                            ))\n                                                        }\n                                                        <section className=\"container md-cell md-cell--12\">\n\n                                                            {(() => {\n                                                                if (this.state.attachment_parent.length > 0) {\n                                                                    return (<h4>Attachments :</h4>)\n                                                                }\n                                                            })()\n                                                            }\n                                                            {this.state.attachment_parent.map((item_attachment_parent, i_attachment_parent) => (\n                                                                <iframe title={item_attachment_parent.file_url} key={i_attachment_parent} src={item_attachment_parent.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                                                            ))\n                                                            }\n\n                                                        </section>\n                                                    </div>\n                                                </article>\n                                            </Fragment>\n\n                                        ) : ''}\n                                    </div>\n                                ))\n                            }\n\n\n                            <br />\n\n\n\n                            {(() => {\n                                if (this.state.attachment.length > 0) {\n                                    return (<h4>Attachments :</h4>)\n                                }\n                            })()\n                            }\n                            {this.state.attachment.map((item, i) => (\n                                <iframe title={item.file_url} src={item.file_url} style={{ width: '20%', height: '25vh' }} />\n\n                            ))\n                            }\n\n                        </section>\n                    </Cell>\n                </Grid>\n\n                <br />\n                <Grid>\n                    <Cell size={12}>\n                        {this.state.answers.length > 0 ? (\n                            <Fragment>\n                                <h4 className=\"md-cell md-cell--12\">Answers:</h4>\n\n                                {this.state.answers.map((item_answer, i_answer) => (\n                                    <div>\n                                        &nbsp; <section className=\"box container md-cell md-cell--12\" key={i_answer}>\n                                            <div>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'pink' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'orange' }} className=\"fa fa-warning\"></i> REJECTED</h5>\n\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                        <section className=\"box container md-cell md-cell--12\" key={i_answer} style={{ backgroundColor: 'lightgreen' }}>\n                                            <div>\n                                                <h5><i style={{ color: 'green' }} className=\"fa fa-check\"></i> ACCEPTED</h5>\n                                                <IconSeparator label={(<h5>{item_answer.full_name}  </h5>)} iconBefore component=\"li\" className=\"md-cell md-cell--12\">\n                                                    <Avatar src={item_answer.avatar_url !== '' ? item_answer.avatar_url : '/avatar/user.png'} />\n                                                </IconSeparator>\n                                                <p>{dateformat(item_answer.created_at, 'dd mmm hh:MM')}</p>\n\n                                                <div dangerouslySetInnerHTML={{ __html: item_answer.replies }} />\n\n                                            </div>\n                                        </section>\n                                    </div>\n                                ))}\n                            </Fragment>\n\n                        ) : ''}\n                        <br />\n                        <hr />\n\n                        {this.props.role.includes('Supervisor CCS') ? (\n                            <div>\n                                <button className=\"button  \" onClick={() => this.setState({ formAction: 'split' })}>\n                                    <FontIcon>create</FontIcon>&nbsp;Split\n                        </button> &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Distribute\n                        </button> &nbsp;\n                                <button className=\"button \" onClick={() => alert('Send as Incoming Letter')}>\n                                    <FontIcon>mail</FontIcon>&nbsp;Send as Incoming Letter\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Help Desk') || this.props.role.includes('Implementator') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                    <FontIcon>screen_share</FontIcon>&nbsp;Forward\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Customer') ? (\n                            <div>\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'rating' })}>\n                                    <FontIcon>star</FontIcon>&nbsp;Make Rating\n                        </button>\n                            </div>\n                        ) : ''}\n\n                        {this.props.role.includes('Specialist') ? (\n                            <div style={{ marginBottom: '15vh', alignItems: 'center' }}>\n\n                                <button className=\"button   \" onClick={() => this.setState({ formAction: 'reply' })}>\n                                    <FontIcon>reply</FontIcon>&nbsp;Reply\n                        </button>\n                        &nbsp;\n\n                                <MenuButton\n                                    id=\"menu-button-2\"\n                                    anchor={{\n                                        x: MenuButton.HorizontalAnchors.INNER_LEFT,\n                                        y: MenuButton.VerticalAnchors.TOP_LEFT,\n                                    }}\n                                    position={MenuButton.Positions.TOP_LEFT}\n                                    flat\n                                    primary\n                                    menuItems={[{\n                                        primaryText: 'to Support 1',\n                                    }, {\n                                        primaryText: 'to Support 2',\n                                    }]}\n                                >\n                                    <button className=\"button   \" onClick={() => this.setState({ formAction: 'forward' })}>\n                                        <FontIcon>forward</FontIcon>&nbsp;Send Back to\n                            </button>\n                                </MenuButton>\n                            </div>\n                        ) : ''}\n\n\n\n                        <hr />\n                        {(() => {\n                            switch (this.state.formAction) {\n                                case 'split': return (<FormSplit role={this.props.role} ticket_id={this.state._id} />)\n                                case 'forward': return (<FormForward role={this.props.role} ticket_id={this.state._id} />)\n                                case 'reply': return (<FormReply role={this.props.role} ticket_id={this.state._id} />)\n                                default: return ''\n                            }\n                        })()}\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import DetailRejected from './DetailRejected.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/detail-rejected',\n        exact: false,\n        component: DetailRejected,\n    },\n    name: 'DetailRejected',\n}","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/form',\n        exact: true,\n        component: Form,\n    },\n    name: 'FormTicket',\n}","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/ccs/ticket/form/:ticket_id',\n        exact: true,\n        component: Form,\n    },\n    name: 'Form',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\n\nimport {\n    Grid,\n    Card,\n    Cell,\n    TextField,\n    FontIcon,\n} from 'react-md'\n\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\n\nclass LoadChild extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: this.props.parent_ticket_id,\n            data: [],\n        }\n    }\n\n    async componentDidMount() {\n        const parent_ticket_id = this.props.parent_ticket_id\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {this.props.child_ticket !== undefined && this.props.child_ticket.length > 0 ?\n                    this.props.child_ticket.map((item, i) => (\n                        <Fragment>\n\n                            <tr>\n                                <td ></td>\n                                <td style={{ paddingLeft: '2.5vw' }}><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                                <td>\n                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b> </Link> &nbsp;\n                            </td>\n                                <td>\n                                    <p>{item.client_name}</p>\n                                </td>\n                                <td>\n                                    {item.priority_id !== '' ? (\n                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                    ) : ''}\n                                </td>\n\n                                <td>\n                                    {item.full_name_handler !== '' && item.full_name_handler !== null ? (\n                                        <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name_handler}</Link></span>\n                                    ) : ''}\n                                </td>\n                                <td>\n\n                                    <span>\n                                        <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                    </span>\n\n                                </td>\n                                <td>\n                                    <p>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                </td>\n\n                            </tr>\n\n                        </Fragment>\n\n                    )) : ''}\n\n            </Fragment>\n\n        )\n    }\n}\n\nexport default class AllTicket extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            data: [],\n            priorities: [],\n            loadChild: [],\n            categories: [],\n            key: '',\n            status: [],\n            filter_from_date: '',\n            filter_to_date: '',\n            filter_category_id: '',\n            filter_priority_id: '',\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 100,\n            total_data: 0\n        }\n\n\n        this.socket = io(socket_address)\n        this.socket.on('TICKET_ADDED', (data) => {\n\n            this.componentDidMount()\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n\n        })\n\n        this.socket.on('UPDATE_ANSWER', (data) => {\n            console.log(data)\n            if (data.user_id_client === payload.userId) {\n                this.componentDidMount()\n            }\n\n        })\n\n\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n\n        })\n        this.socket.on('APPROVAL', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('TICKET_ADDED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('REJECT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('COMPLETED', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('ACCEPT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('QUEUED', (data) => {\n            // console.log(data)\n\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n\n        var client_id = ''\n        try {\n            await axios.get(`/api/user/${this.props.user_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        client_id = response.data.data[0].client_id\n                        this.setState({ client_id: response.data.data[0].client_id, })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        try {\n            await axios.get(`/api/ccs-ticket-parents-total?client_id=${client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-ticket-parents?client_id=${client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        this.state.data.map(async (item, i) => {\n            if (item.total_child > 0) {\n                try {\n                    await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                        .then(response_child => {\n                            if (response_child.data.status === 200) {\n                                item.loadChild = true\n                                item.child_ticket = response_child.data.data\n                            }\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n        console.log(this.state.data)\n\n    }\n\n    search = async (evt) => {\n        if (evt === '') {\n            try {\n                //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents-total?client_id=${this.state.client_id}&currentPage=0&displayPerPage=0`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents-total?client_id=${this.state.client_id}&currentPage=0&displayPerPage=0&key=${evt}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n                await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}&key=${evt}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.state.data.map(async (item, i) => {\n            if (item.total_child > 0) {\n                try {\n                    await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                        .then(response_child => {\n                            if (response_child.data.status === 200) {\n                                item.loadChild = true\n                                item.child_ticket = response_child.data.data\n                            }\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n        this.setState({\n            key: evt,\n            currentPage: 1,\n            displayPerPage: 100\n        })\n\n\n    }\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({ filter_from_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({ filter_to_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ filter_priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ filter_category_id: evt })\n    }\n\n    doFilter = () => {\n        const body = {\n            priority_id: this.state.filter_priority_id,\n            category_id: this.state.filter_category_id,\n            from_date: this.state.filter_from_date,\n            to_date: this.state.filter_to_date,\n        }\n    }\n    toggleLoadChild = (i) => {\n        const loadChild = this.state.loadChild\n        loadChild[i] = !loadChild[i]\n\n        this.setState({\n            loadChild: loadChild\n        });\n\n        console.log(this.state.loadChild)\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, 500)\n\n\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, 500)\n\n\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, 500)\n\n\n\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, 500)\n\n\n\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, 500)\n\n\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n        try {\n            //&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}\n            await axios.get(`/api/ccs-ticket-parents?client_id=${this.state.client_id}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data })\n\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        this.state.data.map(async (item, i) => {\n            if (item.total_child > 0) {\n                try {\n                    await axios.get(`/api/ccs-ticket-by-parent_id/${item._id}`)\n                        .then(response_child => {\n                            if (response_child.data.status === 200) {\n                                item.loadChild = true\n                                item.child_ticket = response_child.data.data\n                            }\n                        })\n                } catch (error) {\n                    console.log(error)\n                }\n            }\n        })\n\n    }\n\n\n    render() {\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n\n\n        const { data } = this.state\n\n\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Loading ..... </p>\n                </div>\n            )\n        } else\n            return (\n                <div >\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%' }}>\n                                <h4>All Tickets</h4>\n\n                                <Grid ref={this.tableData}  >\n\n                                    <Cell size={6}>\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ...'} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                                    </Cell>\n                                </Grid>\n\n                                <table className=\"table is-fullwidth is-striped\"   >\n                                    <thead>\n                                        <tr>\n                                            <th style={{ width: '3%' }}></th>\n                                            <th style={{ width: '10%' }}>#ID &nbsp; <span onClick={() => this.setSorting('_id')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                            <th style={{ width: '20%' }}>Request Tickets &nbsp; <span onClick={() => this.setSorting('title')}  ><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th style={{ width: '15%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                            <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}  ><i className=\"fa fa-sort\"></i></span> </th>\n                                            <th style={{ width: '15%' }}>Handled by &nbsp; <span onClick={() => this.setSorting('full_name')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                            <th style={{ width: '10%' }}>Status &nbsp; <span onClick={() => this.setSorting('status')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                            <th style={{ width: '15%' }}>Created at &nbsp; <span onClick={() => this.setSorting('created_at')}  ><i className=\"fa fa-sort\"></i></span> </th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {data.map((item, i) => (\n                                            //  (i <= limitTop && i >= limitBottom) ? (\n\n\n                                            <Fragment>\n                                                <tr>\n                                                    <td>\n                                                        {item.total_child > 0 ? (\n                                                            <a onClick={() => this.toggleLoadChild(i)}><FontIcon >{this.state.loadChild[i] ? 'arrow_drop_down' : 'arrow_right'} </FontIcon></a>\n\n                                                        ) : ''}\n\n                                                    </td>\n                                                    <td> <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} ><b>{item._id}</b></Link></td>\n                                                    <td>\n                                                        <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b> </Link> &nbsp;\n                                            </td>\n                                                    <td>\n                                                        <p>{item.client_name}</p>\n                                                    </td>\n                                                    <td>\n                                                        {item.priority_id !== '' ? (\n                                                            <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                        ) : ''}\n                                                    </td>\n                                                    <td>\n                                                        {item.full_name !== '' && item.full_name !== null ? (\n                                                            <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                        ) : ''}\n                                                    </td>\n                                                    <td>\n\n                                                        <span>\n                                                            <b style={{ color: item.label_color_status }}>{item.status}</b>\n                                                        </span>\n\n                                                    </td>\n                                                    <td>\n                                                        <p>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                    </td>\n                                                </tr>\n\n                                                {this.state.loadChild[i] && item.child_ticket !== undefined && item.child_ticket.length > 0 ? (\n                                                    <LoadChild parent_ticket_id={item._id} child_ticket={item.child_ticket} role={this.props.role} />\n                                                ) : ''}\n\n                                            </Fragment>\n\n\n                                            //   ):''    \n                                        ))}\n                                    </tbody>\n                                </table>\n\n                                {pages.length > 0 ? (\n                                    <div className=\"container\">\n                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                        {pages.map((page) => (\n                                            this.isActive(page) ? (\n                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                            ) : (\n                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                )\n\n\n                                        ))}\n                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                    </div>\n\n                                ) : ''}\n                            </Card>\n                        </Cell>\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\n\nimport StarRatings from 'react-star-ratings'\nimport {\n    Card,\n    Grid,\n    Cell,\n    TextField,\n} from 'react-md'\n\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoading: true,\n            data: [],\n            priorities: [],\n            categories: [],\n            status: [],\n            status_id: '',\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            key: '',\n            total_data: 0,\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 100,\n        }\n\n        this.socket = io(socket_address) //SERVER MSO\n\n        this.socket.on('ACCEPT', (data) => {\n            this.componentDidMount()\n\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n\n        })\n\n\n\n    }\n\n    async componentDidMount() {\n\n        var client_id = ''\n        try {\n            await axios.get(`/api/user/${this.props.user_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        client_id = response.data.data[0].client_id\n                        this.setState({ client_id: response.data.data[0].client_id, })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-all-completed-total?client_id=${client_id}&currentPage=${0}&displayPerPage=${0}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-all-completed?client_id=${client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total?client_id=${this.state.client_id}&currentPage=${0}&displayPerPage=${0}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed-total?client_id=${this.state.client_id}&currentPage=${0}&displayPerPage=${0}&key=${evt}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n\n            try {\n                await axios.get(`/api/ccs-tickets-all-completed?client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, isLoading: false })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            key: evt,\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n\n\n    onChangeDateFrom = (evt) => {\n\n        this.setState({ date_from: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, 500)\n\n\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, 500)\n\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, 500)\n\n\n\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, 500)\n\n\n\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, 500)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n        try {\n            await axios.get(`/api/ccs-tickets-all-completed?client_id=${this.state.client_id}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n    }\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n\n\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Loading ..... </p>\n                </div>\n            )\n        } else\n            return (\n                <div >\n\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%' }}>\n                                <h4>Finished Ticket</h4>\n\n                                <Grid>\n                                    <Cell size={6}>\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ...'} onChange={this.search} />\n                                    </Cell>\n                                </Grid>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table   is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}> #ID &nbsp; <span onClick={() => this.setSorting('_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '28%' }} >Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '12%' }}>Handled By &nbsp; <span onClick={() => this.setSorting('full_name')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Finished at &nbsp; <span onClick={() => this.setSorting('resolution_at')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '20%' }}>Rating &nbsp; <span onClick={() => this.setSorting('rating')}><i className=\"fa fa-sort\"></i></span></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            <tr key={i}>\n                                                                <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                                                <td >\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link>\n                                                                </td>\n\n                                                                <td>\n                                                                    {item.priority_id !== '' ? (\n                                                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                    ) : ''}\n                                                                </td>\n                                                                <td>\n                                                                    {item.full_name !== '' && item.full_name !== null ? (\n                                                                        <span className=\"tag\"><Link to={`/ccs/staff?id=${item.handled_by_user_id}`} >{item.full_name}</Link></span>\n                                                                    ) : ''}\n\n                                                                </td>\n\n                                                                <td>\n                                                                    <p>{item.resolution_at !== null ? dateformat(item.resolution_at, 'dd mmm yyyy, HH:MM') : ''}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.rating > 0 ? (\n                                                                        <Fragment>\n\n                                                                            <StarRatings\n                                                                                rating={parseFloat(item.rating.toString())}\n                                                                                starRatedColor=\"#f0c260\"\n                                                                                starDimension={'20px'}\n                                                                                numberOfStars={5}\n                                                                                name='rating'\n                                                                            />\n                                                                        </Fragment>\n                                                                    ) : ''}\n                                                                </td>\n\n                                                            </tr>\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Card>\n                        </Cell>\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n","import React,{Component, Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button} from 'react-md'\nimport axios from 'axios'\nimport AllTicket from './AllTicket'\nimport Completed from './Completed'\n\nexport default class Profile extends Component {\n    state = {\n        profile:[],\n        _id:'',\n        avg_rating:0,\n        client_code:'',\n        client_name:'',\n        tab:'all',\n    }\n\n    componentDidMount= async  () => {\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        try{\n            await axios.get(`/api/user/${parsed.id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({profile:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.getAverageRating(parsed.id)\n    }\n\n    getAverageRating  = async (user_id) => {\n        try {\n            await axios.get(`/api/ccs-ticket-rating-average/${user_id}`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    this.setState({avg_rating:response.data.data[0].average_rating})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    setTab = (tab) => {\n        this.setState({tab:tab})\n    }\n\n\n    render() \n    {\n       \n        var list_contain = this.state.tab\n       \n        var tabList = []\n        \n        tabList = [\n            {color:'lightblue',action:'all',icon:'fa fa-ticket',tooltip:'AllTickets',badge:this.state.total_available},\n            {color:'darkblue',action:'completed',icon:'fa fa-ticket',tooltip:'Finished Tickets',badge:this.state.total_approve},\n            \n        ] \n        \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>Customer Info</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                    \n                    {this.state.profile.map((item,i) => (\n                        <Fragment>\n                           <Grid>\n                               <Cell size={12}>\n                               <div className=\" column is-12 box is-centered\">\n                                   <h4></h4>\n                                   <figure >\n                                       <img className=\"is-rounded\" style={{width:'15vw'}} src={item.avatar_url} alt=\"\"/>\n                                   </figure>\n                                    <h4 style={{textAlign:'center'}}>{item.client_name}</h4>\n                                    <p style={{textAlign:'center'}}>{item.role} </p>\n                                    <p style={{textAlign:'center'}}>{item.client_email}</p>\n                                    <p style={{textAlign:'center'}}>{item.client_address}</p>\n                                    \n                                  \n                               </div>\n                               </Cell>\n                            </Grid>\n                            <Grid>\n                               <Cell size={12} className=\"box\">\n                                <h4>Tickets Info</h4>\n                            \n                                    <div className=\"tabs\" style={{border:'none'}}>\n                                        <ul>\n                                            { tabList.map((item,i) => {\n                                                if (list_contain === item.action) {\n                                                    return(<li onClick={() => this.setTab(item.action)}\n                                                                style={{borderBottom:'solid 3px '+item.color,backgroundColor:'#c7d6eb',padding:'10px 5px 0 0 ',borderTopRightRadius:'8px' ,borderTopLeftRadius:'8px',padding:'10px'}} >\n                                                                {item.tooltip}\n                                                                \n                                                            </li>\n                                                    )\n                                                }else {\n                                                    return(<li  onClick={() => this.setTab(item.action)}\n                                                            style={{borderBottom:'solid 3px '+item.color,padding:'10px 5px 0 0 ',padding:'10px'}} >\n                                                            {item.tooltip} \n                                                            \n                                                        </li>\n                                                        )\n                                                }\n                                            \n                                                })}\n                                        \n                                            \n                                        </ul>\n                                    </div>\n\n\n                                    {(() => {\n                                            switch(list_contain) {\n                                                case 'all' :\n                                                    return (<AllTicket user_id={this.state._id}/>)\n                                                case 'completed' :\n                                                    return (<Completed user_id={this.state._id} />)\n                                                \n                                            }\n                                        })()}\n                                </Cell>\n                            </Grid>\n                        </Fragment>\n                    ))}\n                    \n                </Cell>\n            </Grid>\n        )\n    }\n}","import Customer from './Customer'\n\nexport default {\n    routeProps: {\n        path: '/ccs/customer',\n        exact: true,\n        component: Customer,\n    },\n    name: 'Customer',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport {\n    Grid,\n    Card,\n    Cell,\n    TextField,\n\n} from 'react-md'\n//  import '../../../styles.scss'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\n\n\nexport default class OnProgress extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            role: '',\n            client_id: '',\n            isLoading: true,\n            data: [],\n            priorities: [],\n            categories: [],\n            status: [],\n            filter_from_date: '',\n            filter_to_date: '',\n            filter_category_id: '',\n            filter_priority_id: '',\n            asc: 1,\n            key: '',\n            currentPage: 1,\n            displayPerPage: 100,\n        }\n\n        this.socket = io(socket_address) //SERVER MSO\n\n        this.socket.on('TICKET_FORWARDED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n\n        try {\n            await axios.get(`/api/user/${this.props.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.client_id !== null ) {\n                                this.state.client_id = item.client_id\n                            }\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-handle-total/${this.props.user_id}?currentPage=0&displayPerPage=0&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-my-handle/${this.props.user_id}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        \n        \n        \n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle-total/${this.props.user_id}?currentPage=0&displayPerPage=0&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle/${this.props.user_id}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle-total/${this.props.user_id}?currentPage=0&displayPerPage=0&key=${evt}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-handle/${this.props.user_id}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({ filter_from_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({ filter_to_date: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ filter_priority_id: evt })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ filter_category_id: evt })\n    }\n\n\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        // window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        // window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        // window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        // window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        // window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n        try {\n            await axios.get(`/api/ccs-tickets-my-handle/${this.props.user_id}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data, })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Loading ..... </p>\n                </div>\n            )\n        } else\n            return (\n                <div >\n\n                    <Grid  >\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%' }}>\n                                <h4>On Progress Tickets</h4>\n\n                                <Grid >\n\n\n                                    <Cell size={6}>\n\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ... '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                                    </Cell>\n                                </Grid>\n                                <Grid  >\n                                    {(() => {\n                                        if (this.state.data.length > 0) {\n\n                                            return (\n                                                <Fragment>\n\n                                                    <table className=\"table   is-fullwidth is-striped\"  >\n                                                        <thead>\n                                                            <tr>\n                                                                <th style={{ width: '10%' }}> #ID &nbsp; <span onClick={() => this.setSorting('_id')} href='#'><i className=\"fa fa-sort\"></i></span> </th>\n                                                                <th style={{ width: '38%' }}>Ticket Request &nbsp; <span onClick={() => this.setSorting('title')} href='#'><i className=\"fa fa-sort\"></i></span></th>\n                                                                <th style={{ width: '10%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')} href='#'><i className=\"fa fa-sort\"></i></span> </th>\n                                                                <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')} href='#'><i className=\"fa fa-sort\"></i></span></th>\n                                                                <th style={{ width: '15%' }}>handling time &nbsp; <span onClick={() => this.setSorting('time_left')} href='#'><i className=\"fa fa-sort\"></i></span></th>\n                                                                <th style={{ width: '15%' }}>Handled at &nbsp; <span onClick={() => this.setSorting('created_at')} href='#'><i className=\"fa fa-sort\"></i></span></th>\n\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {this.state.data.map((item, i) => (\n                                                                // (i <= limitTop && i >= limitBottom) ? (\n\n                                                                <tr key={i}>\n                                                                    <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                                                    <td>\n                                                                        <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> &nbsp;\n                                                                    </td>\n                                                                    <td>\n                                                                        <p>{item.client_name}</p>\n                                                                    </td>\n                                                                    <td>\n                                                                        {item.priority_id !== '' ? (\n                                                                            <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                        ) : ''}\n                                                                    </td>\n\n                                                                    <td>\n                                                                        {item.time_left_adjusted > 0 ? item.time_left_adjusted : item.time_left_} days left\n                                                                    </td>\n\n                                                                    <td>\n                                                                        <p>{dateformat(item.created_at, 'dd mmm HH:MM')}</p>\n                                                                    </td>\n                                                                </tr>\n                                                                //   )  : '' \n                                                            ))}\n\n                                                        </tbody>\n                                                    </table>\n                                                    {pages.length > 0 ? (\n                                                        <div className=\"container\">\n                                                            <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                            <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                            {pages.map((page) => (\n                                                                this.isActive(page) ? (\n                                                                    <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                ) : (\n                                                                        <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                    )\n\n\n                                                            ))}\n                                                            <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                            <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                        </div>\n\n                                                    ) : ''}\n                                                </Fragment>\n                                            )\n                                        } else {\n                                            return (\n\n                                                <div className=\"notification\">\n                                                    <p>No data showed. </p>\n                                                </div>\n\n                                            )\n                                        }\n                                    })()\n\n                                    }\n                                </Grid>\n                            </Card>\n                        </Cell>\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport StarRatings from 'react-star-ratings'\nimport {\n    Card,\n    Grid,\n    Cell,\n    TextField,\n} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\n\n\nexport default class Home extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            client_id : '',\n            isLoading: true,\n            data: [],\n            priorities: [],\n            categories: [],\n            status: [],\n            status_id: '',\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            key: '',\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 100,\n        }\n\n        this.socket = io(socket_address)\n\n        this.socket.on('ACCEPT', (data) => {\n            this.componentDidMount()\n        })\n        this.socket.on('RATED', (data) => {\n            this.componentDidMount()\n        })\n\n        this.tableData = React.createRef();\n\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(`/api/user/${this.props.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.client_id !== null ) {\n                                this.state.client_id = item.client_id\n                            }\n                            \n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-tickets-my-completed-total/${this.props.user_id}?currentPage=0&displayPerPage=0&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-tickets-my-completed/${this.props.user_id}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        \n\n    }\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed-total/${this.props.user_id}?currentPage=0&displayPerPage=0&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed/${this.props.user_id}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        } else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed-total/${this.props.user_id}?currentPage=0&displayPerPage=0&key=${evt}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n            try {\n                await axios.get(`/api/ccs-tickets-my-completed/${this.props.user_id}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}&client_id=${this.state.client_id}`)\n                    .then(response => {\n\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data, })\n                        }\n\n                    })\n            } catch (error) {\n                console.log(error)\n            }\n        }\n\n        this.setState({\n            currentPage: 1,\n            displayPerPage: 100\n        })\n    }\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    setUpdate = (id) => {\n\n\n    }\n\n    setDelete = (id) => {\n\n\n    }\n\n    onChangeDateFrom = (evt) => {\n\n        this.setState({ date_from: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeDateTo = (evt) => {\n\n        this.setState({ date_to: dateformat(evt, 'yyyy-mm-dd') })\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({ category_id: evt })\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({ priority_id: evt })\n    }\n\n    filter = async () => {\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&category_id=${this.state.category_id}&priority_id=${this.state.priority_id}`\n        try {\n            await axios.get(`/api/ccs-tickets-my-completed/${this.props.user_id}?key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    resetFilter = () => {\n        this.setState({\n            category_id: '',\n            priority_id: '',\n            date_from: '',\n            date_to: '',\n            client_id: this.props.role.includes('Customer') ? this.state.client_id : ''\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        //window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        //window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        //window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n\n        //window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        //window.scrollTo(0, this.tableData.current.offsetTop)\n        this.props.scrollToTabs()\n\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n        try {\n            await axios.get(`/api/ccs-tickets-my-completed/${this.props.user_id}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}&client_id=${this.state.client_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ isLoading: false, data: response.data.data, })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n\n\n\n    render() {\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Loading ..... </p>\n                </div>\n            )\n        } else\n            return (\n                <div >\n\n                    <Grid >\n\n                        <Cell size={12}>\n                            <Card style={{ padding: '2.5%' }}>\n                                <h4>Finished Tickets</h4>\n\n                                <Grid>\n                                    <Cell size={6}>\n\n                                    </Cell>\n                                    <Cell size={6}>\n                                        <TextField placeholder={'Search ...'} onChange={this.search} />\n                                    </Cell>\n                                </Grid>\n                                {(() => {\n                                    if (this.state.data.length > 0) {\n\n                                        return (\n                                            <Fragment>\n\n                                                <table className=\"table   is-fullwidth is-striped\">\n                                                    <thead>\n                                                        <tr>\n                                                            <th style={{ width: '10%' }}> #ID &nbsp; <span onClick={() => this.setSorting('_id')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '28%' }} >Ticket Request &nbsp; <span onClick={() => this.setSorting('title')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>BPR/Client &nbsp; <span onClick={() => this.setSorting('client_name')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '12%' }}>Priority &nbsp; <span onClick={() => this.setSorting('priority_id')}><i className=\"fa fa-sort\"></i></span></th>\n                                                            <th style={{ width: '15%' }}>Finished at &nbsp; <span onClick={() => this.setSorting('resolution_at')}><i className=\"fa fa-sort\"></i></span> </th>\n                                                            <th style={{ width: '20%' }}>Rating &nbsp; <span onClick={() => this.setSorting('rating')}  ><i className=\"fa fa-sort\"></i></span></th>\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {this.state.data.map((item, i) => (\n                                                            // (i <= limitTop && i >= limitBottom) ? (\n                                                            <tr key={i}>\n                                                                <td><Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item._id}</b> </Link></td>\n                                                                <td >\n                                                                    <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link>\n                                                                </td>\n                                                                <td>\n                                                                    <p>{item.client_name}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.priority_id !== '' ? (\n                                                                        <span className={\"tag \" + item.label_color_priority}><b>{item.priority}</b></span>\n                                                                    ) : ''}\n                                                                </td>\n                                                                <td>\n                                                                    <p>{item.resolution_at !== null ? dateformat(item.resolution_at, 'dd mmm yyyy, HH:MM') : dateformat(item.updated_at, 'dd mmm yyyy, HH:MM')}</p>\n                                                                </td>\n                                                                <td>\n                                                                    {item.rating > 0 ? (\n                                                                        <Fragment>\n\n                                                                            <StarRatings\n                                                                                rating={parseFloat(item.rating.toString())}\n                                                                                starRatedColor=\"#f0c260\"\n                                                                                starDimension={'20px'}\n                                                                                numberOfStars={5}\n                                                                                name='rating'\n                                                                            />\n                                                                        </Fragment>\n                                                                    ) : ''}\n                                                                </td>\n\n                                                            </tr>\n\n                                                            // )  : ''\n                                                        ))}\n                                                    </tbody>\n                                                </table>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActive(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                                                )\n\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n                                            </Fragment>\n                                        )\n                                    } else {\n                                        return (\n\n                                            <div className=\"notification\">\n                                                <p>No data showed. </p>\n                                            </div>\n\n                                        )\n                                    }\n                                })()\n                                }\n                            </Card>\n                        </Cell>\n\n\n                    </Grid>\n\n                </div>\n            )\n    }\n}\n","import React,{Component, Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button} from 'react-md'\nimport axios from 'axios'\nimport StarRatings from 'react-star-ratings'\nimport OnProgress from './OnProgress'\nimport Completed from './Completed'\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Profile extends Component {\n    state = {\n        profile:[],\n        _id:'',\n        avg_rating:0,\n        client_code:'',\n        client_name:'',\n        tab:'onprogress',\n    }\n\n    componentDidMount= async  () => {\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        try{\n            await axios.get(`/api/user/${parsed.id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({profile:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.getAverageRating(parsed.id)\n\n        this.tabTask = React.createRef();\n\n    }\n\n    getAverageRating  = async (user_id) => {\n        try {\n            await axios.get(`/api/ccs-ticket-rating-average/${user_id}`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    this.setState({avg_rating:response.data.data[0].average_rating})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    setTab = (tab) => {\n        this.setState({tab:tab})\n    }\n\n    scrollToTabs = () => {\n        //this.tabs.current.scrollIntoView({ behavior: 'smooth', block: 'start' })\n        window.scrollTo(0,  500) //this.tabTask.current.offsetTop)\n    }\n\n\n    render() \n    {\n       \n        var list_contain = this.state.tab\n       \n        var tabList = []\n        \n        tabList = [\n            {color:'#f0c260',action:'onprogress',icon:'fa fa-ticket',tooltip:'On Progress Tickets',badge:this.state.total_available},\n            {color:'green',action:'completed',icon:'fa fa-ticket',tooltip:'Finished Tickets',badge:this.state.total_approve},\n            \n        ] \n        \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>Profile</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                    \n                    {this.state.profile.map((item,i) => (\n                        <Fragment>\n                           <Grid>\n                               <Cell size={12}>\n                               <div className=\" column is-12 box is-centered\">\n                                   <h4>Team Info</h4>\n                                   <figure >\n                                       <img className=\"is-rounded\" style={{width:'15vw'}} src={item.avatar_url} alt=\"\"/>\n                                   </figure>\n                                    <h4 style={{textAlign:'center'}}>{item.full_name}</h4>\n                                    <p style={{textAlign:'center'}}>{item.role} </p>\n                                    <h4 style={{textAlign:'center'}}>\n                                     { this.state.avg_rating > 0 ?  \n                                        <Fragment>\n                                            {this.state.avg_rating.toFixed(2) }  &nbsp;  \n                                       \n                                        <StarRatings\n                                        rating={this.state.avg_rating}\n                                        starRatedColor=\"orange\"\n                                        starDimension={'2vw'}\n                                        numberOfStars={5}\n                                        name='rating'\n                                        />\n                                         </Fragment> : (\n                                             <Fragment>\n                                             0   &nbsp;  \n                                        \n                                         <StarRatings\n                                         rating={0}\n                                         starRatedColor=\"orange\"\n                                         starDimension={'2vw'}\n                                         numberOfStars={5}\n                                         name='rating'\n                                         />\n                                          </Fragment>\n                                         )\n                                        }\n                                        \n                                    </h4>\n                                  \n                               </div>\n                               </Cell>\n                            </Grid>\n                            <Grid  >\n                               <Cell size={12} className=\"box\">\n                                    <h4>Tasks Info</h4>\n\n                                    <div className=\"tabs\" style={{border:'none'}}>\n                                        <ul>\n                                            { tabList.map((item,i) => {\n                                                if (list_contain === item.action) {\n                                                    return(<li onClick={() => this.setTab(item.action)}\n                                                                style={{borderBottom:'solid 3px '+item.color,backgroundColor:'#c7d6eb',padding:'10px 5px 0 0 ',borderTopRightRadius:'8px' ,borderTopLeftRadius:'8px',padding:'1vw'}} >\n                                                              {item.tooltip}\n                                                               \n                                                            </li>\n                                                    )\n                                                }else {\n                                                    return(<li  onClick={() => this.setTab(item.action)}\n                                                            style={{borderBottom:'solid 3px '+item.color,padding:'10px 5px 0 0 ',padding:'1vw'}} >\n                                                            {item.tooltip} \n                                                           \n                                                        </li>\n                                                        )\n                                                }\n                                            \n                                                })}\n                                        \n                                            \n                                        </ul>\n                                    </div>\n\n\n                                                          \n                            {(() => {\n                                    switch(list_contain) {\n                                        case 'onprogress' :\n                                            return (<OnProgress  userId = {payload.userId} user_id={this.state._id} scrollToTabs = {this.scrollToTabs} ref={this.tabTask} />)\n                                        case 'completed' :\n                                            return (<Completed userId = {payload.userId} user_id={this.state._id} scrollToTabs = {this.scrollToTabs}  ref={this.tabTask} />)\n                                        \n                                    }\n                                })()}\n                            </Cell>\n                               \n                             \n                         </Grid>\n    \n                               \n                        </Fragment>\n                    ))}\n                    \n                </Cell>\n            </Grid>\n        )\n    }\n}","import Profile from './Profile'\n\nexport default {\n    routeProps: {\n        path: '/ccs/staff',\n        exact: true,\n        component: Profile,\n    },\n    name: 'Profile',\n}","import DetailAllTicket from './DetailAllTicket'\n\n\nexport default {\n    routeProps: {\n        path: '/ccs/dashboard/all',\n        exact: true,\n        component: DetailAllTicket,\n    },\n    name: 'DetailAllTicket',\n}","import React,{Component,Fragment} from 'react'\nimport {Link,Switch,BrowserRouter as Router, Route  } from 'react-router-dom'\nimport {\n    Toolbar,Grid,Cell,Button,TextField,Card\n} from 'react-md'\n\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get() \n\nexport default class Detail extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            data :[],\n            priorities:[],\n            categories:[],\n            status:[],\n            filter_from_date:'',\n            filter_to_date:'',\n            filter_category_id:'',\n            filter_priority_id:'',\n        }\n     }\n     async componentDidMount () {\n        try {\n            await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    this.setState({data:response.data.data})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n       \n    }\n\n    search = async (evt) => {\n        if (evt ==='') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-rejected/${payload.userId}?key=${evt}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({filter_from_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({filter_to_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({filter_priority_id:evt})\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({filter_category_id:evt})\n    }\n\n    doFilter = () => {\n        const body = {\n            priority_id : this.state.filter_priority_id,\n            category_id : this.state.filter_category_id,\n            from_date : this.state.filter_from_date,\n            to_date : this.state.filter_to_date,\n        }\n    }\n\n     render() {\n         return(\n            <div style={{paddingBottom:'15vh',}} className=\"animated bounceInLeft\" >\n               \n               <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>Detail Rejected</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                           \n                        />\n                    </Cell>\n                </Grid>\n                <Card style={{padding:'2.5%'}}>    \n                <Grid>\n                        \n                        <Cell size={6}>\n                        \n                                {/* <button className=\"button is-rounded  is-small\"><i className=\"fa fa-chevron-left\">\n                                    </i></button>\n                                    <button className=\"button is-info is-rounded is-small\">1</button>\n                                    <button className=\"button is-rounded   is-small\">2</button>\n                                    <button className=\"button is-rounded  is-small\"><i className=\"fa fa-chevron-right\">\n                                    </i></button> */}\n                        </Cell>\n                        <Cell size={6}>\n                            <TextField placeholder={'Search ... (BPR Name or Title ) '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                        </Cell>\n                    </Grid>\n                    <Grid>\n                    <Cell size={12}>               \n                    { (() => {\n                       if (this.state.data.length > 0 ) {\n\n                       return (\n                        <Fragment>\n                  \n                  <table className=\"table is-bordered  is-fullwidth is-striped\">\n                        <thead>\n                            <tr>\n                                <th style={{width:'75%'}}>Ticket Request</th>\n                             \n                                <th style={{width:'25%'}}>Rejected at</th>\n                                \n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.data.map((item, i) => (\n                            <tr key={i}>\n                            <td >\n                                 <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> &nbsp; <span className={\"tag \"+item.label_color_priority }>{item.priority}</span>\n                                <p>{item.client_name}</p>\n                            </td>      \n                           \n                            <td>\n                                <p>{dateformat(item.rejected_at,'dd mmm HH:MM')}</p>\n                            </td>\n                                     \n                        </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                    </Fragment>\n                       )} else {\n                           return (\n                           \n                            <div className=\"notification\">\n                                <p>No data showed. </p>\n                            </div>\n                                \n                           )\n                       }\n                        })()\n                    }\n               </Cell>\n               </Grid>\n                  </Card> \n            </div>\n         )\n     }\n\n}","import DetailAllRejected from './DetailAllRejected'\n\n\nexport default {\n    routeProps: {\n        path: '/ccs/dashboard/rejected',\n        exact: true,\n        component: DetailAllRejected,\n    },\n    name: 'DetailAllRejected',\n}","import React,{Component,Fragment} from 'react'\nimport {Link,Switch,BrowserRouter as Router, Route  } from 'react-router-dom'\nimport {\n    Toolbar,Grid,Cell,Button,TextField,Card\n} from 'react-md'\n\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get() \n\nexport default class Detail extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            data :[],\n            priorities:[],\n            categories:[],\n            status:[],\n            filter_from_date:'',\n            filter_to_date:'',\n            filter_category_id:'',\n            filter_priority_id:'',\n        }\n     }\n     async componentDidMount () {\n        try {\n            await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}`)\n            .then(response => {\n                \n                if (response.data.status === 200) {\n                    this.setState({data:response.data.data})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: (<span className={\"tag \"+item.label_color} >{item.priority}</span>),\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({priorities:dt})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-status`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: (<p style={{color:item.label_color}} >{item.status}</p>),\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({status:dt})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: item.category,\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({categories:dt})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    search = async (evt) => {\n        if (evt ==='') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}`)\n                .then(response => {\n                    \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                    \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else{\n            try {\n                await axios.get(`/api/ccs-tickets-my-finished/${payload.userId}?key=${evt}`)\n                .then(response => {\n                    \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                    \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({filter_from_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({filter_to_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({filter_priority_id:evt})\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({filter_category_id:evt})\n    }\n\n    doFilter = () => {\n        const body = {\n            priority_id : this.state.filter_priority_id,\n            category_id : this.state.filter_category_id,\n            from_date : this.state.filter_from_date,\n            to_date : this.state.filter_to_date,\n        }\n    }\n\n     render() {\n         return(\n            <div style={{paddingBottom:'15vh',}} className=\"animated bounceInLeft\" >\n               \n               <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>Detail Closed</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                           \n                        />\n                    </Cell>\n                </Grid>\n                <Card style={{padding:'2.5%'}}>    \n                <Grid>\n                        \n                        <Cell size={6}>\n                        \n                                {/* <button className=\"button is-rounded  is-small\"><i className=\"fa fa-chevron-left\">\n                                    </i></button>\n                                    <button className=\"button is-info is-rounded is-small\">1</button>\n                                    <button className=\"button is-rounded   is-small\">2</button>\n                                    <button className=\"button is-rounded  is-small\"><i className=\"fa fa-chevron-right\">\n                                    </i></button> */}\n                        </Cell>\n                        <Cell size={6}>\n                            <TextField placeholder={'Search ... (BPR Name or Title ) '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                        </Cell>\n                    </Grid>\n                    <Grid>\n                    <Cell size={12}>               \n                    { (() => {\n                       if (this.state.data.length > 0 ) {\n\n                       return (\n                        <Fragment>\n                  \n                    <table className=\"table   is-fullwidth is-striped\">\n                        <thead>\n                            <tr>\n                                <th style={{width:'75%'}}>Ticket Request</th>\n                                <th style={{width:'25%'}}>Finished at</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.data.map((item, i) => (\n                           <tr key={i}>\n                           <td >\n                                <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> &nbsp; <span className={\"tag \"+item.label_color_priority }>{item.priority}</span>\n                                <p>{item.client_name}</p>\n                            </td>\n                            <td>\n                                <p>{dateformat(item.created_at,'dd mmm HH:MM')}</p>\n                            </td>  \n                           \n                       </tr>\n                        ))}\n                        </tbody>\n                    </table>\n                    </Fragment>\n                       )} else {\n                           return (\n                           \n                            <div className=\"notification\">\n                                <p>No data showed. </p>\n                            </div>\n                                \n                           )\n                       }\n                        })()\n                    }\n               </Cell>\n               </Grid>\n                  </Card> \n            </div>\n         )\n     }\n\n}","import DetailAllFinished from './DetailAllFinished'\n\n\nexport default {\n    routeProps: {\n        path: '/ccs/dashboard/finished',\n        exact: true,\n        component: DetailAllFinished,\n    },\n    name: 'DetailAllFinished',\n}","import React,{Component,Fragment} from 'react'\nimport {Link,Switch,BrowserRouter as Router, Route  } from 'react-router-dom'\nimport {\n    Toolbar,Grid,Cell,Button,TextField, Card\n} from 'react-md'\nimport StarRatings from 'react-star-ratings'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get() \n\nexport default class Detail extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            data :[],\n            priorities:[],\n            categories:[],\n            status:[],\n            filter_from_date:'',\n            filter_to_date:'',\n            filter_category_id:'',\n            filter_priority_id:'',\n        }\n     }\n     async componentDidMount () {\n        try {\n            await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    this.setState({data:response.data.data})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n\n        try {\n            await axios.get(`/api/ccs-priorities`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: (<span className={\"tag \"+item.label_color} >{item.priority}</span>),\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({priorities:dt})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n        try {\n            await axios.get(`/api/ccs-status`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: (<p style={{color:item.label_color}} >{item.status}</p>),\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({status:dt})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/ccs-categories`)\n            .then(response => {\n            \n                if (response.data.status === 200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label: item.category,\n                            value:item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({categories:dt})\n                }\n                \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    search = async(evt ) => {\n        this.setState({key:evt})\n        if (evt === '') {\n            try {\n                await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else {\n            try {\n                await axios.get(`/api/ccs-tickets-my-forward/${payload.userId}?key=${evt}`)\n                .then(response => {\n                \n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                \n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n\n\n    showDetail = (id) => {\n        this.props.showDetail(id)\n    }\n\n    onChangeFormDate = (evt) => {\n        this.setState({filter_from_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangeToDate = (evt) => {\n        this.setState({filter_to_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    onChangePriorityId = (evt) => {\n        this.setState({filter_priority_id:evt})\n    }\n\n    onChangeCategoryId = (evt) => {\n        this.setState({filter_category_id:evt})\n    }\n\n    doFilter = () => {\n        const body = {\n            priority_id : this.state.filter_priority_id,\n            category_id : this.state.filter_category_id,\n            from_date : this.state.filter_from_date,\n            to_date : this.state.filter_to_date,\n        }\n    }\n\n     render() {\n         return(\n            <div style={{paddingBottom:'15vh',}} className=\"animated bounceInLeft\" >\n               \n               <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>Detail Forwarded</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                           \n                        />\n                    </Cell>\n                </Grid>\n                <Card style={{padding:'2.5%'}}>    \n                <Grid>\n              \n                        <Cell size={6}>\n                        \n                                {/* <button className=\"button is-rounded  is-small\"><i className=\"fa fa-chevron-left\">\n                                    </i></button>\n                                    <button className=\"button is-info is-rounded is-small\">1</button>\n                                    <button className=\"button is-rounded   is-small\">2</button>\n                                    <button className=\"button is-rounded  is-small\"><i className=\"fa fa-chevron-right\">\n                                    </i></button> */}\n                        </Cell>\n                        <Cell size={6}>\n                            <TextField placeholder={'Search ... (BPR Name or Title ) '} onChange={this.search} rightIcon={(<i className=\"fa fa-search\" />)} />\n                        </Cell>\n                    </Grid>\n                    <Grid>\n                    <Cell size={12}> \n                           \n                    { (() => {\n                       if (this.state.data.length > 0 ) {\n\n                       return (\n                        <Fragment>\n                  \n                  <table className=\"table is-bordered  is-fullwidth is-striped\">\n                         <thead>\n                            <tr>\n                                <th>Ticket Request</th>\n                                <th>Sent to</th>\n                                <th>Sent at</th>\n                                <th>Ticket Status</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        {this.state.data.map((item, i) => (\n                            <tr key={i}>\n                            <td >\n                                <Link to={`/ccs/ticket/detail?ticket_id=${item._id}`} > <b>{item.title}</b></Link> &nbsp; <span className={\"tag \"+item.label_color_priority }>{item.priority}</span>\n                                <p>{item.client_name}</p>\n                            </td>\n                            <td>\n                                <p style={{color:item.label_color_status}}>{item.full_name}</p>\n                            </td>\n                            <td>\n                                <p>{dateformat(item.forwarded_at,'dd mmm yyyy HH:MM')}</p>\n                            </td>\n                            <td>\n                               <b style={{color:item.label_color_status}}>{item.status}</b> \n                            </td>\n                                        \n                                 \n                        \n                    </tr>\n                        ))}\n                        </tbody>\n                        </table>\n                    </Fragment>\n                       )} else {\n                           return (\n                           \n                            <div className=\"notification\">\n                                <p>No data showed. </p>\n                            </div>\n                                \n                           )\n                       }\n                        })()\n                    }\n                \n               </Cell>\n               </Grid>\n                </Card> \n            </div>\n         )\n     }\n\n}","import DetailAllForwarded from './DetailAllForwarded'\n\n\nexport default {\n    routeProps: {\n        path: '/ccs/dashboard/forwarded',\n        exact: true,\n        component: DetailAllForwarded,\n    },\n    name: 'DetailAllForwarded',\n}","import DetailOnProgress from './DetailOnProgress'\n\n\nexport default {\n    routeProps: {\n        path: '/ccs/dashboard/onprogress',\n        exact: true,\n        component: DetailOnProgress,\n    },\n    name: 'DetailOnProgress',\n}","import DetailAllCompleted from './DetailAllCompleted'\n\n\nexport default {\n    routeProps: {\n        path: '/ccs/dashboard/completed',\n        exact: true,\n        component: DetailAllCompleted,\n    },\n    name: 'DetailAllCompleted',\n}","import React, { Component, useEffect } from 'react'\nimport {\n    Card,MenuButton,\n    Grid, Button, Cell, TextField,\n    \n} from 'react-md'\nimport axios from 'axios'\nimport { insertLog } from '../../../../log/InsertLog'\nimport { Session } from 'bc-react-session'\nimport ReactToPrint from 'react-to-print';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport dateformat from 'dateformat'\nconst { payload } = Session.get()\n\nexport default class Logs extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            dataToExportPDF:[],\n            dataToExport:[],\n            toasts: [],\n            module_id: '',\n            total_data: 0,\n            _id: '',\n            isLoading: true,\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            category: '',\n            description: '',\n            created_by: payload.userId,\n            key: '',\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 25,\n        }\n\n        this.tableData = React.createRef();\n      \n\n        //this.addLog = this.addLog.bind(this)\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                        this.setState({ module_id: module_id })\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/logs-by-module-id-total/${module_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/logs-by-module-id/${module_id}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        insertLog('Access Logs Page', module_id)\n       \n    }\n\n    \n    search = async (val) => {\n        this.setState({\n            key: val\n        })\n        try {\n            await axios.get(`/api/logs-by-module-id-total/${this.state.module_id}?key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n        this.setState({\n            key: val, currentPage: 1\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n        console.log(i)\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: i\n        })\n    }\n\n    beforeGetContent = async () => {\n        \n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ dataToExportPDF: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    exportXLS = async () => { \n        var dataToExport = []\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map(async (item, i) => {\n                                var obj = {}\n                                obj['NO'] = i + 1\n                                obj['Time'] = dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')\n                                obj['User'] = item.full_name !== null ? item.full_name : item.client_name\n                                obj['Activity'] = item.log\n                                obj['IP'] = item.from_ip\n                                obj['UserAgent'] = item.user_agent\n                                \n                                dt.push(obj)\n    \n                                return false\n                            })\n                            dataToExport = dt\n                            this.setState({ dataToExport: dataToExport })\n                        }\n    \n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All Logs CCS  per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    render() {\n\n        const actions = [];\n\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Time', width: '8%' },\n            { label: 'User', width: '8%' },\n            { label: 'Activity', width: '32%' },\n            { label: 'IP', width: '10%' },\n            { label: 'User Agent', width: '30%' }\n\n        ]\n\n        return (\n\n            <div style={{ marginBottom: '8%' }}>\n\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Logs\n                    </h4>\n                    <Cell size={7}>\n\n                    </Cell>\n                    <Cell size={1}>\n                        \n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                            }, {\n                                primaryText:\n                                    // <a href={socket_address+`/api/ccs-tickets-print`} target='_blank' style={{textDecoration:'none'}}>PDF</a>\n                                    (<ReactToPrint\n                                        onBeforeGetContent={this.beforeGetContent}\n                                        trigger={() => <p>PDF</p>}\n                                        content={() => this.componentRef}\n                                    />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                    &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.dataToExportPDF}\n                                role={this.props.role}\n                            />\n                        </div>\n                    </Cell>\n                    <Cell size={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\" style={{ height: '80vh', marginBottom: '3%' }} ref={this.tableData} >\n                    \n                    <Cell size={12}>\n                        <Card style={{padding:'10px', borderRadius:'10px'}} >\n                            <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '9pt', overflowY: 'scroll' }}>\n                                <thead>\n                                    {columns.map((item, i) => (\n                                        <th width={item.width} key={i}>{item.label}</th>\n                                    ))}\n                                </thead>\n                                <tbody>\n                                    {this.state.data.length > 0 ? this.state.data.map((item, i) => (\n\n\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td>{dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')}</td>\n                                            <td>{item.full_name !== null ? item.full_name : item.client_name}</td>\n                                            <td>{item.log}</td>\n                                            <td>{item.from_ip}</td>\n                                            <td>{item.user_agent}</td>\n                                        </tr>\n\n                                    )) : (\n                                            <tr>\n                                                <td colSpan={6}>\n                                                    <div className=\"notification\">\n                                                        <p>Data is empty</p>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )}\n\n\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                    <Cell size={8}>\n\n                    </Cell>\n                    <Cell size={4} style={{ alignItems: 'right' }}>\n                        {pages.length > 0 ? (\n                            <div className=\"container\">\n                                <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ) : (\n                                            <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                        )\n\n                                ))}\n                                <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                            </div>\n\n                        ) : ''}\n                    </Cell>\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nclass Printable extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Time', width: '8%' },\n            { label: 'User', width: '8%' },\n            { label: 'Activity', width: '32%' },\n            { label: 'IP', width: '10%' },\n            { label: 'User Agent', width: '30%' }\n\n        ]\n\n        return (\n            <Grid className=\"grid-example\" style={{ height: '80vh', marginBottom: '3%' }} ref={this.tableData} >\n                    \n                <Cell size={12}>\n                    <Card style={{padding:'10px', borderRadius:'10px'}} >\n                        <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '9pt', overflowY: 'scroll' }}>\n                            <thead>\n                                {columns.map((item, i) => (\n                                    <th width={item.width} key={i}>{item.label}</th>\n                                ))}\n                            </thead>\n                            <tbody>\n                                {this.props.data.length > 0 ? this.props.data.map((item, i) => (\n\n\n                                    <tr key={i}>\n                                        <td>{i + 1}</td>\n                                        <td>{dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')}</td>\n                                        <td>{item.full_name !== null ? item.full_name : item.client_name}</td>\n                                        <td>{item.log}</td>\n                                        <td>{item.from_ip}</td>\n                                        <td>{item.user_agent}</td>\n                                    </tr>\n\n                                )) : (\n                                        <tr>\n                                            <td colSpan={6}>\n                                                <div className=\"notification\">\n                                                    <p>Data is empty</p>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )}\n\n\n                            </tbody>\n                        </table>\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import React from 'react'\nimport Logs from './Logs'\n\nexport default {\n    routeProps: {\n        path: '/ccs/log',\n        exact: true,\n        component: Logs,\n    },\n    name: 'Logs',\n}","import Teams from './Teams'\n\nexport default {\n    routeProps: {\n        path: '/ccs/teams',\n        exact: true,\n        component: Teams,\n    },\n    name: 'Teams',\n}","import React,{Component,Fragment} from 'react'\nimport {\n    Toolbar,Grid,Cell,Button,TextField, Card\n} from 'react-md'\nimport Team from '../report/Team'\n\nexport default class Teams extends Component{\n    constructor(props){\n        super(props)\n        \n     }\n     async componentDidMount () {\n        \n\n       \n    }\n\n    \n\n\n     render() {\n         return(\n            <div style={{paddingBottom:'15vh',}}  >\n               \n               <Grid>\n                    <Cell size={12}>\n                        <Toolbar\n                            title={<b>All Teams</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                           \n                        />\n                    </Cell>\n                </Grid>\n                \n                                        \n                                      \n                <Team />\n                                 \n            </div>\n         )\n     }\n\n}","import React,{Component,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid,Button,Cell,TextField, Snackbar,ListItem,MenuButton,\n    DialogContainer, \n    SelectField} from 'react-md'\nimport axios from 'axios'\nimport {insertLog} from '../../../../log/InsertLog'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\nclass KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                <ListItem key={1}  primaryText='Edit' rightIcon ={(<i className='fa fa-pencil' />)} style={{backgroundColor:'lightblue'}} onClick={ () => \n                     this.setUpdate(this.props.id)} /> , \n                <ListItem key={1} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> ,\n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}\n\nexport default class ClientRespondTimeConfig extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            toasts: [],\n            clients:[],\n            _id:'',\n            weight:'',\n            isLoading:true,\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            client_id:'',\n            max_respond_time:'',\n            created_by : payload.userId,\n            role_controls:[],\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n        }\n\n        \n    }\n\n    \n   \n    \n     async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                   \n                    response.data.data.map((item,i) => {\n                        module_id = item._id\n                    })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n        try{\n        await axios.get(`/api/clients`)\n        .then(response => {\n           \n                if(response.data.status ===200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        if (item.client_code > 0 ) {\n                            var obj = {\n                                label:item.client_code+' - '+item.client_name,\n                                value:item._id\n                            }\n                            dt[i] = obj\n                           \n                        }\n                        return false\n                    })\n\n                    this.setState({clients:dt})\n                    \n                }\n           \n        })\n        }catch(error){\n            console.log(error)\n        }\n\n         try{\n            await axios.get(`/api/ccs-client-respond-time-configs`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    this.setState({data:response.data.data,isLoading:false})\n                   \n                }\n            })\n         }catch(e){\n             console.log(e)\n         }\n        \n        insertLog('Access CLient Respond Time Config Page',module_id)\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:window.location.pathname,role_id:this.props.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n\n\n    \n\n    search = async(val) => {\n        if (val==='') {\n            this.componentDidMount()\n        }else{\n            try{\n                await axios.get(`/api/ccs-client-respond-time-configs?key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({data:response.data.data})\n                    }\n                })\n             }catch(e){\n                 console.log(e)\n             }\n        }\n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n      };\n\n    onChangeCLientId= (val) => {\n        this.setState({client_id:val})\n    }\n    onChangeMaxRespondTime= (val) => {\n        this.setState({max_respond_time:val})\n    }\n    onChangeDescription = (val) => {\n        this.setState({description:val})\n    }\n\n    setUpdate  = async(id) => {\n       \n        try{\n            await axios.get(`/api/ccs-client-respond-time-config/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item) => {\n                        this.setState({\n                            client_id : item.client_id,\n                            max_respond_time:item.max_respond_time,\n                           \n                        })\n                        return false\n                    })\n                    \n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        this.setState({\n            _id:id,\n            dialogVisible:true\n        })\n    }\n\n    setDelete = (id) => {\n        this.setState({\n            _id:id,\n            dialogDeleteVisible:true\n        })\n    }\n\n    delete = async () => {\n        this.setState({isLoading:true})\n        try {\n            await axios.delete(`/api/ccs-client-respond-time-config/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        isLoading:false,\n                        dialogDeleteVisible:false,\n                        status : '',\n                        label_color : '',\n                        description:'',\n                        _id:'',\n                        weight:'',\n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save = async () => {\n        this.setState({isLoading:true})\n        const body = {\n            client_id:this.state.client_id,\n            max_respond_time : this.state.max_respond_time,\n           \n            created_by : this.state.created_by,\n        }\n        if (this.state._id === ''){\n            try{\n                await axios.post(`/api/ccs-client-respond-time-config`,body)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            isLoading:false,\n                            dialogVisible:!this.state.dialogVisible,\n                            client_id:'',\n                            max_respond_time:'',\n                            weight:'',\n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/ccs-client-respond-time-config/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            isLoading:false,\n                            dialogVisible:!this.state.dialogVisible,\n                            client_id:'',\n                            max_respond_time:'',\n                            _id:'',\n                            weight:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    \n\n    showForm = () => {\n        this.setState({_id:'',dialogVisible:true, category:'',\n        description:'',})\n    }\n\n    render() \n    {\n       \n        const columns = [{label:'No',width:'2%'},{label:'BPR/CLient',width:'8%'},{label:'Max Time Respond (hours)',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Processing ....</p>\n                </div>\n            )\n        }else\n        return(\n           \n            <div style={{marginBottom:'30px'}}>\n                <ToastContainer />\n\n                {this.state.role_create ?  (\n                        <Button style={{\n                            position:'fixed',\n                            right:'10px',\n                            bottom:'20px',\n                            float:'bottom'\n                        }} secondary floating iconClassName=\"fa fa-plus\"\n                            onClick={() => this.setState({dialogVisible:true})}\n                        ></Button>\n                    ) :''\n                }\n                 <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Client Respond Time Configuration\n                    </h2>\n                    <Cell size={4}>\n                       \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                        onChange={this.search}\n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.client_name}</td>\n                                   \n                                    <td>{item.max_respond_time}</td>\n                                    <td>    \n                                        {this.state.role_delete && this.state.role_update ? (\n                                            <KebabMenu id={item._id} \n                                            setDelete={(id) => this.setDelete(id)}\n                                            setUpdate={(id) => this.setUpdate(id)} />\n                                        ) : '-' }\n                                        \n                                     </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n            <DialogContainer\n               width='600px'\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogVisible}\n                onHide={() => !this.state.dialogVisible}\n                actions={actions}\n                title=\"Manage Respond Time Configuration\"\n                >\n                \n                <SelectField\n                    rows={2}\n                    id=\"simple-action-dialog-field\"\n                    label=\"BPR/CLient\"\n                    placeholder=\"BPR/CLient\"\n                    menuItems={this.state.clients}\n                    value={this.state.client_id}\n                    onChange={this.onChangeCLientId}\n                    className=\"md-cell md-cell--4-tablet md-cell--12\"\n                />\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Max Time Respond (hours)\"\n                    placeholder=\"in number\"\n                    type=\"number\"\n                    value={this.state.max_respond_time}\n                    onChange={this.onChangeMaxRespondTime}\n                />\n            </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={[<Button raised primary onClick={this.delete} >YES</Button>,<Button onClick={() => this.setState({dialogDeleteVisible :false})} >NO</Button>]}\n                title=\"Confirmation\"\n                >\n                <p>Are you sure delete this item?</p>\n            </DialogContainer>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport ClientRespondTimeConfig from './ClientRespondTimeConfig'\n\nexport default {\n    routeProps: {\n        path: '/ccs/client-respond-time-config',\n        exact: true,\n        component: ClientRespondTimeConfig,\n    },\n    name: 'ClientRespondTimeConfig',\n}","import React,{Component, Fragment} from 'react'\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button, ListItem, List, Subheader, Divider, FontIcon,Card,Avatar} from 'react-md'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\n\nimport dateformat from 'dateformat'\nimport {Session} from 'bc-react-session'\nconst {payload} =Session.get()\n\nexport default class Notifications extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            _id:'',\n            avg_rating:0,\n            client_code:'',\n            client_name:'',\n            tab:'onprogress',\n            currentPage : 1,\n            displayPerPage : 25,\n            totalShowed : 0,\n            isLoading : true\n        }\n    \n        this.socket = io(socket_address) \n        \n            this.socket.on('RECEIVE_NOTIFICATION', (data) => {\n                if (data.to_user_id === payload.userId) {\n                    this.componentDidMount()\n                }\n                \n            })\n            this.socket.on('READ_NOTIFICATION', (data) => {\n                this.componentDidMount()\n            })\n\n    }\n    \n\n\n    componentDidMount= async  () => {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        \n\n        try{\n            await  axios.get(`/api/notifications-per-user-total/${payload.userId}?displayPerPage=${0}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({total_data : response.data.data[0].total})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${this.state.displayPerPage}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data,isLoading:false})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n\n    }\n\n    readNotif = async (notif_id) => {\n        const body = {\n          is_read : 1\n        }\n         try{\n           axios.put(`/api/notification/${notif_id}`,body)\n           .then(response => {\n             if (response.data.status === 200) {\n   \n             }\n           })\n         }catch(e){\n           console.log(e)\n         }\n    }\n\n    loadMore = async() => {\n\n        const currentPage = this.state.currentPage+1\n        const displayPerPage = this.state.displayPerPage * currentPage\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${displayPerPage}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: currentPage,\n            totalShowed: displayPerPage\n        })\n    }\n    \n\n    render() \n    {\n       if (this.state.isLoading) {\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <div className=\"notification\">\n                        <p>Loading ... </p>\n                    </div>\n                </Cell>\n             </Grid>\n        )\n       }  else \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>All Notifications</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                </Cell>\n                <Cell size={12}>\n                    <Card style={{padding: '2.5vw',}}>\n                        <List className=\"md-cell \" style={{width:'100%',listStyle:'none'}}>\n                            <Subheader primaryText=\"Notifications\" />\n                            {this.state.data.map((item,i) => (\n                                <Link to={item.link} onClick={() => this.readNotif(item._id)} >\n                                    <ListItem\n                                        //  style={{backgroundColor: item.is_read === 0 ? '#cae7fa' : ''}}\n                                        leftAvatar={<Avatar src={item.avatar_url}/>}\n                                        primaryText={<Fragment> <b>{item.full_name !== '' &&  item.full_name !== null ? item.full_name : item.client_name}</b> &nbsp; {item.is_read === 0 ? <span className=\"tag \" style={{backgroundColor:'#cae7fa'}}><b>UNREAD</b></span>:''} </Fragment>}\n                                        secondaryText={<Fragment>  {item.notification} &nbsp; <p>{dateformat(item.created_at,'dd mmm yyyy, HH:MM' )}</p> </Fragment> }\n                                        threeLines\n                                    />\n                                </Link>\n                            ))}\n                            \n                                                       \n                        </List>\n                        { this.state.totalShowed < this.state.total_data ? (\n                            <a onClick={this.loadMore}><h4 >Load More ... </h4></a>\n                        ):'' }\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","\nimport status from \"./status\";\nimport categories from \"./categories\"\nimport priorities from \"./priorities\"\nimport task from \"./task\"\nimport help from \"./about/help\"\nimport report from \"./report\"\nimport home from \"../home\"\nimport preferences from \"./preferences\"\nimport profile from \"./profile\"\nimport changepwd from \"./changepwd\"\nimport detail from \"./ticket/detail\"\nimport detailapproval from \"./ticket/detailapproval\"\nimport detailcompleted from \"./ticket/detailcompleted\"\nimport detailfinished from \"./ticket/detailfinished\"\nimport detailhandle from \"./ticket/detailhandle\"\nimport detailrejected from \"./ticket/detailrejected\"\nimport form from \"./ticket/form\"\nimport formeditticket from \"./ticket/formeditticket\";\nimport customer from \"./customer\";\nimport staff from \"./staff\";\nimport detail_all from '../home/detail_all'\nimport detail_rejected from '../home/detail_rejected'\nimport detail_finished from '../home/detail_finished'\nimport detail_forwarded from '../home/detail_forwarded'\nimport detail_progress from '../home/detail_progress'\nimport detail_completed from '../home/detail_completed'\nimport log from \"./log\";\nimport teams from \"./teams\";\nimport client_respond_time from \"./client-respond-time\";\nimport notifications from \"./notifications\";\n\nexport default [\n   status,categories,priorities,report,task,home,preferences,profile,changepwd,detail,\n   form,formeditticket, detailapproval, detailcompleted, detailfinished, detailfinished, detailhandle\n   ,detailrejected,help,customer,staff,detail_all,detail_finished,detail_forwarded,detail_progress, detail_rejected\n  ,detail_completed,log,teams,client_respond_time,notifications\n]","import React from 'react'\nimport Notifications from './Notifications'\n\nexport default {\n    routeProps: {\n        path: '/ccs/notifications',\n        exact: true,\n        component: Notifications,\n    },\n    name: 'Notifications',\n}","import React,{Component} from 'react'\nimport {Link,Switch,BrowserRouter as Router, Route,Redirect  } from 'react-router-dom'\nimport { Button, Drawer, Toolbar } from 'react-md'\nimport {UserDropdownMenu,Notifications, ApplicationMenu,NavLink} from '../../../components'\nimport axios from 'axios'\nimport menus from '../menus'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar inboxListItems = []\n\nexport default class Home extends Component{\n  state = { visible: false, role_id:'',role:'',position: 'left',role_id:'',module_title:this.props.module_title,notifications:[], avatar_url:'' }\n\n  async componentDidMount() {\n    window.document.title = 'CCS PT MSO'\n    var moduleName = window.location.href.split('/')\n\n\n   \n\n    try {\n        await axios.get(`/api/user/${payload.userId}`)\n        .then(response => {\n                if (response.data.status === 200 ) {\n                  response.data.data.map((item,i) => {\n                        this.setState({\n                          avatar_url : item.avatar_url\n                        })\n                    })\n                    \n                }\n              \n        })\n    }catch(error){\n        console.error('Data Not Loaded ',error)\n    }\n\n    var module_id = ''\n      var moduleName = window.location.href.split('/')\n      try {\n          await  axios.get(`/api/module-by-link/${moduleName[3]}`)\n          .then(response => {\n                  \n                  response.data.data.map((item,i) => {\n                      module_id = item._id\n                      return false\n                  })\n          })\n      }catch(error){\n          console.error('Data Not Loaded ',error)\n      }\n      \n      try {\n          await  axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n          .then(response => {\n          \n              if (response.data.status === 200) {\n                  this.setState({role:response.data.data[0].role,role_id:response.data.data[0].role_id})\n              }\n          \n          })\n      }catch(error){\n          console.log(error)\n      }\n      console.log(this.state.role)\n      try {\n        await  axios.get(`/api/ccs-notifications-per-user/${payload.userId}`)\n        .then(response => {\n        \n            if (response.data.status === 200) {\n                this.setState({notifications:response.data.data})\n            }\n        \n        })\n    }catch(error){\n        console.log(error)\n    }\n\n    try {\n      await axios.get(`/api/menu-by-module-link-role-id/${moduleName[3]}/${this.state.role_id}`)\n      .then(response => {\n              var dt  = []\n              response.data.data.map((item,i) => {\n              var obj = {\n                  label: item.menu,\n                  to: item.link,\n                  icon: 'list',\n              }\n              dt[i] = (<NavLink key={i} label={item.menu } to={item.link} icon={item.icon} />)\n              })\n             \n              inboxListItems = dt\n      })\n  }catch(error){\n      console.error('Data Not Loaded ',error)\n  }\n  \n\n    console.log(this.state.role_id)\n\n      \n}\n\n  openDrawerLeft = () => {\n    this.setState({ visible: true, position: 'left' });\n  };\n\n\n  closeDrawer = () => {\n    this.setState({ visible: false });\n  };\n\n  handleVisibility = (visible) => {\n    this.setState({ visible });\n  };\n\n  render() {\n    const { visible, position } = this.state;\n    const isLeft = position === 'left';\n    \n    const closeBtn = <Button icon onClick={this.closeDrawer}>{isLeft ? 'arrow_back' : 'close'}</Button>;\n   \n    if (payload.userId ===  '' ||  payload.userId ===  null || payload.userId ===  undefined ) {\n        return (\n          <Redirect to='/' />\n        )\n    }else\n    return (\n      <Router>\n      <div style={{marginTop:'70px'}} >\n          <Toolbar\n            fixed\n          colored\n          nav={<Button icon onClick={this.openDrawerLeft} >menu</Button>}\n          title={this.state.module_title}\n          style={{backgroundColor:this.props.bg_color}}\n          actions={[(<ApplicationMenu />),(<Notifications />),(<UserDropdownMenu avatar={this.state.avatar_url} />)]}\n        />\n        <div className=\"content\">\n            <Switch>\n                { menus.map((_,i) => {\n                  if(this.state.role.includes('Help Desk') || this.state.role.includes('Implementator') || this.state.role.includes('Support Pelayanan') || this.state.role.includes('Specialist') || this.state.role.includes('Supervisor CCS') || this.state.role.includes('Customer')  ){\n                    return( <Route path={_.routeProps.path} exact = {_.routeProps.exact} key={_.name} component={() => <_.routeProps.component role={this.state.role} role_id={this.state.role_id} />}>\n                              <Redirect to = {`/ccs/task`} />\n                            </Route>\n                      )\n                  }else {\n                    return( <Route path={_.routeProps.path} exact = {_.routeProps.exact} key={_.name} component={() => <_.routeProps.component role={this.state.role} role_id={this.state.role_id} />}/>)\n                  }\n                 \n                }) }\n            </Switch>\n        </div>\n        <Drawer\n          id=\"simple-drawer-example\"\n          type={Drawer.DrawerTypes.TEMPORARY}\n          visible={visible}\n          position={position}\n          onVisibilityChange={this.handleVisibility}\n          navItems={inboxListItems}\n          header={(\n            <Toolbar\n              nav={isLeft ? (<Button icon onClick={() => window.location.href='/'} >home</Button> ) : closeBtn}\n              actions={isLeft ? closeBtn : null}\n              className=\"md-divider-border md-divider-border--bottom\"\n            />\n          )}\n        />\n      </div>\n      </Router>\n    );\n  }\n} \n","import React,{Component} from 'react'\nimport Home from './home/Home'\n\nclass CCS extends Component{\n    render() {\n        return(\n            <Home module_title='CCS PT MSO' bg_color='#2196f3'/>\n        )\n    }\n} \nexport default {\n    routeProps: {\n        path: '/ccs',\n        exact: true,\n        component: CCS,\n    },\n    name: 'CCS',\n}","import React,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid,Cell,TextField, Button,DialogContainer,Snackbar,ListItem,MenuButton} from 'react-md'\nimport axios from 'axios'\nimport ReactToPrint from 'react-to-print';\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class Menus extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            toasts:[],\n            data:[],\n            roles:[],\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            currentPage:1,\n            displayPerPage : 50,\n            asc:1,\n            role_id:this.props.role_id,\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n\n        }\n    }\n\n     async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                   \n                    response.data.data.map((item,i) => {\n                        module_id = item._id\n                    })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n       \n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role:response.data.data[0].role,role_id:response.data.data[0].role_id})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        try{\n            await axios.get(`/api/clients`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                       if(item.client_code > 0 ) {\n                            dt.push( item)\n                       }\n                        \n                    })\n                    this.setState({data:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        //console.log(this.props.role_id)\n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:'/clients?tab_name=client',role_id:this.state.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        console.log(this.state.role_create)\n        console.log(this.state.role_read)\n        console.log(this.state.role_update)\n        console.log(this.state.role_delete)\n\n        \n     }\n\n     addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    search = async (evt) => {\n        if (evt === '') {\n            try{\n                await axios.get(`/api/clients`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        var dt = []\n                        response.data.data.map((item,i) => {\n                           if(item.client_code > 0 ) {\n                                dt.push( item)\n                           }\n                            \n                        })\n                        this.setState({data:dt})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            try{\n                await axios.get(`/api/clients?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        var dt = []\n                        response.data.data.map((item,i) => {\n                           if(item.client_code > 0 ) {\n                                dt.push( item)\n                           }\n                            \n                        })\n                        this.setState({data:dt})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n     renderRole = (id) => (\n       \n        <tr>\n            <td colSpan={4}>{id}</td>\n        </tr>\n    )\n\n    onChangeStatus= (evt) => {\n        this.setState({status:evt})\n    }\n\n    \n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    setUpdate  = async (id) => {\n        try{\n            await axios.get(`/api/client/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        this.setState({\n                            _id: item._id,\n                            status_id : item.status_id,\n                            \n                            description : item.description,\n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        this.setState({dialogVisible:true})\n    }\n\n    setDelete = (id) => {\n        this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/client/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:!this.state.dialogDeleteVisible,\n                      \n                        _id:'',\n                      \n                       \n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    \n\n    setSorting = (key) => {\n        this.setState({asc:(this.state.asc*(-1))})\n        var data = this.state.data\n        this.sortArray(data,key,this.state.asc)\n        this.setState({data:data})\n    }\n\n     sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n       \n        this.setState({currentPage:i})\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        this.setState({currentPage:endPage})\n    }\n\n    setPageStart = () => {\n        this.setState({currentPage:1})\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i+1)\n        this.setState({currentPage:nextPage})\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1 ) < 1 ? 1 : (i - 1)\n        this.setState({currentPage:prevPage})\n    }\n\n     \n\n    render() \n    {   \n        const columns = [{label:'No',width:'2%'},\n            {label:'BPR Code - BPR /Client Name',width:'15%',sorting:'client_code'},\n            {label:'Address',width:'20%'},\n            {label:'Phone No',width:'15%'},\n            {label:'Email',width:'15%'},\n            {label:'Status',width:'5%'},\n            {label:'',width:'3%'}] \n\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({  children: 'NO', onClick: (() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible}))});\n        \n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage+2\n        const endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for(var i=(currentPage-3);i<=n ; i++){\n\n            pages[i-1] = i\n        }\n        const limitBottom = ((this.state.currentPage-1) * this.state.displayPerPage )\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1  \n\n        return(\n            <div>\n                {this.state.role_create ? (\n               <Link to ={'/clients/form'} >\n                    <Button style={{\n                        position:'fixed',\n                        right:'10px',\n                        bottom:'20px',\n                        float:'bottom'\n                    }} \n                    onClick={this.showForm}\n                    secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                </Link>\n                ):''}\n                 <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        All BPR Clients\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{alignItems:'right'}}>\n                        <ReactToPrint\n                            trigger={() =>  <button className=\"button is-small is-primary\">\n                                    <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b> \n                                </button>}\n                            content={() => this.componentRef }\n                        />\n                        <div style={{ display: \"none\" }}>\n                                <Printable \n                                    ref={el => (this.componentRef = el)} \n                                    data={this.state.data} \n                                 />\n                                    \n                        </div>  \n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={4}>\n                       \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                        {columns.map((item,i) => (\n                               item.sorting !== null && item.sorting !== '' && item.sorting !== undefined ? (\n                                <td width={item.width} >{item.label} &nbsp; <a onClick={() => this.setSorting(item.sorting)}><i className=\"fa fa-sort\"></i></a> </td>\n                               ) : (\n                                <td width={item.width} >{item.label} </td>\n\n                               )\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                i <= limitTop && i >= limitBottom) ? (\n                                <tr>\n                                    <td >{i+1}</td>\n                                        <td><strong>{item.client_code+' - '+item.client_name}</strong></td>\n                                        <td>{item.address}</td>\n                                        <td>{item.phone_number}</td>\n                                        <td>{item.email}</td>\n                                        <td><b style={{color:item.label_color}}>{item.status}</b></td>\n                                        <td>\n                                            {this.state.role_delete && this.state.role_update ? (\n                                                <KebabMenu id={item._id} setUpdate = {(id) => this.setUpdate(id)} \n                                                setDelete = {(id) => this.setDelete(id)} />\n                                            ):'-'}\n                                    </td> \n                                </tr>) :''\n                                       \n                            )}\n                                \n                               \n                        </tbody>\n                    </table>\n                    {pages.length > 0 ?(\n                        <div className=\"container\">\n                             <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                             <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ): (\n                                        <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    )\n                                    \n                                    \n                                ))}\n                             <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                             <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                        </div>\n                       \n                    ):''}\n                </Grid>\n\n\n\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={action_delete}\n                title=\"Confirmation\"\n                >\n               Are you sure delete this item?\n            </DialogContainer>\n\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n\n            </div>\n           \n        )\n    }\n}\n\n\nclass KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                <ListItem key={1}  primaryText={<Link to = {`/clients/form?id=${this.props.id}`} >Edit &nbsp;<i className='fa fa-pencil' /> </Link>}  style={{backgroundColor:'lightblue'}} />, \n                <ListItem key={2} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> \n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center',marginTop:'0em'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}\n\nclass Printable extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        const columns = [{label:'No',width:'2%'},\n        {label:'BPR Code - BPR /Client Name',width:'15%'},\n        {label:'Address',width:'20%'},\n        {label:'Phone No',width:'15%'},\n        {label:'Email',width:'15%'},\n        {label:'Status',width:'5%'},\n       ] \n\n        return(\n            <div>\n                 <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <td width={item.width} >{item.label}</td>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item,i) => (\n                                        <tr>\n                                            <td >{i+1}</td>\n                                                <td><strong>{item.client_code+' - '+item.client_name}</strong></td>\n                                                <td>{item.address}</td>\n                                                <td>{item.phone_number}</td>\n                                                <td>{item.email}</td>\n                                                <td><b style={{color:item.label_color}}>{item.status}</b></td>\n                                               \n                                        </tr>)\n                                       \n                            )}\n                                \n                               \n                        </tbody>\n                    </table>\n\n                </Grid>\n            </div>\n            \n        )\n    }\n}","import Clients from './Clients'\n\nexport default {\n    routeProps: {\n        path: '/clients/clients',\n        exact: true,\n        component: Clients,\n    },\n    name: 'Clients',\n}","import React,{Component} from 'react'\nimport {MenuButton,ListItem} from 'react-md'\n\nexport default class KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                <ListItem key={1}  primaryText='Edit' rightIcon ={(<i className='fa fa-pencil' />)} style={{backgroundColor:'lightblue'}} onClick={ () => \n                     this.setUpdate(this.props.id)} /> , \n                <ListItem key={2} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> \n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}","import React,{Component} from 'react'\nimport {Grid,TextField, Button,DialogContainer,SelectField,Snackbar, Cell} from 'react-md'\nimport axios from 'axios' \nimport KebabMenu from '../../components/KebabMenu'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class Status extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            modules:[],\n            dialogVisible:false,\n            status:'',\n            label_color:'',\n            description:'',\n            created_by : payload.userId,\n            role_id:'',\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n        }\n    }\n    async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                   \n                    response.data.data.map((item,i) => {\n                        module_id = item._id\n                    })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n       \n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role:response.data.data[0].role,role_id:response.data.data[0].role_id})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n       \n        try{\n            await axios.get(`/api/client-status`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:'/clients?tab_name=status',role_id:this.state.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        console.log(this.state.role_create)\n        console.log(this.state.role_read)\n        console.log(this.state.role_update)\n        console.log(this.state.role_delete)\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    \n\n    onChangeStatus= (evt) => {\n        this.setState({status:evt})\n    }\n\n    onChangeLabelColor= (evt) => {\n        this.setState({label_color:evt})\n    }\n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    search  = async (evt) => {\n        try{\n            await axios.get(`/api/client-status?key=${evt}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    setUpdate  = async (id) => {\n        try{\n            await axios.get(`/api/client-status/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        this.setState({\n                            _id: item._id,\n                            status : item.status,\n                            label_color:item.label_color,\n                            description : item.description,\n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        this.setState({dialogVisible:true})\n    }\n\n    setDelete = (id) => {\n        this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/client-status/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:!this.state.dialogDeleteVisible,\n                        status : '',\n                        _id:'',\n                        label_color:'',\n                        description:'',\n                       \n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save  = async() => {\n        const body = {\n            status : this.state.status,\n            description : this.state.description,\n            label_color:this.state.label_color\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/client-status`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            status : '',\n                            _id:'',\n                            label_color:'',\n                            description:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/client-status/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            status : '',\n                            description:'',\n                            label_color:'',\n                            _id:'',\n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n        const columns = [{label:'No',width:'2%'},{label:'Status',width:'8%'},{label:'Description',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({  children: 'NO', onClick: (() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible}))});\n        return(\n            <div>\n                {this.state.role_create ? (\n                <Button style={{\n                    position:'fixed',\n                    right:'10px',\n                    bottom:'20px',\n                    float:'bottom'\n                }} \n                onClick={this.showForm}\n                secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                ):''}\n                 <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Status\n                    </h4>\n                    </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{alignItems:'right'}}>\n                       \n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={4}>\n                       \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td><b style={{color:item.label_color}}>{item.status}</b></td>\n                                    <td>{item.description}</td>\n                                    <td>\n                                        {this.state.role_delete && this.state.role_update ? (\n                                            <KebabMenu id={item._id} setUpdate = {(id) => this.setUpdate(id)} \n                                            setDelete = {(id) => this.setDelete(id)} />\n                                        ):'-'}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogVisible}\n                onHide={() => !this.state.dialogVisible}\n                actions={actions}\n                title=\"Manage Status\"\n                >\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Status\"\n                    placeholder=\"Status\"\n                    value={this.state.status}\n                    onChange={this.onChangeStatus}\n                />\n\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Label Color\"\n                    placeholder=\"Label Color\"\n                    value={this.state.label_color}\n                    onChange={this.onChangeLabelColor}\n                />\n                \n                 <TextField\n                    rows={2}\n                    id=\"simple-action-dialog-field\"\n                    label=\"Description\"\n                    placeholder=\"Description\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                />\n\n\n            </DialogContainer>\n\n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={action_delete}\n                title=\"Confirmation\"\n                >\n               Are you sure delete this item?\n            </DialogContainer>\n\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}","import Status from './Status'\n\nexport default {\n    routeProps: {\n        path: '/clients/Status',\n        exact: true,\n        component: Status,\n    },\n    name: 'Status',\n}","import React,{Component} from 'react'\nimport {Grid,TextField, Button,DialogContainer,SelectField,Snackbar, Cell} from 'react-md'\nimport axios from 'axios' \nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class Report extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            modules:[],\n            dialogVisible:false,\n            module:'',\n            link:'',\n            description:'',\n            module_short_name:'',\n            created_by : payload.userId\n        }\n    }\n    async componentDidMount() {\n        \n        try{\n            await axios.get(`/api/modules`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    onChangeLink= (evt) => {\n        this.setState({link:evt})\n    }\n\n    onChangeModule= (evt) => {\n        this.setState({module:evt})\n    }\n\n    onChangeModuleShort =  (evt) => {\n        this.setState({module_short_name:evt})\n    }\n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    setUpdate  = (id) => {\n        alert(id)\n    }\n\n    setDelete = (id) => {\n        alert(id)\n    }\n\n    save  = async() => {\n        const body = {\n            module : this.state.module,\n            module_short_name : this.state.module_short_name,\n            link : this.state.link,\n            directory_path : this.state.link,\n            description : this.state.description,\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/module`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            module : '',\n                            link : '',\n                            description:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n        const columns = [{label:'No',width:'2%'},{label:'Module',width:'8%'},{label:'Link',width:'10%'},{label:'Description',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n       ;\n        return(\n            <div>\n                 <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Report\n                    </h2>\n                    <Cell size={4}>\n                        <Button raised primary iconClassName=\"fa fa-plus-circle \" onClick={this.showForm} >Add</Button>\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.module}</td>\n                                    <td>{item.link}</td>\n                                    <td>{item.description}</td>\n                                   \n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogVisible}\n                onHide={() => !this.state.dialogVisible}\n                actions={actions}\n                title=\"Manage Module\"\n                >\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Module\"\n                    placeholder=\"Module\"\n                    value={this.state.module}\n                    onChange={this.onChangeModule}\n                />\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Short Name\"\n                    placeholder=\"Short Name\"\n                    value={this.state.module_short_name}\n                    onChange={this.onChangeModuleShort}\n                />\n                <TextField\n                    style={{width:'400px'}}\n                    id=\"simple-action-dialog-field\"\n                    label=\"Link\"\n                    placeholder=\"Link, Start with '/' \"\n                    value={this.state.link}\n                    onChange={this.onChangeLink}\n                />\n                 <TextField\n                    rows={2}\n                    id=\"simple-action-dialog-field\"\n                    label=\"Description\"\n                    placeholder=\"Description\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                />\n            </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}","import Report from './Report'\n\nexport default {\n    routeProps: {\n        path: '/clients/report',\n        exact: true,\n        component: Report,\n    },\n    name: 'Report',\n}","import React, { Component, Fragment } from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport qs from 'query-string'\nimport { Grid, Cell } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport Clients from '../menus/clients/Clients'\nimport Status from '../menus/status/Status'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Container extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            role_id: '',\n            _id: '',\n            role: '',\n            data: [],\n            announcements: [],\n            contain: '',\n        }\n\n\n\n    }\n\n    async componentDidMount() {\n\n        this.setState({ contain: 'form' })\n\n\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/announcements-by-module-id/${module_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (dateformat(item.star_date, 'yyyy-mm-dd') <= dateformat(new Date(), 'yyyy-mm-dd') && dateformat(item.end_date, 'yyyy-mm-dd') >= dateformat(new Date(), 'yyyy-mm-dd')) {\n                                var obj = item\n                                dt.push(obj)\n                            }\n\n                            return false\n                        })\n                        this.setState({ announcements: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n    }\n\n    render() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var list_contain = parsed.tab_name !== undefined ? parsed.tab_name : 'client'\n        var tabList = [\n            { color: 'pink', action: 'client', icon: 'fa fa-ticket', tooltip: 'BPR/Clients' },\n            { color: 'lightblue', action: 'status', icon: 'fa fa-ticket', tooltip: 'Status' },\n        ]\n\n        return (\n            <div>\n                {(() => {\n                    if (payload.userId === null) {\n                        return (<Redirect to={'/'} />)\n                    } else {\n                        return (\n                            <Grid className=\"grid-example\">\n                                <h2 className=\"md-cell md-cell--12\">\n                                    Hi, {payload.username}  <p>{this.state.role}</p>\n                                </h2>\n                                <Cell size={12}>\n                                    {this.state.announcements.length > 0 ? (\n                                        <Fragment>\n                                            <h4>Announcements</h4>\n                                            {this.state.announcements.map((item, i) => (\n                                                <div className=\"notification is-warning\">\n                                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                </div>\n                                            ))}\n                                        </Fragment>\n                                    ) : ''}\n                                </Cell>\n                                <Cell size={12}>\n                                    <div className=\"tabs\" style={{ border: 'none' }}>\n                                        <ul>\n                                            {tabList.map((item, i) => {\n                                                if (list_contain === item.action) {\n                                                    return (<li\n                                                        style={{ borderBottom: 'solid 3px ' + item.color, backgroundColor: '#c7d6eb', padding: '10px 5px 0 0 ', borderTopRightRadius: '8px', borderTopLeftRadius: '8px' }} >\n                                                        <Link to={'/clients?tab_name=' + item.action} >{item.tooltip} </Link>\n                                                        {item.badge !== undefined && item.badge !== null ? (\n                                                            <span className={\"tag \"} style={{ backgroundColor: item.color, color: 'white' }}>{item.badge}</span>\n                                                        ) : ''}\n\n                                                    </li>\n                                                    )\n                                                } else {\n                                                    return (<li\n                                                        style={{ borderBottom: 'solid 3px ' + item.color, padding: '10px 5px 0 0 ', }} >\n                                                        <Link to={'/clients?tab_name=' + item.action} >{item.tooltip} </Link>\n                                                        {item.badge !== undefined && item.badge !== null ? (\n                                                            <span className={\"tag \"} style={{ backgroundColor: item.color, color: 'white' }}>{item.badge}</span>\n                                                        ) : ''}\n                                                    </li>\n                                                    )\n                                                }\n\n                                            })}\n\n\n                                        </ul>\n                                    </div>\n                                </Cell>\n\n                                <Cell size={12}>\n                                    {(() => {\n                                        switch (list_contain) {\n                                            case 'client': return <Clients role={this.props.role} role_id={this.state.role_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'status': return <Status role={this.props.role} role_id={this.state.role_id} showDetail={(id) => this.showDetail(id)} />\n\n                                            default: {\n                                                return <Clients role={this.props.role} role_id={this.state.role_id} showDetail={(id) => this.showDetail(id)} />\n                                            }\n                                        }\n\n\n                                    })()}\n                                    {(() => {\n                                        if (list_contain === '') {\n\n                                        }\n                                    })()}\n                                </Cell>\n                            </Grid>\n                        )\n                    }\n                })()}\n\n            </div>\n        )\n    }\n}","import Container from './Container'\n\nexport default {\n    routeProps: {\n        path: '/clients',\n        exact: true,\n        component: Container,\n    },\n    name: 'Container',\n}","import Preferences from '../../../components/Preferences'\n\nexport default {\n    routeProps: {\n        path: '/clients/setting/preferences',\n        exact: true,\n        component: Preferences,\n    },\n    name: 'Preferences',\n}","import Profile from '../../../components/Profile'\n\nexport default {\n    routeProps: {\n        path: '/clients/setting/profile',\n        exact: true,\n        component: Profile,\n    },\n    name: 'Profile',\n}","import ChangePassword from '../../../components/ChangePassword'\n\nexport default {\n    routeProps: {\n        path: '/clients/setting/changepwd',\n        exact: true,\n        component: ChangePassword,\n    },\n    name: 'ChangePassword',\n}","import React,{Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport {Grid,TextField,Button,Toolbar,SelectField,Card, Cell,DatePicker,MenuButton,Chip} from 'react-md'\nimport axios from 'axios' \nimport $ from 'jquery/dist/jquery.js'\nimport qs from 'query-string'\nimport dateformat from 'dateformat'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\n\n\nexport default class Form  extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            editor:true,\n            status:[],\n            structures:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            title:'',\n            status_id:'',\n            client_name:'',\n            client_code:'',\n            phone_number:'',\n            email:'',\n            address :'',\n            created_by : payload.userId,\n            roles:[],\n        }\n    }\n    async componentDidMount() {\n\n        var parsed = qs.parse(window.location.search)\n        this.setState({_id : parsed.id})\n\n        \n        try{\n            await axios.get(`/api/client-status`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    \n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:<b style={{color:item.label_color}}>{item.status}</b>,\n                            value:item._id\n                        }\n\n                        dt[i] = obj\n                        \n                    })\n                    this.setState({status:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        if (this.state._id !=='' ) {\n            try{\n                await axios.get(`/api/client/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            this.setState({\n                                _id: item._id,\n                                client_name : item.client_name,\n                                client_code : item.client_code,\n                                address  : item.address,\n                                join_date : dateformat(item.join_date,'yyyy-mm-dd'),\n                                phone_number : item.phone_number,\n                                email : item.email,\n                                status_id : item.status_id,\n                            })\n                            return false\n                        })\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    onChangeClientCode = async (evt) => {\n        this.setState({client_code:evt})\n\n    }\n\n    onChangeClientName = async (evt) => {\n        this.setState({client_name:evt})\n\n    }\n\n    onChangeAddress= async (evt) => {\n        this.setState({address:evt})\n\n    }\n\n    onChangePhoneNumber = async (evt) => {\n        this.setState({phone_number:evt})\n\n    }\n\n    onChangeEmail = async (evt) => {\n        this.setState({email:evt})\n\n    }\n\n    onChangeStatusId= (evt) => {\n        this.setState({status_id:evt})\n    }\n\n    onChangeJoinDate  = (evt) => {\n        this.setState({join_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    \n\n   \n    save  = async() => {\n        const body = {\n            client_name : this.state.client_name,\n            client_code : this.state.client_code,\n            address  : this.state.address,\n            join_date : this.state.join_date,\n            phone_number : this.state.phone_number,\n            email : this.state.email,\n            status_id : this.state.status_id,\n\n        }\n\n        if (this.state._id === '' || this.state._id === null || this.state._id === undefined) {\n           \n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/client`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        \n                        this.setState({\n                            client_name : '',\n                            client_code :'',\n                            address  : '',\n                            join_date : '',\n                            phone_number : '',\n                            email : '',\n                            status_id : '',\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/client/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.setState({\n                            client_name : '',\n                            client_code :'',\n                            address  : '',\n                            join_date : '',\n                            phone_number : '',\n                            email : '',\n                            status_id : '',\n                        })\n                        window.history.go(-1)\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n       \n        return(\n            <div>\n                <Grid>\n                <Toolbar \n                        title={<b>Form BPR/Client</b>}\n                        nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                 <Grid className=\"grid-example\">\n                    \n                    <Cell size={12}>\n                        <Card style={{padding:'2.5vw'}}>\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"BPR/Client Code\"\n                                placeholder=\"BPR/Client Code\"\n                                value={this.state.client_code}\n                                onChange={this.onChangeClientCode}\n                            />\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"BPR/Client Name\"\n                                placeholder=\"BPR/Client Name\"\n                                value={this.state.client_name}\n                                onChange={this.onChangeClientName}\n                            />\n                            <TextField\n                                rows={3}\n                                id=\"simple-action-dialog-field\"\n                                label=\"Adress\"\n                                placeholder=\"Address\"\n                                value={this.state.address}\n                                onChange={this.onChangeAddress}\n                            />\n                            <TextField\n                             \n                                id=\"simple-action-dialog-field\"\n                                label=\"Phone Number\"\n                                placeholder=\"Phone Number\"\n                                value={this.state.phone_number}\n                                onChange={this.onChangePhoneNumber}\n                            />\n                            <TextField\n                                \n                                id=\"simple-action-dialog-field\"\n                                label=\"Email\"\n                                placeholder=\"Email\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                            />\n                            <DatePicker\n                                id=\"appointment-date-landscape\"\n                                label=\"Join date\"\n                                className=\"md-cell\"\n                                displayMode=\"landscape\"\n                                value={this.state.join_date}\n                                onChange={this.onChangeJoinDate}\n                            />\n                            <SelectField\n                                  className=\"md-cell md-cell--4\"\n                                id=\"simple-action-dialog-field\"\n                                label=\"Status\"\n                                placeholder=\"Status\"\n                                value={this.state.status_id}\n                                menuItems={this.state.status}\n                                onChange={this.onChangeStatusId}\n                            />\n                            <hr />\n                            <Button raised primary onClick={this.save} >Submit</Button>\n                        </Card>\n                    </Cell>\n                </Grid>\n                \n            </div>\n           \n        )\n    }\n}\n\n","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/clients/form',\n        exact: true,\n        component: Form,\n    },\n    name: 'Form',\n}","import React,{Component, Fragment} from 'react'\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button, ListItem, List, Subheader, Divider, FontIcon,Card,Avatar} from 'react-md'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\n\nimport dateformat from 'dateformat'\nimport {Session} from 'bc-react-session'\nconst {payload} =Session.get()\n\nexport default class Notifications extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            _id:'',\n            avg_rating:0,\n            client_code:'',\n            client_name:'',\n            tab:'onprogress',\n            currentPage : 1,\n            displayPerPage : 25,\n            totalShowed : 0,\n            isLoading : true\n        }\n    \n        this.socket = io(socket_address) \n        \n            this.socket.on('RECEIVE_NOTIFICATION', (data) => {\n                if (data.to_user_id === payload.userId) {\n                    this.componentDidMount()\n                }\n                \n            })\n            this.socket.on('READ_NOTIFICATION', (data) => {\n                this.componentDidMount()\n            })\n\n    }\n    \n\n\n    componentDidMount= async  () => {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        \n\n        try{\n            await  axios.get(`/api/notifications-per-user-total/${payload.userId}?displayPerPage=${0}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({total_data : response.data.data[0].total})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${this.state.displayPerPage}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data,isLoading:false})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n\n    }\n\n    readNotif = async (notif_id) => {\n        const body = {\n          is_read : 1\n        }\n         try{\n           axios.put(`/api/notification/${notif_id}`,body)\n           .then(response => {\n             if (response.data.status === 200) {\n   \n             }\n           })\n         }catch(e){\n           console.log(e)\n         }\n    }\n\n    loadMore = async() => {\n\n        const currentPage = this.state.currentPage+1\n        const displayPerPage = this.state.displayPerPage * currentPage\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${displayPerPage}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: currentPage,\n            totalShowed: displayPerPage\n        })\n    }\n    \n\n    render() \n    {\n       if (this.state.isLoading) {\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <div className=\"notification\">\n                        <p>Loading ... </p>\n                    </div>\n                </Cell>\n             </Grid>\n        )\n       }  else \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>All Notifications</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                </Cell>\n                <Cell size={12}>\n                    <Card style={{padding: '2.5vw',}}>\n                        <List className=\"md-cell \" style={{width:'100%',listStyle:'none'}}>\n                            <Subheader primaryText=\"Notifications\" />\n                            {this.state.data.map((item,i) => (\n                                <Link to={item.link} onClick={() => this.readNotif(item._id)} >\n                                    <ListItem\n                                        //  style={{backgroundColor: item.is_read === 0 ? '#cae7fa' : ''}}\n                                        leftAvatar={<Avatar src={item.avatar_url}/>}\n                                        primaryText={<Fragment> <b>{item.full_name !== '' &&  item.full_name !== null ? item.full_name : item.client_name}</b> &nbsp; {item.is_read === 0 ? <span className=\"tag \" style={{backgroundColor:'#cae7fa'}}><b>UNREAD</b></span>:''} </Fragment>}\n                                        secondaryText={<Fragment>  {item.notification} &nbsp; <p>{dateformat(item.created_at,'dd mmm yyyy, HH:MM' )}</p> </Fragment> }\n                                        threeLines\n                                    />\n                                </Link>\n                            ))}\n                            \n                                                       \n                        </List>\n                        { this.state.totalShowed < this.state.total_data ? (\n                            <a onClick={this.loadMore}><h4 >Load More ... </h4></a>\n                        ):'' }\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import clients from './clients'\nimport status from './status'\nimport report from './report'\nimport home from '../home'\nimport preferences from './preferences'\nimport profile from './profile'\nimport changepwd from './changepwd'\nimport form from './clients/form'\nimport notifications from './notifications'\n\nexport default [\n    clients,status,report,home, preferences,profile,changepwd,form, notifications\n]","import React from 'react'\nimport Notifications from './Notifications'\n\nexport default {\n    routeProps: {\n        path: '/clients/notifications',\n        exact: true,\n        component: Notifications,\n    },\n    name: 'Notifications',\n}","import React, { Component } from 'react'\nimport { Link, Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { Button, Drawer, Toolbar } from 'react-md'\nimport { UserDropdownMenu, Notifications, ApplicationMenu, NavLink } from '../../../components'\nimport axios from 'axios'\nimport menus from '../menus'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\nvar inboxListItems = []\n\nexport default class Home extends Component {\n  state = { visible: false, position: 'left', module_title: this.props.module_title, avatar_url: '' }\n\n  async componentDidMount() {\n    window.document.title = 'Clients Management PT MSO'\n    var moduleName = window.location.href.split('/')\n    try {\n      await axios.get(`/api/menu-by-module-link/${moduleName[3]}`)\n        .then(response => {\n          var dt = []\n          response.data.data.map((item, i) => {\n            var obj = {\n              label: item.menu,\n              to: item.link,\n              icon: 'list',\n            }\n            dt[i] = (<NavLink key={i} label={item.menu} to={item.link} icon={item.icon} />)\n          })\n          inboxListItems = dt\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n    try {\n      await axios.get(`/api/user/${payload.userId}`)\n        .then(response => {\n          if (response.data.status === 200) {\n            response.data.data.map((item, i) => {\n              this.setState({\n                avatar_url: item.avatar_url\n              })\n            })\n\n          }\n\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n\n    var module_id = ''\n    var moduleName = window.location.href.split('/')\n    try {\n      await axios.get(`/api/module-by-link/${moduleName[3]}`)\n        .then(response => {\n\n          response.data.data.map((item, i) => {\n            module_id = item._id\n            return false\n          })\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n    try {\n      await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n        .then(response => {\n\n          if (response.data.status === 200) {\n            this.setState({ role: response.data.data[0].role })\n          }\n\n        })\n    } catch (error) {\n      console.log(error)\n    }\n\n    try {\n      await axios.get(`/api/ccs-notifications-per-user/${payload.userId}`)\n        .then(response => {\n\n          if (response.data.status === 200) {\n            this.setState({ notifications: response.data.data })\n          }\n\n        })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  openDrawerLeft = () => {\n    this.setState({ visible: true, position: 'left' });\n  };\n\n\n  closeDrawer = () => {\n    this.setState({ visible: false });\n  };\n\n  handleVisibility = (visible) => {\n    this.setState({ visible });\n  };\n\n  render() {\n    \n\n    if (payload.userId === '' || payload.userId === null || payload.userId === undefined) {\n      return (\n        <Redirect to='/' />\n      )\n    } else\n      return (\n        <Router>\n          <div style={{ marginTop: '70px' }}>\n            <Toolbar\n              fixed\n              colored\n              nav={<a href={'/'} style={{ color: '#fff' }} ><Button icon  >home</Button></a>}\n              title={this.state.module_title}\n              style={{ backgroundColor: this.props.bg_color }}\n              actions={[(<ApplicationMenu />), (<Notifications />), (<UserDropdownMenu avatar={this.state.avatar_url} />)]}\n            />\n            <div className=\"content\">\n              <Switch>\n                {menus.map((_, i) => (\n                  <Route path={_.routeProps.path} exact={_.routeProps.exact} key={_.name} component={() => <_.routeProps.component role={this.state.role} />} />\n                ))}\n              </Switch>\n            </div>\n            {/* <Drawer }\n          id=\"simple-drawer-example\"\n          type={Drawer.DrawerTypes.TEMPORARY}\n          visible={visible}\n          position={position}\n          onVisibilityChange={this.handleVisibility}\n          navItems={inboxListItems}\n          header={(\n            <Toolbar\n             \n              nav={isLeft ? (<Button icon onClick={() => window.location.href='/'} >home</Button> ) : closeBtn}\n              actions={isLeft ? closeBtn : null}\n              className=\"md-divider-border md-divider-border--bottom\"\n            />\n          )}\n        { /> */}\n          </div>\n        </Router>\n      );\n  }\n} \n","import React,{Component} from 'react'\nimport Home from './home/Home'\n\nclass Clients extends Component{\n    render() {\n        return(\n            <Home module_title='Clients Mng' bg_color='#03a9f4'/>\n        )\n    }\n} \n\nexport default {\n    routeProps: {\n        path: '/clients',\n        exact: true,\n        component: Clients,\n    },\n    name: 'Clients',\n}","import React,{Component} from 'react'\nimport {MenuButton,ListItem} from 'react-md'\n\nexport default class KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                <ListItem key={1}  primaryText='Edit' rightIcon ={(<i className='fa fa-pencil' />)} style={{backgroundColor:'lightblue'}} onClick={ () => \n                     this.setUpdate(this.props.id)} /> , \n                <ListItem key={2} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> \n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}","import React, { Component, Fragment } from 'react'\nimport { Grid, TextField, Button, DialogContainer, SelectField, Snackbar, Cell,SelectionControl, SelectionControlGroup, MenuButton } from 'react-md'\nimport axios from 'axios'\nimport KebabMenu from '../../components/KebabMenu'\nimport dateformat from 'dateformat'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { insertLog } from '../../../../log/InsertLog'\nimport ReactToPrint from 'react-to-print'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport { Session } from 'bc-react-session'\nconst { payload } = Session.get()\n\nvar roles_by_module_id = {}\n\nexport default class Menus extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            data: [],\n            roles: [],\n            menus: [],\n            role_ids: [],\n            modules: [],\n            module_id: '',\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            is_active : false, \n            menu: '',\n            link: '',\n            icon: '',\n            parent_menu: '',\n            created_by: payload.userId,\n\n            role_create: false,\n            role_read: false,\n            role_update: false,\n            role_delete: false,\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            await axios.get(`/api/menus`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['No'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Menu'] = item.menu\n                            obj['Module'] = item.module\n                            obj['Link'] = item.link\n                            obj['Role Control'] = <input type='checkbox' />\n                            dt[i] = obj\n                        })\n                        this.setState({ modules: response.data.data, dataToExport: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/modules`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((module, i) => {\n                            var obj = {\n                                label: module.module,\n                                value: module._id\n                            }\n                            dt[i] = obj\n                        })\n                        this.setState({ modules: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/menus/`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        this.state.data.map(async (item, i) => {\n            try {\n                await axios.get(`/api/role-by-module-id/${item.module_id}`)\n                    .then((response) => {\n                        if (response.data.status === 200) {\n                            item.roles = response.data.data\n\n                            response.data.data.map((role, i_role) => {\n\n                            })\n\n\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n\n        })\n\n        console.log(this.state.data)\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/control?tab_name=menu', role_id: this.props.role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role_controls: response.data.data })\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({\n                                    role_read: true\n                                })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({\n                                    role_create: true\n                                })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({\n                                    role_update: true\n                                })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({\n                                    role_delete: true\n                                })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        insertLog('Access Menu Page', this.props.module_id)\n\n\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    showForm = () => {\n        this.setState({\n            _id: '',\n            menu: '',\n            link: '',\n            icon: '',\n            module_id: '',\n            parent_menu: '',\n            is_active : false,\n            role_ids: [],\n            roles: [],\n            dialogVisible: true\n        })\n    }\n\n    search = async (evt) => {\n        try {\n            await axios.get(`/api/menus?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n\n    setUpdate = async (id) => {\n        this.setState({ _id: id, role_ids: [] })\n        try {\n            await axios.get(`/api/menu/${id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((menu, i) => {\n                            this.setState({\n                                menu: menu.menu,\n                                link: menu.link,\n                                icon: menu.icon,\n                                is_active: menu.is_active,\n                                module_id: menu.module_id,\n                                parent_menu: menu.parent_menu,\n                                dialogVisible: true\n                            })\n                        })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/role-by-module-id/${this.state.module_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n\n                        var dt_role_ctrl = []\n                        response.data.data.map(async (role, i) => {\n                            var role_id = role._id\n                            var obj = {\n                                label: role.role,\n                                value: role._id\n                            }\n                            dt[i] = obj\n                            var type_control = ''\n                            var obj_role_ctrl = new Object()\n                            obj_role_ctrl.role_id = role_id\n                            try {\n                                await axios.get(`/api/role-control-by-menu-role-id/${id}/${role._id}`)\n                                    .then(response_role => {\n                                        if (response_role.data.status === 200) {\n\n                                            response_role.data.data.map((role_control, i) => {\n                                                type_control += (role_control.type_control) + ','\n                                            })\n\n                                        }\n                                    })\n                            } catch (e) {\n                                console.log(e)\n                            }\n                            obj_role_ctrl.value = type_control\n                            dt_role_ctrl[i] = obj_role_ctrl\n\n                        })\n                        this.setState({ roles: dt })\n                        this.setState({ role_ids: dt_role_ctrl })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/menu-by-module-id/${this.state.module_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((role, i) => {\n                            var obj = {\n                                label: role.menu,\n                                value: role._id\n                            }\n                            dt[i] = obj\n                        })\n                        this.setState({ menus: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        console.log(this.state.role_ids)\n    }\n\n    setDelete = async (id) => {\n        this.setState({ _id: id, dialogDeleteVisible: true })\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/menu/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.notify('SUCCESS', 'Menu Deleted')\n                        this.componentDidMount()\n                        insertLog('Delete  Menu ID #' + this.state._id, this.props.module_id)\n                        this.setState({\n                            dialogDeleteVisible: !this.state.dialogDeleteVisible,\n                            _id: '',\n\n                        })\n\n                    } else {\n                        this.notify('ERROR', 'Failed  Deleting Menu')\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n\n    onChangeModuleId = async (evt) => {\n        this.setState({ module_id: evt })\n        try {\n            await axios.get(`/api/role-by-module-id/${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n\n                        var dt_role_ctrl = []\n                        response.data.data.map(async (role, i) => {\n                            var role_id = role._id\n                            var obj = {\n                                label: role.role,\n                                value: role._id\n                            }\n                            dt[i] = obj\n                            var type_control = ''\n                            var obj_role_ctrl = new Object()\n                            obj_role_ctrl.role_id = role_id\n                            try {\n                                await axios.get(`/api/role-control-by-menu-role-id/${evt}/${role._id}`)\n                                    .then(response_role => {\n                                        if (response_role.data.status === 200) {\n\n                                            response_role.data.data.map((role_control, i) => {\n                                                type_control += (role_control.type_control) + ','\n                                            })\n\n                                        }\n                                    })\n                            } catch (e) {\n                                console.log(e)\n                            }\n                            obj_role_ctrl.value = type_control\n                            dt_role_ctrl[i] = obj_role_ctrl\n\n                        })\n                        this.setState({ roles: dt })\n                        this.setState({ role_ids: dt_role_ctrl })\n                    }\n                })\n\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/menu-by-module-id/${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((role, i) => {\n                            var obj = {\n                                label: role.menu,\n                                value: role._id\n                            }\n                            dt[i] = obj\n                        })\n                        this.setState({ menus: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }\n\n    onChangeMenu = (val) => {\n        this.setState({ menu: val })\n    }\n    onChangeLink = (val) => {\n        this.setState({ link: val })\n    }\n    onChangeIcon = (val) => {\n        this.setState({ icon: val })\n    }\n    onChangeParentMenu = (val) => {\n        this.setState({ parent_menu: val })\n    }\n\n    onChangeIsActive = (val) => {\n        this.setState({ is_active: val })\n    }\n\n    onChangeRoleControl = (val, role_id) => {\n\n        if (val !== '') {\n            var r = this.state.role_ids\n            var index = r.map(function (e) { return e.role_id; }).indexOf(role_id);\n\n            if (r[index] !== undefined) {\n                r[index].value = val\n            }\n            this.setState({ role_ids: r })\n        }\n        console.log(this.state.role_ids[role_id])\n\n        // \n        // \n    }\n\n    save = async () => {\n        const body = {\n            menu: this.state.menu,\n            link: this.state.link,\n            icon: this.state.icon,\n            is_active: this.state.is_active,\n            module_id: this.state.module_id,\n            parent_menu: this.state.parent_menu,\n\n            role_ids: this.state.role_ids\n        }\n\n\n        if (this.state._id === '' || this.state._id === null || this.state._id === undefined) {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/menu`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.notify('SUCCESS', 'Menu Added')\n                            insertLog('Insert  Menu ', this.props.module_id)\n                            window.location.reload()\n\n                            this.setState({\n                                dialogVisible: false,\n                                _id: '',\n                                menu: '',\n                                link: '',\n                                icon: '',\n                                module_id: '',\n                                parent_menu: '',\n                                is_active: false,\n                                role_ids: [],\n                                roles: [],\n                            })\n\n                        } else {\n                            this.notify('ERROR', 'Failed')\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n                this.notify('ERROR', 'Failed')\n            }\n        } else {\n            body.updated_by = this.state.created_by\n            console.log(body)\n            try {\n                await axios.put(`/api/menu/${this.state._id}`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.notify('SUCCESS', 'Menu Updated')\n                            insertLog('Update  Menu ID #' + this.state._id, this.props.module_id)\n                            window.location.reload()\n\n                            this.setState({\n                                dialogVisible: false,\n                                _id: '',\n                                menu: '',\n                                link: '',\n                                icon: '',\n                                module_id: '',\n                                is_active: false,\n                                parent_menu: '',\n                                role_ids: [],\n                                roles: [],\n                            })\n\n                        } else {\n                            this.notify('ERROR', 'Failed')\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n                this.notify('ERROR', 'Failed')\n            }\n        }\n\n\n    }\n\n    loadRoleIdValue = (role_id) => {\n        var r = this.state.role_ids\n        var index = r.map(function (e) { return e.role_id; }).indexOf(role_id);\n        if (r[index] !== undefined) {\n            return (r[index]['value'])\n        } else {\n            return ''\n        }\n\n\n        //return r[index].value \n\n\n    }\n    exportXLS = () => {\n        //alert('XLS')\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        const fileName = `All Menus per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n        const ws = XLSX.utils.json_to_sheet(this.state.dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n    }\n\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' },\n        { label: 'Menu', width: '15%' },\n        { label: 'Module', width: '15%' },\n        { label: 'Link', width: '15%' },\n        { label: 'Role Controls' },\n        { label: 'is Active' },\n        { label: '', width: '3%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n        return (\n            <div >\n                {this.state.role_create ? (\n\n                    <Button style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '20px',\n                        float: 'bottom'\n                    }}\n                        onClick={this.showForm}\n                        secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                ) : ''}\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Menus\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{ alignItems: 'right' }}>\n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                            }, {\n                                primaryText: (<ReactToPrint\n                                    trigger={() => <p>PDF</p>}\n                                    content={() => this.componentRef}\n                                />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                                &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.data}\n                            />\n\n                        </div>\n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={4}>\n\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <td width={item.width} >{item.label}</td>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n\n                                <tr>\n                                    <td>{i + 1}</td>\n                                    <td><strong>{item.menu}</strong></td>\n                                    <td>{item.module}</td>\n                                    <td>{item.link}</td>\n                                    <td>\n                                        <LoadRoleControl menu_id={item._id} module_id={item.module_id} />\n                                    </td>\n                                    <td>{item.is_active === 1 ? <span style={{color:'green'}}>TRUE</span>  : <span style={{color:'grey'}}>FALSE</span> }</td>\n                                    <td>\n                                        {this.state.role_delete && this.state.role_update ? (\n                                            <KebabMenu id={item._id} setUpdate={(id) => this.setUpdate(id)}\n                                                setDelete={(id) => this.setDelete(id)} />\n                                        ) : '-'}\n                                    </td>\n                                </tr>\n\n                            )\n\n                            )}\n\n\n                        </tbody>\n                    </table>\n                    <DialogContainer\n                        width={'600px'}\n\n                        contentStyle={{ height: '70vh' }}\n                        id=\"simple-action-dialog\"\n                        visible={this.state.dialogVisible}\n                        onHide={() => !this.state.dialogVisible}\n                        actions={actions}\n                        title=\"Manage Menu\"\n                    >\n                        <TextField\n                            id=\"simple-action-dialog-field\"\n                            label=\"Menu\"\n                            placeholder=\"Menu\"\n                            value={this.state.menu}\n                            onChange={this.onChangeMenu}\n                        />\n                        <SelectField\n                            style={{ width: '400px' }}\n                            id=\"simple-action-dialog-field\"\n                            label=\"Module\"\n                            placeholder=\"Module\"\n                            value={this.state.module_id}\n                            menuItems={this.state.modules}\n                            onChange={this.onChangeModuleId}\n                        />\n                        <br /><br />\n                        <p>Roles</p>\n\n                        {this.state.roles.map((item, i) =>\n\n                            (\n                                <Fragment>\n                                    <span><b>{item.label}</b>\n\n                                        <SelectionControlGroup\n                                            inline\n                                            id={\"selection-control-group-radios\" + item.value}\n                                            name={\"role_control\" + item.value + \"[]\"}\n                                            type=\"checkbox\"\n                                            value={this.loadRoleIdValue(item.value)}\n                                            onChange={(val) => this.onChangeRoleControl(val, item.value)}\n                                            controls={[{\n                                                label: 'CREATE',\n                                                value: 'create'\n                                            }, {\n                                                label: 'READ',\n                                                value: 'read'\n                                            }, {\n                                                label: 'UPDATE',\n                                                value: 'update'\n                                            }, {\n                                                label: 'DELETE',\n                                                value: 'delete'\n                                            }]}\n                                        /></span>\n                                </Fragment>\n                            ))}\n\n                        <TextField\n                            id=\"simple-action-dialog-field\"\n                            label=\"Link\"\n                            placeholder=\"Link starts with '/' \"\n                            value={this.state.link}\n                            onChange={this.onChangeLink}\n                        />\n                        <TextField\n                            id=\"simple-action-dialog-field\"\n                            label=\"Icon\"\n                            placeholder=\"e.g. help OR home OR save etc\"\n                            value={this.state.icon}\n                            helpText=\"see on https://material.io/resources/icons\"\n                            onChange={this.onChangeIcon}\n                        />\n                        <SelectField\n                            style={{ width: '400px' }}\n                            id=\"simple-action-dialog-field\"\n                            label=\"Parent Menu\"\n                            placeholder=\"Parent Menu\"\n                            value={this.state.parent_menu}\n                            menuItems={this.state.menus}\n                            onChange={this.onChangeParentMenu}\n                        />\n                        <SelectionControl\n                            id=\"switch-lights\"\n                            type=\"switch\"\n                            label=\"is Active\"\n                            name=\"is_Active\"\n                            onChange={this.onChangeIsActive}\n                            defaultChecked = {this.state.is_active}\n                        />\n                    </DialogContainer>\n                    <DialogContainer\n                        width={'600px'}\n                        id=\"simple-action-dialog\"\n                        visible={this.state.dialogDeleteVisible}\n                        onHide={() => !this.state.dialogDeleteVisible}\n                        actions={action_delete}\n                        title=\"Confirmation\"\n                    >\n                        Are you sure delete this item?\n                    </DialogContainer>\n                    <Snackbar\n                        id=\"example-snackbar\"\n                        toasts={this.state.toasts}\n                        autohideTimeout={300}\n                    />\n                </Grid>\n\n            </div>\n\n        )\n    }\n}\n\nclass LoadRoleControl extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n        }\n    }\n    componentDidMount = async () => {\n        try {\n            await axios.get(`/api/role-control-by-menu-module-id/${this.props.menu_id}/${this.props.module_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    render() {\n        return (\n            <div>\n                {this.state.data.map((item, i) => (\n                    <div>\n\n                        {item.type_controls !== null ? (\n                            <div>\n                                <p>{item.role}:</p>\n                                <SelectionControlGroup\n                                    primary\n                                    inline\n                                    type=\"checkbox\"\n                                    value={item.type_controls.toString()}\n                                    controls={[{\n                                        label: 'CREATE',\n                                        value: 'create'\n                                    }, {\n                                        label: 'READ',\n                                        value: 'read'\n                                    }, {\n                                        label: 'UPDATE',\n                                        value: 'update'\n                                    }, {\n                                        label: 'DELETE',\n                                        value: 'delete'\n                                    }]}\n                                />\n                            </div>\n                        ) : ''}\n\n                    </div>\n                ))}\n            </div>\n        )\n    }\n}\n\n\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' },\n        { label: 'Menu', width: '15%' },\n        { label: 'Module', width: '15%' },\n        { label: 'Link', width: '15%' },\n        { label: 'Role Controls' },\n\n        ]\n\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <h4>All Menus</h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <td width={item.width} >{item.label}</td>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item, i) => (\n\n                                <tr>\n                                    <td>{i + 1}</td>\n                                    <td><strong>{item.menu}</strong></td>\n                                    <td>{item.module}</td>\n                                    <td>{item.link}</td>\n                                    <td>\n                                        <LoadRoleControl menu_id={item._id} module_id={item.module_id} />\n                                    </td>\n\n                                </tr>\n\n\n\n\n                            )\n\n                            )}\n\n\n                        </tbody>\n                    </table>\n\n                </Grid>\n            </div>\n\n        )\n    }\n}","import Menus from './Menus'\n\nexport default {\n    routeProps: {\n        path: '/control/menus',\n        exact: true,\n        component: Menus,\n    },\n    name: 'Menus',\n}","import React, { Component } from 'react'\nimport { Grid, TextField, Button, DialogContainer, Chip, FileUpload, Snackbar, Cell, MenuButton, ListItem } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport KebabMenu from '../../components/KebabMenu'\nimport ReactToPrint from 'react-to-print'\nimport { Session } from 'bc-react-session'\nimport { insertLog } from '../../../../log/InsertLog'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nconst { payload } = Session.get()\n\nvar dt = new FormData()\nvar data = new FormData()\nexport default class Modules extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            _id: '',\n            formdata: [],\n            data: [],\n            modules: [],\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            module: '',\n            link: '',\n            description: '',\n            module_short_name: '',\n            icon: '',\n            temp_avatar: '',\n            created_by: payload.userId,\n\n            role_create: false,\n            role_read: false,\n            role_update: false,\n            role_delete: false,\n\n        }\n    }\n    async componentDidMount() {\n\n        try {\n            await axios.get(`/api/modules`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['No'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Module'] = item.module\n                            obj['Description'] = item.description\n                            obj['Icon'] = <div dangerouslySetInnerHTML={{ __html: <img width={'35vw'} src={item.icon} /> }} />\n                            dt[i] = obj\n                        })\n                        this.setState({ data: response.data.data, dataToExport: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/control?tab_name=module', role_id: this.props.role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role_controls: response.data.data })\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({\n                                    role_read: true\n                                })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({\n                                    role_create: true\n                                })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({\n                                    role_update: true\n                                })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({\n                                    role_delete: true\n                                })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        insertLog('Access Module Page', this.props.module_id)\n\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({\n            _id: '',\n            module: '',\n            module_short_name: '',\n            link: '',\n            directory_path: '',\n            description: '',\n        })\n        this.setState({ dialogVisible: true })\n    }\n\n    onChangeLink = (evt) => {\n        this.setState({ link: evt })\n    }\n\n    onChangeModule = (evt) => {\n        this.setState({ module: evt })\n    }\n\n    onChangeModuleShort = (evt) => {\n        this.setState({ module_short_name: evt })\n    }\n\n    onChangeDescription = (evt) => {\n        this.setState({ description: evt })\n    }\n    search = async (evt) => {\n        try {\n            await axios.get(`/api/modules?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {}\n                            obj['No'] = i + 1\n                            obj['ID'] = item._id\n                            obj['Module'] = item.module\n                            obj['Description'] = item.description\n                            obj['Icon'] = <div dangerouslySetInnerHTML={{ __html: <img width={'35vw'} src={item.icon} /> }} />\n                            dt[i] = obj\n                        })\n                        this.setState({ data: response.data.data, dataToExport: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    setUpdate = async (id) => {\n\n        try {\n            await axios.get(`/api/module/${id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                name: item.icon\n                            }\n                            this.setState({\n                                _id: item._id,\n                                module: item.module,\n                                module_short_name: item.module_short_name,\n                                link: item.link,\n                                directory_path: item.link,\n                                description: item.description,\n                                icon: item.icon\n                            })\n                            return false\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        this.setState({ dialogVisible: true })\n    }\n\n    setDelete = (id) => {\n        this.setState({ _id: id, dialogDeleteVisible: true })\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/module/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogDeleteVisible: !this.state.dialogDeleteVisible,\n                            module: '',\n                            link: '',\n                            description: '',\n\n                        })\n\n                    } else {\n                        this.addToast(response.data.message)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    save = async (evt) => {\n        evt.preventDefault()\n        const body = {\n            module: this.state.module,\n            module_short_name: this.state.module_short_name,\n            link: this.state.link,\n            icon: this.state.icon,\n            directory_path: this.state.link,\n            description: this.state.description,\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/module`, body)\n                    .then(async response => {\n                        if (response.data.status === 200) {\n\n\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                module: '',\n                                link: '',\n                                description: '',\n                                icon: '',\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/module/${this.state._id}`, body)\n                    .then(async response => {\n                        if (response.data.status === 200) {\n\n\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                module: '',\n                                link: '',\n                                description: '',\n                                icon: '',\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    handleLoad = (uploadedFile, uploadedData) => {\n\n        this.setState({\n            icon: uploadedData,\n\n        })\n\n\n    }\n\n    deleteFile = (file) => {\n\n        this.setState({\n            icon: '',\n\n        })\n    }\n\n    exportXLS = () => {\n        //alert('XLS')\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        const fileName = `All Modules per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n        const ws = XLSX.utils.json_to_sheet(this.state.dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n    }\n\n\n    render() {\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Module', width: '8%' },\n            { label: 'Link', width: '10%' },\n            { label: 'Description', width: '35%' },\n            { label: 'Icon', width: '5%' },\n            { label: '', width: '2%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n        return (\n            <div >\n                {this.state.role_create ? (\n\n                    <Button style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '20px',\n                        float: 'bottom'\n                    }}\n                        onClick={this.showForm}\n                        secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                ) : ''}\n\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Modules\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{ alignItems: 'right' }}>\n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                            }, {\n                                primaryText: (<ReactToPrint\n                                    trigger={() => <p>PDF</p>}\n                                    content={() => this.componentRef}\n                                />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                            &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.data}\n                            />\n\n                        </div>\n                    </Cell>\n                </Grid>\n\n                <Grid>\n                    <Cell size={4}>\n\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{i + 1}</td>\n                                    <td>{item.module}</td>\n                                    <td>{item.link}</td>\n                                    <td>{item.description}</td>\n                                    <td><img width={'35vw'} src={item.icon} /></td>\n                                    <td>\n                                        {this.state.role_delete && this.state.role_update ? (\n                                            <KebabMenu id={item._id} setUpdate={(id) => this.setUpdate(id)}\n                                                setDelete={(id) => this.setDelete(id)} />\n                                        ) : '-'}\n                                    </td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={actions}\n                    title=\"Manage Module\"\n                >\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Module\"\n                        placeholder=\"Module\"\n                        value={this.state.module}\n                        onChange={this.onChangeModule}\n                    />\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Short Name\"\n                        placeholder=\"Short Name\"\n                        value={this.state.module_short_name}\n                        onChange={this.onChangeModuleShort}\n                    />\n                    <TextField\n                        style={{ width: '400px' }}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Link\"\n                        placeholder=\"Link, Start with '/' \"\n                        value={this.state.link}\n                        onChange={this.onChangeLink}\n                    />\n                    <TextField\n                        rows={2}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Description\"\n                        placeholder=\"Description\"\n                        value={this.state.description}\n                        onChange={this.onChangeDescription}\n                    />\n                    <br />\n                    {this.state.icon !== '' ? (\n                        <div>\n                            <img src={this.state.temp_avatar !== '' ? this.state.temp_avatar : this.state.icon} width='100vw' />\n                            <br />\n                            <Chip className=\"state-chip\" label={'Remove'} removable onClick={() => this.deleteFile(this.state.icon)} />\n                            <br />\n                            <br />\n\n                        </div>\n\n\n                    ) : (\n                            <div>\n                                {this.state.icon !== '' ?\n                                    (<Chip className=\"state-chip\" label={'Remove'} removable onClick={() => this.deleteFile(this.state.icon)} />)\n                                    : ''\n                                }\n                                <br />\n                                <br />\n                                <FileUpload label=\"Select Icon\" id=\"a-file-upload\"\n                                    accept=\"image/*\" name=\"images\"\n                                    onLoad={this.handleLoad}\n                                    style={{ backgroundColor: '#359ce6' }} />\n                            </div>\n\n                        )}\n\n                </DialogContainer>\n\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogDeleteVisible}\n                    onHide={() => !this.state.dialogDeleteVisible}\n                    actions={action_delete}\n                    title=\"Confirmation\"\n                >\n                    Are you sure delete this item?\n            </DialogContainer>\n                <Snackbar\n                    id=\"example-snackbar\"\n                    toasts={this.state.toasts}\n                    autohideTimeout={300}\n                />\n            </div>\n\n        )\n    }\n}\n\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Module', width: '8%' },\n            { label: 'Link', width: '10%' },\n            { label: 'Description', width: '35%' },\n            { label: 'Icon', width: '5%' },\n        ]\n\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <h4>All Modules</h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{i + 1}</td>\n                                    <td>{item.module}</td>\n                                    <td>{item.link}</td>\n                                    <td>{item.description}</td>\n                                    <td><img width={'35vw'} src={item.icon} /></td>\n\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n\n                </Grid>\n            </div>\n\n        )\n    }\n}","import Modules from './Modules'\n\nexport default {\n    routeProps: {\n        path: '/control/modules',\n        exact: true,\n        component: Modules,\n    },\n    name: 'Modules',\n}","import React, { Component } from 'react'\nimport { Grid, TextField, Button, DialogContainer, SelectField, Snackbar, Cell } from 'react-md'\nimport axios from 'axios'\nimport KebabMenu from '../../components/KebabMenu'\nimport ReactToPrint from 'react-to-print'\nimport { insertLog } from '../../../../log/InsertLog'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\n\n\nexport default class Roles extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            _id: '',\n            data: [],\n            modules: [],\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            role: '',\n            module_id: '',\n            description: '',\n            created_by: payload.userId,\n\n            role_create: false,\n            role_read: false,\n            role_update: false,\n            role_delete: false,\n\n            currentPage: 1,\n            displayPerPage: 20,\n\n        }\n\n        this.tableData = React.createRef();\n    }\n    async componentDidMount() {\n        try {\n            await axios.get(`/api/modules`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        var obj = {\n                            label: 'All Modules',\n                            value: 'all'\n                        }\n\n                        dt[0] = obj\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.module,\n                                value: item._id\n                            }\n\n                            dt[i + 1] = obj\n\n                        })\n                        this.setState({ modules: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n        try {\n            await axios.get(`/api/roles`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/control?tab_name=role', role_id: this.props.role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role_controls: response.data.data })\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({\n                                    role_read: true\n                                })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({\n                                    role_create: true\n                                })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({\n                                    role_update: true\n                                })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({\n                                    role_delete: true\n                                })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        console.log(this.state.role_create)\n        console.log(this.state.role_read)\n        console.log(this.state.role_update)\n        console.log(this.state.role_delete)\n\n\n        insertLog('Access Roles Page', this.props.module_id)\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({ dialogVisible: true })\n    }\n\n    onChangeModuleId = (evt) => {\n        this.setState({ module_id: evt })\n    }\n\n    onChangeRole = (evt) => {\n        this.setState({ role: evt })\n    }\n\n    onChangeDescription = (evt) => {\n        this.setState({ description: evt })\n    }\n\n    search = async (evt) => {\n        try {\n            await axios.get(`/api/roles?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    setUpdate = async (id) => {\n\n        try {\n            await axios.get(`/api/role/${id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        response.data.data.map((item, i) => {\n                            this.setState({\n                                _id: item._id,\n                                role: item.role,\n                                description: item.description,\n                                module_id: item.module_id,\n                            })\n                            return false\n                        })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        this.setState({ dialogVisible: true })\n    }\n\n    setDelete = (id) => {\n        this.setState({ _id: id, dialogDeleteVisible: true })\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/role/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        insertLog('Delete Roles ID #' + this.state._id, this.props.module_id)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogDeleteVisible: !this.state.dialogDeleteVisible,\n                            role: '',\n                            description: '',\n                            module_id: '',\n                            _id: '',\n                        })\n\n                    } else {\n                        this.addToast(response.data.message)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    save = async () => {\n        const body = {\n            role: this.state.role,\n            module_id: this.state.module_id,\n            description: this.state.description,\n        }\n\n        console.log(body)\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/role`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            insertLog('Insert Role ', this.props.module_id)\n                            this.addToast(response.data.message)\n\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                role: '',\n                                description: '',\n                                module_id: ''\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/role/${this.state._id}`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            insertLog('Update Role ID #' + this.state._id, this.props.module_id)\n                            this.addToast(response.data.message)\n\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                role: '',\n                                description: '',\n                                module_id: ''\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.data.length / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.data.length / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        window.scrollTo(0, this.tableData.current.offsetTop)\n\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' }, { label: 'Role', width: '8%' }, { label: 'Role for Module', width: '10%' }, { label: 'Description', width: '35%' }, { label: '', width: '2%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.data.length / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        return (\n            <div>\n                {this.state.role_create ? (\n                    <Button style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '20px',\n                        float: 'bottom'\n                    }}\n                        onClick={this.showForm}\n                        secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                ) : ''}\n\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Roles\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{ alignItems: 'right' }}>\n                        <ReactToPrint\n                            trigger={() => <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                            </button>}\n                            content={() => this.componentRef}\n                        />\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.data}\n                            />\n\n                        </div>\n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={4}>\n\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\" ref={this.tableData}  >\n\n                    <table id=\"tableData\" className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n                                (i <= limitTop && i >= limitBottom) ? (\n                                    <tr key={i}>\n                                        <td>{i + 1}</td>\n                                        <td>{item.role}</td>\n                                        <td>{item.module}</td>\n                                        <td>{item.description}</td>\n                                        <td>\n                                            {this.state.role_delete && this.state.role_update ? (\n                                                <KebabMenu id={item._id} setUpdate={(id) => this.setUpdate(id)}\n                                                    setDelete={(id) => this.setDelete(id)} />\n                                            ) : '-'}\n                                        </td>\n\n                                    </tr>\n                                ) : ''\n                            ))}\n                        </tbody>\n                    </table>\n                    {pages.length > 0 ? (\n                        <div className=\"container\">\n                            <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                            <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                            {pages.map((page) => (\n                                this.isActive(page) ? (\n                                    <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                ) : (\n                                        <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    )\n\n\n                            ))}\n                            <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                            <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                        </div>\n\n                    ) : ''}\n\n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={actions}\n                    title=\"Manage Role\"\n                >\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Role\"\n                        placeholder=\"Role\"\n                        value={this.state.role}\n                        onChange={this.onChangeRole}\n                    />\n                    <SelectField\n                        style={{ width: '400px' }}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Module\"\n                        placeholder=\"Module\"\n                        value={this.state.module_id}\n                        menuItems={this.state.modules}\n                        onChange={this.onChangeModuleId}\n                    />\n                    <TextField\n                        rows={2}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Description\"\n                        placeholder=\"Description\"\n                        value={this.state.description}\n                        onChange={this.onChangeDescription}\n                    />\n                </DialogContainer>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogDeleteVisible}\n                    onHide={() => !this.state.dialogDeleteVisible}\n                    actions={action_delete}\n                    title=\"Confirmation\"\n                >\n                    Are you sure delete this item?\n            </DialogContainer>\n                <Snackbar\n                    id=\"example-snackbar\"\n                    toasts={this.state.toasts}\n                    autohideTimeout={300}\n                />\n            </div>\n\n        )\n    }\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' }, { label: 'Role', width: '8%' }, { label: 'Role for Module', width: '10%' }, { label: 'Description', width: '35%' }]\n\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <h4>All Roles</h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{i + 1}</td>\n                                    <td>{item.role}</td>\n                                    <td>{item.module}</td>\n                                    <td>{item.description}</td>\n\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n            </div>\n\n        )\n    }\n}","import Roles from './Roles'\n\nexport default {\n    routeProps: {\n        path: '/control/roles',\n        exact: true,\n        component: Roles,\n    },\n    name: 'Roles',\n}","import React,{Component, Fragment} from 'react'\nimport {Grid,Chip,TextField, SelectionControlGroup,Button,DialogContainer,SelectField,Snackbar,Cell,Avatar, Autocomplete, FileUpload, SelectionControl} from 'react-md'\nimport axios from 'axios' \nimport KebabMenu from '../../components/KebabMenu'\nimport ReactToPrint from 'react-to-print'\nimport {insertLog} from '../../../../log/InsertLog'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class Users extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            formdata:'',\n            clients:[],\n            employees:[],\n            temp_avatar:'',\n            edit_password:0,\n            _id:'',\n            data:[],\n            modules:[],\n            dialogVisible:false,\n            is_active : false,\n            username:'',\n            password_hash:'',\n            employee_id:'',\n            user_roles:[],\n            avatar_url:'',\n            user_type:'1',\n            created_by : payload.userId,\n\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n\n            currentPage:1,\n            displayPerPage : 25,\n\n\n        }\n\n        this.tableData = React.createRef();\n\n    }\n    async componentDidMount() {\n        \n        try{\n            await axios.get(`/api/users`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await axios.get(`/api/roles`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label : item.role+' - '+item.module,\n                            value : item._id\n                        }\n\n                        dt[i] = obj\n                    })\n                    this.setState({roles:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        try{\n            await axios.get(`/api/employees-active`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label : item.full_name+' - '+item.structure,\n                            value : item._id\n                        }\n\n                        dt[i] = obj\n                    })\n                    this.setState({employees:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        try{\n            await axios.get(`/api/clients-active`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label : item.client_code+' - '+item.client_name,\n                            value : item._id\n                        }\n\n                        dt[i] = obj\n                    })\n                    this.setState({clients:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:'/control?tab_name=user',role_id:this.props.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        console.log(this.state.role_create)\n        console.log(this.state.role_read)\n        console.log(this.state.role_update)\n        console.log(this.state.role_delete)\n\n\n        insertLog('Access Users Page',this.props.module_id)\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true,\n            username : '',\n            password_hash : '',\n            employee_id : '',\n            user_roles : [],\n            avatar_url:'',\n        })\n    }\n\n    search = async (evt) => {\n        try{\n            await axios.get(`/api/users?key=${evt}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    onChangeUserRoles = (evt) => {\n        var index = this.state.roles.map(function (x) { return x.value; }).indexOf(evt)\n\n        this.setState({user_roles:[...this.state.user_roles, this.state.roles[index]]})\n        console.log(this.state.user_roles)\n    }\n\n    deleteRole = (role_id) => {\n        \n        var roles = this.state.user_roles\n        var index = roles.map(function (x) { return x.value; }).indexOf(role_id)\n        if (index > -1) {\n            roles.splice(index, 1);\n        }\n        \n        this.setState({user_roles:roles})\n        console.log(this.state.user_roles)\n     }\n\n    onChangeUsername = (evt) => {\n        this.setState({username:evt})\n    }\n\n    onChangeIsActive = (evt) => {\n       const is_active =  evt ? 1 : 0 \n        this.setState({is_active:is_active})\n    }\n\n    onChangePassword = (evt) => {\n        this.setState({password_hash:evt})\n    }\n\n    onChangeEmployeeID = (evt) => {\n        this.setState({employee_id:evt})\n    }\n\n    selectUserType = (evt) => {\n        console.log(evt)\n        this.setState({user_type:evt})\n    }\n\n    setUpdate  = async (id) => {\n       \n        try{\n            await axios.get(`/api/user/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        \n                        this.setState({\n                            _id: item._id,\n                            user_type: item.client_id !== null  ? '0' : '1',\n                            username:item.username,\n                            employee_id:item.client_id !== null ? item.client_id : item.employee_id,\n                            is_active : item.is_active, \n                            avatar_url:item.avatar_url,\n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        try{\n            await axios.get(`/api/user-role/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label : item.role+' - '+item.module,\n                            value : item.role_id\n                        }\n\n                        dt[i] = obj\n                        return false\n                    })\n                    this.setState({user_roles:dt})\n                }\n            })\n\n        }catch(e){\n            console.log(e)\n        }\n\n        console.log(this.state.user_roles)\n\n        this.setState({dialogVisible:true})\n    }\n\n    setDelete = (id) => {\n        this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/user/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:!this.state.dialogDeleteVisible,\n                        _id:'',\n                       \n                       \n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n   \n\n    save  = async() => {\n        const body = {\n            username : this.state.username,\n            employee_id : this.state.employee_id,\n            user_roles : this.state.user_roles,\n            avatar_url:this.state.avatar_url,\n            is_active : this.state.is_active\n        }\n        \n        if (this.state._id === '') {\n            body.password_hash = this.state.password_hash\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/user`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            role:'',\n                            description:'',\n                            module_id:''\n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            if (this.state.edit_password ) {\n                body.password_hash = this.state.password_hash\n            }\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/user/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            _id:'',\n                            \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n        \n        \n    }\n\n    handleLoad = (uploadedFile, uploadedData) => {\n\n        this.setState({\n            avatar_url : (uploadedData),\n            \n        })\n        console.log(uploadedData)\n        \n    }\n\n    deleteFile = (file) => {\n        \n       this.setState({\n           avatar_url:'',\n           formdata:{}\n       })\n    }\n\n    setActivePage = (i) => {\n       \n        this.setState({currentPage:i})\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        this.setState({currentPage:endPage})\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({currentPage:1})\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i+1)\n        this.setState({currentPage:nextPage})\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1 ) < 1 ? 1 : (i - 1)\n        this.setState({currentPage:prevPage})\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n\n\n\n\n    render() \n    {\n        const columns = [\n            {label:'No',width:'2%'},\n            {label:'Username',width:'8%'},\n            {label:'Status',width:'5%'},\n\n            {label:'Name',width:'10%'},\n            {label:'Roles',width:'25%'},\n            {label:'Email',width:'8%'},\n            {label:'Phone No',width:'8%'},\n            {label:'Avatar',width:'4%'},{label:'',width:'2%'}\n        ] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n       \n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({  children: 'NO', onClick: (() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible}))});\n        \n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage+2\n        const endPage = Math.ceil(this.state.data.length/this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for(var i=(currentPage-3);i<=n ; i++){\n\n            pages[i-1] = i\n        }\n        const limitBottom = ((this.state.currentPage-1) * this.state.displayPerPage )\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1  \n\n\n        return(\n            <div>\n                    {this.state.role_create ? (\n                 <Button style={{\n                    position:'fixed',\n                    right:'10px',\n                    bottom:'20px',\n                    float:'bottom'\n                }} \n                onClick={this.showForm}\n                secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                ):''}\n                 <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Users\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{alignItems:'right'}}>\n                        <ReactToPrint\n                            trigger={() =>  <button className=\"button is-small is-primary\">\n                                    <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b> \n                                </button>}\n                            content={() => this.componentRef }\n                        />\n                        <div style={{ display: \"none\" }}>\n                                <Printable \n                                    ref={el => (this.componentRef = el)} \n                                    data={this.state.data} \n                                 />\n                                    \n                        </div>  \n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={4}>\n                        \n                      \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField  onChange={this.search}\n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\" ref={this.tableData}  >\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt', overflowX:'scroll'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                            (i <= limitTop && i >= limitBottom) ? (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.username} </td>\n                                    <td> {item.is_active ? <span className= \"tag is-success\"><i className=\"fa fa-check-circle\"></i>&nbsp; Active</span> :  <span className= \"tag is-danger\"><i className=\"fa fa-minus-circle\"></i> &nbsp; Non Active</span> }</td>\n                                    <td>{item.full_name !== null  ? item.full_name : item.client_name}</td>\n                                    <td>{item.roles}</td>\n                                    <td>{item.email !== null  ? item.email : item.client_email}</td>\n                                    <td>{item.client_phone_number  !== null  ? item.client_phone_number : item.phone_number} </td>\n                                    <td><Avatar src={item.avatar_url} width='20vw' /></td>\n                                    <td>\n                                        {this.state.role_delete && this.state.role_update ? (\n                                            <KebabMenu id={item._id} setUpdate = {(id) => this.setUpdate(id)} \n                                            setDelete = {(id) => this.setDelete(id)} />\n                                         ):'-'}\n                                    </td>\n\n                                </tr>\n                            ):''    \n                            ))  }\n                        </tbody>\n                    </table>\n                    {pages.length > 0 ?(\n                        <div className=\"container\">\n                             <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                             <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ): (\n                                        <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    )\n                                    \n                                    \n                                ))}\n                             <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                             <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                        </div>\n                       \n                    ):''}\n                </Grid>\n                <DialogContainer\n                    contentStyle={{\n                        height:'70vh'\n                    }}\n                    width={'600px'}\n                    height={'100vh'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={actions}\n                    title=\"Manage User\"\n                >\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        value={this.state.username}\n                        onChange={this.onChangeUsername}\n                    />\n                    {this.state._id ==='' ? (\n                        <Fragment>\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"Password\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                            />\n                        </Fragment>\n                    ):(\n                        <Fragment>\n                            <br />\n                            <input  type=\"checkbox\" value={this.state.edit_password} onChange={() => this.setState({edit_password: !this.state.edit_password})} />&nbsp;Edit Password\n                           \n                            {this.state.edit_password ? (\n                                    <TextField\n                                    id=\"simple-action-dialog-field\"\n                                    label=\"Password\"\n                                    placeholder=\"Password\"\n                                    type=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.onChangePassword}\n                                />\n                            ):<br />}\n                            \n                        </Fragment>\n                    )}\n                   \n                    <br />\n                    {\n                        this.state.user_roles.map((item,i) => (\n                            <Chip removable label={item.label} removable onClick={() => this.deleteRole(item.value)}/>\n                        ))\n                    }\n                    <br />\n                    <SelectField\n                        style={{width:'400px'}}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Role as \"\n                        placeholder=\"Role as\"\n                        dataValue='value'\n                        dataLabel='label'\n                        menuItems={this.state.roles}\n                        onChange={this.onChangeUserRoles}\n                    />\n                    <SelectionControlGroup\n                        inline\n                        id=\"selection-control-group-radios\"\n                        name=\"radio-example\"\n                        type=\"radio\"\n                        label=\"User Type\"\n                        onChange={this.selectUserType}\n                        defaultValue={this.state.user_type}\n                        controls={[{\n                        label: 'Employee',\n                        value: '1',\n                        }, {\n                        label: 'BPR/Customer',\n                        value: '0',\n                        }]}\n                    />\n                    {this.state.user_type==='1' ? (\n                        <SelectField\n                        style={{width:'400px'}}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Select Employee\"\n                        placeholder=\"Select Employee\"\n                        value={this.state.employee_id}\n                        dataValue='value'\n                        dataLabel='label'\n                        menuItems={this.state.employees}\n                        onChange={this.onChangeEmployeeID}\n                    />\n                    ) : (\n                        <SelectField\n                        style={{width:'400px'}}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Select BPR/Client\"\n                        placeholder=\"Select BPR/Client\"\n                        dataValue='value'\n                        dataLabel='label'\n                        value={this.state.employee_id}\n                        menuItems={this.state.clients}\n                        onChange={this.onChangeEmployeeID}\n                    />\n                    )}\n                    {this.state.avatar_url !== ''  ? (\n                        <div>\n                            <img src={this.state.temp_avatar !== '' ? this.state.temp_avatar : this.state.avatar_url} width='100vw' />\n                            <br />\n                            <Chip  className=\"state-chip\" label={'remove'} removable    onClick={() =>this.deleteFile(this.state.avatar_url)} />\n                            <br />\n                            \n                        </div>\n                        \n\n                    ):(\n                        <div>\n                             \n                            <br />\n                            <FileUpload label=\"Select Avatar\"  id=\"a-file-upload\"\n                                accept=\"image/*\" name=\"images\"\n                                onLoad={this.handleLoad}\n                                style={{backgroundColor:'#359ce6'}}/>\n                        </div>\n                        \n                    )}\n\n                    <SelectionControl\n                        id=\"switch-lights\"\n                        type=\"switch\"\n                        label=\"Active\"\n                        name=\"lights\"\n                        defaultChecked = {this.state.is_active}\n                        onChange = {this.onChangeIsActive}\n                    />\n                    \n                \n            </DialogContainer>\n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={action_delete}\n                title=\"Confirmation\"\n                >\n               Are you sure delete this item?\n            </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}\n\nclass Printable extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        const columns = [\n            {label:'No',width:'2%'},\n            {label:'Username',width:'8%'},{label:'Name',width:'10%'},\n            {label:'Roles',width:'30%'},\n            {label:'Email',width:'8%'},\n            {label:'Phone No',width:'8%'},\n            {label:'Avatar',width:'4%'}\n        ] \n\n        return(\n            <div>\n                <Grid className=\"grid-example\">\n                     <h4>All Users</h4>\n                 </Grid>\n                 <Grid className=\"grid-example\">\n                 <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.username}</td>\n                                    <td>{item.full_name !== null  ? item.full_name : item.client_name}</td>\n                                    <td>{item.roles}</td>\n                                    <td>{item.email !== null  ? item.email : item.client_email}</td>\n                                    <td>{item.client_phone_number  !== null  ? item.client_phone_number : item.phone_number} </td>\n                                    <td><Avatar src={item.avatar_url} /></td>\n                                   \n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n\n                </Grid>\n            </div>\n            \n        )\n    }\n}","import Users from './Users'\n\nexport default {\n    routeProps: {\n        path: '/control/users',\n        exact: true,\n        component: Users,\n    },\n    name: 'Users',\n}","import React,{Component, Fragment} from 'react'\nimport { Link } from \"react-router-dom\";\nimport {Grid,TextField,Button,DialogContainer,SelectField,Snackbar, Cell,ListItem,MenuButton,Collapse} from 'react-md'\nimport axios from 'axios' \nimport $ from 'jquery/dist/jquery.js'\nimport ReactToPrint from 'react-to-print'\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport KebabMenu from '../../components/KebabMenu'\nimport {insertLog} from '../../../../log/InsertLog'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\n\n\nexport default class Help  extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            collapse:[],\n            editor:true,\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            title:'',\n            module_id:'',\n            description:'',\n            created_by : payload.userId,\n\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n\n        }\n    }\n    async componentDidMount() {\n\n        $('.summernote').summernote({\n          \n            placeholder:'Add Description',\n            height:'20vh'\n        })\n\n        try{\n            await axios.get(`/api/modules`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                  \n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.module,\n                            value:item._id\n                        }\n\n                        dt[i] = obj\n                        \n                    })\n                    this.setState({modules:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        try{\n            await axios.get(`/api/helps`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        this.state.collapse[i] = true\n                        return false\n                    })\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        console.log(this.state.modules)\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:'/control?tab_name=help',role_id:this.props.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n\n        insertLog('Access Help Page',this.props.module_id)\n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    onChangeModuleId = (evt) => {\n        this.setState({module_id:evt})\n    }\n\n    onChangeTitle = (evt) => {\n        this.setState({title:evt})\n    }\n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    search = async (evt) =>{\n        try{\n            await axios.get(`/api/helps?key=${evt}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        this.state.collapse[i] = true\n                        return false\n                    })\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n   \n\n    setDelete = (id) => {\n        this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/help/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:!this.state.dialogDeleteVisible,\n                        role:'',\n                        description:'',\n                        module_id:''\n                       \n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save  = async() => {\n        const body = {\n            title : this.state.title,\n            module_id : this.state.module_id,\n            description : this.state.description,\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/help`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            title:'',\n                            description:'',\n                            module_id:''\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/help/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            title:'',\n                            description:'',\n                            module_id:''\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    toggleLoadChild = (i) => {\n        const collapse = this.state.collapse\n        collapse[i] = !collapse[i]\n\n        this.setState({\n            collapse:collapse });\n\n        console.log(this.state.loadChild)\n    }\n\n\n    render() \n    {\n        const {collapse} = this.state\n        const columns = [{label:'No',width:'2%'},{label:'Title',width:'8%'},{label:'Module',width:'10%'},{label:'For Role',width:'10%'},{label:'Description',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({  children: 'NO', onClick: (() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible}))});\n        return(\n            <div>\n                 {this.state.role_create ? (\n                <Link to ={`/control/help/form`}>\n                <Button style={{\n                    position:'fixed',\n                    right:'10px',\n                    bottom:'20px',\n                    float:'bottom'\n                }} \n                onClick={this.showForm}\n                secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                </Link>\n                 ):''}\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Module Help\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{alignItems:'right'}}>\n                        <ReactToPrint\n                            trigger={() =>  <button className=\"button is-small is-primary\">\n                                    <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b> \n                                </button>}\n                            content={() => this.componentRef }\n                        />\n                        <div style={{ display: \"none\" }}>\n                                <Printable \n                                    ref={el => (this.componentRef = el)} \n                                    data={this.state.data} \n                                 />\n                                    \n                        </div>  \n                    </Cell>\n                </Grid>\n                 <Grid className=\"grid-example\">\n                   \n                    <Cell size={8}>\n                     \n                      &nbsp;\n                      \n                    </Cell>\n                    \n                    <Cell size={4} >\n                        \n                        <TextField \n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n               \n                <Grid className=\"grid-example\" >\n                    <Cell size={12} style={{overflowX:'scroll'}}>\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt',}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.title}</td>\n                                    <td>{item.module}</td>\n                                    <td>{item.roles}</td>\n                                    <td style={{fontSize:'8pt'}}>  {this.state.collapse[i] ? (\n                                             <a className=\"button is-small is-primary\" onClick={() => this.toggleLoadChild(i)} >Show detail</a>\n                                            ):(\n                                                <Fragment>\n                                                    <div dangerouslySetInnerHTML={{ __html:item.description }} />\n\n                                                    <a className=\"button is-small is-info\" style={{marginTop:'1vh'}} onClick={() => this.toggleLoadChild(i)} >Hide detail</a>\n                                                </Fragment>\n                                               \n                                            )}\n                                        \n                                        \n                                           \n                                        \n                                    </td>\n                                    <td>\n                                    {this.state.role_delete && this.state.role_update ? (\n                                        <HelpMenu id={item._id} setUpdate = {(id) => this.setUpdate(id)} \n                                            setDelete = {(id) => this.setDelete(id)} />\n                                            ):'-'}\n                                    </td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                    </Cell>\n                   \n\n                </Grid>\n               \n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={action_delete}\n                title=\"Confirmation\"\n                >\n               Are you sure delete this item?\n            </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}\n\n\nclass HelpMenu extends Component {\n    state = {\n\n    }\n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n       const {is_reply_required} = this.props\n       var menuItems = [ ]\n     \n        \n        menuItems = [ \n            <ListItem key={1}  primaryText={<Link to = {`/control/help/form?help_id=${this.props.id}`} >Edit &nbsp;<i className='fa fa-pencil' /> </Link>}  style={{backgroundColor:'lightblue'}}  /> , \n            <ListItem key={2} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                this.setDelete(this.props.id) } />\n        ]\n       \n         \n        return(\n            <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n            listInline centered\n            listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n        \n        \n            > more_vert</MenuButton>\n        )\n    }\n}\n\nclass Printable extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        const columns = [{label:'No',width:'2%'},{label:'Title',width:'8%'},{label:'Module',width:'10%'},{label:'For Role',width:'10%'},{label:'Description',width:'35%'}] \n\n        return(\n            <div>\n                <Grid className=\"grid-example\">\n                     <h4>All Helps</h4>\n                 </Grid>\n                 <Grid className=\"grid-example\">\n                 <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt',}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.title}</td>\n                                    <td>{item.module}</td>\n                                    <td>{item.roles}</td>\n                                    <td style={{fontSize:'8pt'}}>  \n                                            \n                                                    <div dangerouslySetInnerHTML={{ __html:item.description }} />\n\n                                                    \n                                        \n                                    </td>\n                                    \n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n\n                </Grid>\n            </div>\n            \n        )\n    }\n}","import React, { Component, useEffect } from 'react'\nimport {\n    Card,MenuButton,\n    Grid, Button, Cell, TextField,\n    \n} from 'react-md'\nimport axios from 'axios'\nimport { insertLog } from '../../../../log/InsertLog'\nimport { Session } from 'bc-react-session'\nimport ReactToPrint from 'react-to-print';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport dateformat from 'dateformat'\nconst { payload } = Session.get()\n\nexport default class Logs extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            dataToExportPDF:[],\n            dataToExport:[],\n            toasts: [],\n            module_id: '',\n            total_data: 0,\n            _id: '',\n            isLoading: true,\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            category: '',\n            description: '',\n            created_by: payload.userId,\n            key: '',\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 25,\n        }\n\n        this.tableData = React.createRef();\n      \n\n        //this.addLog = this.addLog.bind(this)\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                        this.setState({ module_id: module_id })\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/logs-by-module-id-total/${module_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/logs-by-module-id/${module_id}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        insertLog('Access Logs Page', module_id)\n       \n    }\n\n    \n    search = async (val) => {\n        this.setState({\n            key: val\n        })\n        try {\n            await axios.get(`/api/logs-by-module-id-total/${this.state.module_id}?key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n        this.setState({\n            key: val, currentPage: 1\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n        console.log(i)\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: i\n        })\n    }\n\n    beforeGetContent = async () => {\n        \n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ dataToExportPDF: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    exportXLS = async () => { \n        var dataToExport = []\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map(async (item, i) => {\n                                var obj = {}\n                                obj['NO'] = i + 1\n                                obj['Time'] = dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')\n                                obj['User'] = item.full_name !== null ? item.full_name : item.client_name\n                                obj['Activity'] = item.log\n                                obj['IP'] = item.from_ip\n                                obj['UserAgent'] = item.user_agent\n                                \n                                dt.push(obj)\n    \n                                return false\n                            })\n                            dataToExport = dt\n                            this.setState({ dataToExport: dataToExport })\n                        }\n    \n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All Logs Control System  per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    render() {\n\n        const actions = [];\n\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Time', width: '8%' },\n            { label: 'User', width: '8%' },\n            { label: 'Activity', width: '32%' },\n            { label: 'IP', width: '10%' },\n            { label: 'User Agent', width: '30%' }\n\n        ]\n\n        return (\n\n            <div style={{ marginBottom: '8%' }}>\n\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Logs\n                    </h4>\n                    <Cell size={7}>\n\n                    </Cell>\n                    <Cell size={1}>\n                        \n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                            }, {\n                                primaryText:\n                                    // <a href={socket_address+`/api/ccs-tickets-print`} target='_blank' style={{textDecoration:'none'}}>PDF</a>\n                                    (<ReactToPrint\n                                        onBeforeGetContent={this.beforeGetContent}\n                                        trigger={() => <p>PDF</p>}\n                                        content={() => this.componentRef}\n                                    />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                    &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.dataToExportPDF}\n                                role={this.props.role}\n                            />\n                        </div>\n                    </Cell>\n                    <Cell size={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\" style={{ height: '80vh', marginBottom: '3%' }} ref={this.tableData} >\n                    \n                    <Cell size={12}>\n                        <Card style={{padding:'10px', borderRadius:'10px'}} >\n                            <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '9pt', overflowY: 'scroll' }}>\n                                <thead>\n                                    {columns.map((item, i) => (\n                                        <th width={item.width} key={i}>{item.label}</th>\n                                    ))}\n                                </thead>\n                                <tbody>\n                                    {this.state.data.length > 0 ? this.state.data.map((item, i) => (\n\n\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td>{dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')}</td>\n                                            <td>{item.full_name !== null ? item.full_name : item.client_name}</td>\n                                            <td>{item.log}</td>\n                                            <td>{item.from_ip}</td>\n                                            <td>{item.user_agent}</td>\n                                        </tr>\n\n                                    )) : (\n                                            <tr>\n                                                <td colSpan={6}>\n                                                    <div className=\"notification\">\n                                                        <p>Data is empty</p>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )}\n\n\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                    <Cell size={8}>\n\n                    </Cell>\n                    <Cell size={4} style={{ alignItems: 'right' }}>\n                        {pages.length > 0 ? (\n                            <div className=\"container\">\n                                <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ) : (\n                                            <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                        )\n\n                                ))}\n                                <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                            </div>\n\n                        ) : ''}\n                    </Cell>\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nclass Printable extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Time', width: '8%' },\n            { label: 'User', width: '8%' },\n            { label: 'Activity', width: '32%' },\n            { label: 'IP', width: '10%' },\n            { label: 'User Agent', width: '30%' }\n\n        ]\n\n        return (\n            <Grid className=\"grid-example\" style={{ height: '80vh', marginBottom: '3%' }} ref={this.tableData} >\n                    \n                <Cell size={12}>\n                    <Card style={{padding:'10px', borderRadius:'10px'}} >\n                        <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '9pt', overflowY: 'scroll' }}>\n                            <thead>\n                                {columns.map((item, i) => (\n                                    <th width={item.width} key={i}>{item.label}</th>\n                                ))}\n                            </thead>\n                            <tbody>\n                                {this.props.data.length > 0 ? this.props.data.map((item, i) => (\n\n\n                                    <tr key={i}>\n                                        <td>{i + 1}</td>\n                                        <td>{dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')}</td>\n                                        <td>{item.full_name !== null ? item.full_name : item.client_name}</td>\n                                        <td>{item.log}</td>\n                                        <td>{item.from_ip}</td>\n                                        <td>{item.user_agent}</td>\n                                    </tr>\n\n                                )) : (\n                                        <tr>\n                                            <td colSpan={6}>\n                                                <div className=\"notification\">\n                                                    <p>Data is empty</p>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )}\n\n\n                            </tbody>\n                        </table>\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import React,{Component, Fragment} from 'react'\nimport { Link } from \"react-router-dom\";\nimport {Grid,TextField,Button,DialogContainer,SelectField,Snackbar, Cell,ListItem,MenuButton,Collapse} from 'react-md'\nimport axios from 'axios' \nimport dateformat from 'dateformat'\nimport $ from 'jquery/dist/jquery.js'\nimport ReactToPrint from 'react-to-print'\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport KebabMenu from '../../components/KebabMenu'\nimport {insertLog} from '../../../../log/InsertLog'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\n\n\nexport default class Announcements  extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            collapse:[],\n            editor:true,\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            title:'',\n            module_id:'',\n            description:'',\n            created_by : payload.userId,\n\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n        }\n    }\n    async componentDidMount() {\n\n        $('.summernote').summernote({\n          \n            placeholder:'Add Description',\n            height:'20vh'\n        })\n\n       \n        \n        try{\n            await axios.get(`/api/announcements`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        this.state.collapse[i] = true\n                        return false\n                    })\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        console.log(this.props.role_id)\n        \n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:'/control?tab_name=announcements',role_id:this.props.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        console.log(this.state.role_create)\n        console.log(this.state.role_read)\n        console.log(this.state.role_update)\n        console.log(this.state.role_delete)\n\n\n\n        insertLog('Access Announcement Page',this.props.module_id)\n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    search = async(evt) => {\n        this.setState({\n            key:evt\n        })\n        if (evt !== '') {\n            try{\n                await axios.get(`/api/announcements?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            this.state.collapse[i] = true\n                            return false\n                        })\n                        this.setState({data:response.data.data})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else{\n            try{\n                await axios.get(`/api/announcements`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            this.state.collapse[i] = true\n                            return false\n                        })\n                        this.setState({data:response.data.data})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    onChangeModuleId = (evt) => {\n        this.setState({module_id:evt})\n    }\n\n    onChangeTitle = (evt) => {\n        this.setState({title:evt})\n    }\n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n   \n    setDelete = (id) => {\n        this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/announcement/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:!this.state.dialogDeleteVisible,\n                        role:'',\n                        description:'',\n                        module_id:''\n                       \n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n\n    toggleLoadChild = (i) => {\n        const collapse = this.state.collapse\n        collapse[i] = !collapse[i]\n\n        this.setState({\n            collapse:collapse });\n\n        console.log(this.state.loadChild)\n    }\n\n\n    render() \n    {\n        const {collapse} = this.state\n        const columns = [{label:'No',width:'2%'},{label:'Title',width:'8%'},{label:'Module',width:'10%'},{label:'Showing Periode',width:'10%'},{label:'Description',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({  children: 'NO', onClick: (() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible}))});\n        return(\n            <div >\n                {this.state.role_create ? (\n                     <Link to ={`/control/announcements/form`}>\n                     <Button style={{\n                         position:'fixed',\n                         right:'10px',\n                         bottom:'20px',\n                         float:'bottom'\n                     }} \n                     onClick={this.showForm}\n                     secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                     </Link>\n                ):''}\n               \n                <Grid  >\n                    <h4 className=\"md-cell md-cell--12\">\n                       Announcements\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{alignItems:'right'}}>\n                        <ReactToPrint\n                            trigger={() =>  <button className=\"button is-small is-primary\">\n                                    <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b> \n                                </button>}\n                            content={() => this.componentRef }\n                        />\n                        <div style={{ display: \"none\" }}>\n                                <Printable \n                                    ref={el => (this.componentRef = el)} \n                                    data={this.state.data} \n                                 />\n                                    \n                        </div>  \n                    </Cell>\n                </Grid>\n                 <Grid className=\"grid-example\">\n                   \n                    <Cell size={8}>\n                     \n                      &nbsp;\n                      \n                    </Cell>\n                    \n                    <Cell size={4} >\n                        \n                        <TextField \n                            placeholder=\"Search ... \"\n                            onChange={ this.search}\n                        />\n                    </Cell>\n                </Grid>\n               \n                <Grid >\n                    <Cell size={12} style={{overflowX:'scroll'}}>\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt',}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.length > 0 ? (\n                                <Fragment>\n                                    {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.title}</td>\n                                    <td>{item.module}</td>\n                                    <td>{dateformat(item.start_date,'dd mmm yyyy') +' - '+dateformat(item.end_date,'dd mmm yyyy')}</td>\n                                    <td style={{fontSize:'8pt'}}>  {this.state.collapse[i] ? (\n                                             <a className=\"button is-small is-primary\" onClick={() => this.toggleLoadChild(i)} >Show detail</a>\n                                            ):(\n                                                <Fragment>\n                                                    <div dangerouslySetInnerHTML={{ __html:item.description }} />\n\n                                                    <a className=\"button is-small is-info\" style={{marginTop:'1vh'}} onClick={() => this.toggleLoadChild(i)} >Hide detail</a>\n                                                </Fragment>\n                                               \n                                            )}\n                                        \n                                        \n                                           \n                                        \n                                    </td>\n                                    <td>\n                                        {this.state.role_delete && this.state.role_update ? (\n                                             <HelpMenu id={item._id} setUpdate = {(id) => this.setUpdate(id)} \n                                             setDelete = {(id) => this.setDelete(id)} />\n                                        ):'-'}\n                                       \n                                    </td>\n\n                                </tr>\n                            ))}\n                                </Fragment>\n                            ):(\n                                <tr>\n                                    <td colSpan={6}>\n                                        <div className=\"notification\">\n                                            <p>Data is empty ... </p>\n                                        </div>\n                                    </td>\n                                    \n                                </tr>\n                            )}\n                            \n                        </tbody>\n                    </table>\n\n                    </Cell>\n                   \n\n                </Grid>\n               \n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={action_delete}\n                title=\"Confirmation\"\n                >\n               Are you sure delete this item?\n            </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}\n\n\nclass HelpMenu extends Component {\n    state = {\n\n    }\n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n       const {is_reply_required} = this.props\n       var menuItems = [ ]\n     \n        \n        menuItems = [ \n            <ListItem key={1}  primaryText={<Link to = {`/control/announcements/form?announcement_id=${this.props.id}`} >Edit &nbsp;<i className='fa fa-pencil' /> </Link>}  style={{backgroundColor:'lightblue'}}  /> , \n            <ListItem key={2} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                this.setDelete(this.props.id) } />\n        ]\n       \n         \n        return(\n            <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n            listInline centered\n            listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n        \n        \n            > more_vert</MenuButton>\n        )\n    }\n}\n\n\nclass Printable extends Component{\n    constructor(props){\n        super(props)\n    }\n\n    render() {\n        const columns = [{label:'No',width:'2%'},{label:'Title',width:'8%'},{label:'Module',width:'10%'},{label:'For Role',width:'10%'},{label:'Description',width:'35%'}] \n\n        return(\n            <div>\n                <Grid className=\"grid-example\">\n                     <h4>All Announcements</h4>\n                 </Grid>\n                 <Grid className=\"grid-example\">\n                 <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt',}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.title}</td>\n                                    <td>{item.module}</td>\n                                    <td>{dateformat(item.start_date,'dd mmm yyyy') +' - '+dateformat(item.end_date,'dd mmm yyyy')}</td>\n                                    <td style={{fontSize:'8pt'}}>  \n                                           \n                                        <div dangerouslySetInnerHTML={{ __html:item.description }} />\n\n                                        \n                                    </td>\n                                    \n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n\n\n                </Grid>\n            </div>\n            \n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { Link, Switch, BrowserRouter as Router, Route , Redirect} from 'react-router-dom'\nimport { Grid, Cell } from 'react-md'\nimport { UserDropdownMenu, Notifications, ApplicationMenu, NavLink } from '../../../components'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nimport Menus from '../menus/menu/Menus'\nimport Modules from '../menus/modules/Modules'\nimport Roles from '../menus/roles/Roles'\nimport Users from '../menus/users/Users'\nimport Help from '../menus/help/Help'\nimport Logs from '../menus/log/Logs'\nimport Announcements from '../menus/announcements/Announcements'\nimport { insertLog } from '../../../log/InsertLog'\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Container extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            role: '',\n            data: [],\n            contain: '',\n            list_contain: '',\n            module_id: '',\n            announcements: []\n        }\n\n\n\n    }\n\n    async componentDidMount() {\n\n        this.setState({ contain: 'form' })\n\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                        this.setState({\n                            module_id: module_id\n                        })\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/announcements-by-module-id/${module_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (dateformat(item.star_date, 'yyyy-mm-dd') <= dateformat(new Date(), 'yyyy-mm-dd') && dateformat(item.end_date, 'yyyy-mm-dd') >= dateformat(new Date(), 'yyyy-mm-dd')) {\n                                var obj = item\n                                dt.push(obj)\n                            }\n\n                            return false\n                        })\n                        this.setState({ announcements: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n\n    }\n\n    setTabList = (act) => {\n        if (act === 'create') {\n            this.setState({ contain: act })\n        } else {\n            this.setState({ list_contain: act })\n        }\n\n    }\n\n    render() {\n        const module_id = this.state.module_id\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var list_contain = parsed.tab_name !== undefined && parsed.tab_name !== '' && parsed.tab_name !== null ? parsed.tab_name : 'module'\n        var tabList = [\n            { color: 'pink', action: 'module', icon: 'fa fa-ticket', tooltip: 'Modules' },\n            { color: 'lightblue', action: 'menu', icon: 'fa fa-ticket', tooltip: 'Menus' },\n            { color: 'darkblue', action: 'role', icon: 'fa fa-ticket', tooltip: 'Roles', badge: this.state.total_approve },\n            { color: '#37737a', action: 'user', icon: 'fa fa-ticket', tooltip: 'Users', badge: this.state.total_queue, },\n            { color: '#3bc3f5', action: 'help', icon: 'fa fa-ticket', tooltip: 'Module Help' },\n            { color: '#6653f5', action: 'announcements', icon: 'fa fa-ticket', tooltip: 'Announcements' },\n            { color: 'lightgreen', action: 'logs', icon: 'fa fa-ticket', tooltip: 'Logs' }\n        ]\n        return (\n            <div>\n                {(() => {\n                    if (payload.userId === null) {\n                        return (<Redirect to={'/'} />)\n                    } else {\n                        return (\n                            <Grid className=\"grid-example\">\n                                <h2 className=\"md-cell md-cell--12\">\n                                    Hi, {payload.username}  <p>{this.state.role}</p>\n                                </h2>\n                                <Cell size={12}>\n                                    {this.state.announcements.length > 0 ? (\n                                        <Fragment>\n                                            <h4>Announcements</h4>\n                                            {this.state.announcements.map((item, i) => (\n                                                <div className=\"notification is-warning\">\n                                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                </div>\n                                            ))}\n                                        </Fragment>\n                                    ) : ''}\n                                </Cell>\n                                <Cell size={12}>\n                                    <div className=\"tabs\" style={{ border: 'none' }}>\n                                        <ul>\n                                            {tabList.map((item, i) => {\n                                                if (list_contain === item.action) {\n                                                    return (<li\n                                                        style={{ borderBottom: 'solid 3px ' + item.color, backgroundColor: '#c7d6eb', padding: '10px 5px 0 0 ', borderTopRightRadius: '8px', borderTopLeftRadius: '8px' }} >\n                                                        <Link to={'/control?tab_name=' + item.action} >{item.tooltip} </Link>\n                                                        {item.badge !== undefined && item.badge !== null ? (\n                                                            <span className={\"tag \"} style={{ backgroundColor: item.color, color: 'white' }}>{item.badge}</span>\n                                                        ) : ''}\n\n                                                    </li>\n                                                    )\n                                                } else {\n                                                    return (<li\n                                                        style={{ borderBottom: 'solid 3px ' + item.color, padding: '10px 5px 0 0 ', }} >\n                                                        <Link to={'/control?tab_name=' + item.action} >{item.tooltip} </Link>\n                                                        {item.badge !== undefined && item.badge !== null ? (\n                                                            <span className={\"tag \"} style={{ backgroundColor: item.color, color: 'white' }}>{item.badge}</span>\n                                                        ) : ''}\n                                                    </li>\n                                                    )\n                                                }\n\n                                            })}\n\n\n                                        </ul>\n                                    </div>\n                                </Cell>\n\n                                <Cell size={12}>\n                                    {(() => {\n                                        switch (list_contain) {\n                                            case 'menu': return <Menus role={this.props.role} role_id={this.props.role_id} module_id={this.state.module_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'module': return <Modules role={this.props.role} role_id={this.props.role_id} module_id={module_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'role': return <Roles role={this.props.role} role_id={this.props.role_id} module_id={this.state.module_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'user': return <Users role={this.props.role} role_id={this.props.role_id} module_id={this.state.module_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'help': return <Help role={this.props.role} role_id={this.props.role_id} module_id={this.state.module_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'logs': return <Logs role={this.props.role} role_id={this.props.role_id} module_id={this.state.module_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'announcements': return <Announcements role={this.props.role} role_id={this.props.role_id} module_id={this.state.module_id} showDetail={(id) => this.showDetail(id)} />\n\n                                        }\n\n\n                                    })()}\n                                    {(() => {\n                                        if (list_contain === '') {\n\n                                        }\n                                    })()}\n                                </Cell>\n                            </Grid>\n                        )\n                    }\n                })()}\n\n            </div>\n        )\n    }\n}","import Container from './Container'\n\nexport default {\n    routeProps: {\n        path: '/control',\n        exact: true,\n        component: Container,\n    },\n    name: 'Container',\n}","import Help from './Help'\n\nexport default {\n    routeProps: {\n        path: '/control/help',\n        exact: true,\n        component: Help,\n    },\n    name: 'Help',\n}","import React,{Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport {Grid,TextField,Button,Toolbar,SelectField,Snackbar, Cell,ListItem,MenuButton,Chip} from 'react-md'\nimport axios from 'axios' \nimport $ from 'jquery/dist/jquery.js'\nimport qs from 'query-string'\nimport {insertLog} from '../../../../log/InsertLog'\nimport * as summernote from 'summernote/dist/summernote-lite'\n\nimport KebabMenu from '../../components/KebabMenu'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\n\n\nexport default class Form  extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            editor:true,\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            title:'',\n            module_id:'',\n            role_id:[],\n            description:'',\n            created_by : payload.userId,\n            roles:[],\n        }\n    }\n    async componentDidMount() {\n\n        var parsed = qs.parse(window.location.search)\n        this.setState({_id : parsed.help_id})\n\n        $('.summernote').summernote({\n          \n            placeholder:'Add Description',\n            height:'20vh'\n        })\n\n        try{\n            await axios.get(`/api/modules`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                  \n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.module,\n                            value:item._id\n                        }\n\n                        dt[i] = obj\n                        \n                    })\n                    this.setState({modules:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        console.log(this.state._id)\n        if (this.state._id !=='' && this.state._id !== null) {\n            try{\n                await axios.get(`/api/help/${this.state._id}`)\n                .then(async response =>  {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map( (item,i) => {\n                            this.setState({\n                                module_id : item.module_id,\n                               \n                                title : item.title,\n                                description : item.description\n                            })\n                            return false\n                        })\n                        var editor  = window.document.getElementsByClassName('note-editable')[0]\n                        editor.innerHTML = this.state.description\n                         if (this.state.module_id !== '' ) {\n                            try{\n                                await axios.get(`/api/role-by-module-id/${this.state.module_id }`)\n                                .then(response => {\n                                    if (response.data.status === 200 ) {\n                                        var dt = []\n                                      \n                                        response.data.data.map((item,i) => {\n                                            var obj = {\n                                                label:item.role,\n                                                value:item._id\n                                            }\n                    \n                                            dt[i] = obj\n                                            \n                                        })\n                                        this.setState({roles:dt})\n                                    }\n                                })\n                            }catch(e){\n                                console.log(e)\n                            }\n                        }\n\n                        try{\n                            await axios.get(`/api/help-role-by-help-id/${parsed.help_id}`)\n                            .then(response => {\n                                if (response.data.status === 200) {\n                                    var dt = []\n                                      \n                                    response.data.data.map((item,i) => {\n                                        var obj = {\n                                            label:item.role,\n                                            value:item.role_id\n                                        }\n                \n                                        dt[i] = obj\n                                        \n                                    })\n                                    this.setState({role_id:dt})\n                                }\n                            })\n                        }catch(e){\n                            console.log(e)\n                        }\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n\n           \n        }\n        \n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    onChangeModuleId = async (evt) => {\n        this.setState({module_id:evt})\n        try{\n            await axios.get(`/api/role-by-module-id/${evt}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                  \n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.role,\n                            value:item._id\n                        }\n\n                        dt[i] = obj\n                        \n                    })\n                    this.setState({roles:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        console.log(this.state.roles)\n\n    }\n\n    onChangeRoleId = async (evt) => {\n        var index = this.state.roles.map(function (x) { return x.value; }).indexOf(evt)\n        this.setState({role_id:[...this.state.role_id,this.state.roles[index]] })\n    }\n\n    onChangeTitle = (evt) => {\n        this.setState({title:evt})\n    }\n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    deleteRole = (val) => {\n        var roles = this.state.role_id\n        var index = roles.map(function (x) { return x.value; }).indexOf(val)\n        if (index > -1) {\n            roles.splice(index, 1);\n        }\n        \n        this.setState({role_id:roles})\n        console.log(this.state.role_id)\n    }\n\n   \n\n\n\n    save  = async() => {\n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n        const body = {\n            title : this.state.title,\n            module_id : this.state.module_id,\n            description : editor.innerHTML,\n            role_id : this.state.role_id\n        }\n\n        if (this.state._id === '' || this.state._id === undefined || this.state._id === null) {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/help`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            title:'',\n                            description:'',\n                            module_id:'',\n                            role_id:[],\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/help/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            title:'',\n                            role_id:'',\n                            description:'',\n                            module_id:'',\n                            role_id:[],\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n       \n        return(\n            <div className=\"animated fadeInRightBig\">\n                <Grid>\n                <Toolbar \n                        title={<b>Form Module Help</b>}\n                        nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                 <Grid className=\"grid-example\">\n                    \n                    <Cell size={12}>\n                        <TextField\n                            id=\"simple-action-dialog-field\"\n                            label=\"Title\"\n                            placeholder=\"Title\"\n                            value={this.state.title}\n                            onChange={this.onChangeTitle}\n                        />\n                        <SelectField\n                            style={{width:'400px'}}\n                            id=\"simple-action-dialog-field\"\n                            label=\"Module\"\n                            placeholder=\"Module\"\n                            value={this.state.module_id}\n                            menuItems={this.state.modules}\n                            onChange={this.onChangeModuleId}\n                        />\n                        <br /><br />\n                        {\n                           this.state.role_id !== null && this.state.role_id !== undefined ?   this.state.role_id.map((item,i) => (\n                                <Chip removable label={item.label} onClick={() => this.deleteRole(item.value)} />\n                            )) :'' \n                        }\n                        <br />\n\n                        <SelectField\n                            style={{width:'400px'}}\n                            id=\"simple-action-dialog-field\"\n                            label=\"For Role\"\n                            placeholder=\"For Role\"\n                            value={this.state.role_id}\n                            menuItems={this.state.roles}\n                            onChange={this.onChangeRoleId}\n                        />\n                    \n                        {this.state.editor ? (\n                            <div>\n                            <br />\n                                <div className=\"summernote\">\n                                    \n                                </div>\n                            <br />\n                            </div>\n                        ):''}\n                        \n                \n                        <Snackbar\n                        id=\"example-snackbar\"\n                        toasts={this.state.toasts}\n                        autohideTimeout={300}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Button raised primary onClick={this.save} >Submit</Button>\n                    \n                </Grid>\n            </div>\n           \n        )\n    }\n}\n\n","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/control/help/form',\n        exact: true,\n        component: Form,\n    },\n    name: 'Form',\n}","import React,{Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport {Grid,TextField,Button,Toolbar,SelectField,Snackbar, Cell,DatePicker,MenuButton,Chip, Card} from 'react-md'\nimport axios from 'axios' \nimport $ from 'jquery/dist/jquery.js'\nimport qs from 'query-string'\nimport dateformat from 'dateformat'\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport {insertLog} from '../../../../log/InsertLog'\nimport KebabMenu from '../../components/KebabMenu'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\n\n\nexport default class Form  extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            editor:true,\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            title:'',\n            module_id:'',\n            role_id:[],\n            description:'',\n            created_by : payload.userId,\n            start_date:'',\n            end_date:'',\n        }\n    }\n    async componentDidMount() {\n\n        var parsed = qs.parse(window.location.search)\n        this.setState({_id : parsed.announcement_id})\n\n        $('.summernote').summernote({\n          \n            placeholder:'Add Description',\n            height:'20vh'\n        })\n\n        try{\n            await axios.get(`/api/modules`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                  \n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.module,\n                            value:item._id\n                        }\n\n                        dt[i] = obj\n                        \n                    })\n                    this.setState({modules:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        console.log(this.state._id)\n        if (this.state._id !=='' && this.state._id !== null) {\n            try{\n                await axios.get(`/api/announcement/${this.state._id}`)\n                .then(async response =>  {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map( (item,i) => {\n                            this.setState({\n                                module_id : item.module_id,\n                                start_date : dateformat(item.start_date,'yyyy-mm-dd'),\n                                end_date : dateformat(item.end_date,'yyyy-mm-dd'),\n                                title : item.title,\n                                description : item.description\n                            })\n                            return false\n                        })\n                        var editor  = window.document.getElementsByClassName('note-editable')[0]\n                        editor.innerHTML = this.state.description\n                        \n\n                        \n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n\n           \n        }\n        \n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    onChangeModuleId = async (evt) => {\n        this.setState({module_id:evt})\n    }\n\n    onChangeStartDate = (val) => {\n        this.setState({\n            start_date : dateformat(val,'yyyy-mm-dd'),\n        })\n    }\n    \n    onChangeEndDate = (val) => {\n        this.setState({\n            end_date : dateformat(val,'yyyy-mm-dd'),\n        })\n    }\n\n    onChangeTitle = (evt) => {\n        this.setState({title:evt})\n    }\n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    \n\n\n    save  = async() => {\n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n        const body = {\n            title : this.state.title,\n            module_id : this.state.module_id,\n            description : editor.innerHTML,\n            start_date : dateformat( this.state.start_date,'yyyy-mm-dd'),\n            end_date : dateformat( this.state.end_date,'yyyy-mm-dd'),\n        }\n\n        if (this.state._id === '' || this.state._id === undefined || this.state._id === null) {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/announcement`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            title:'',\n                            description:'',\n                            module_id:'',\n                            start_date : '',\n                            end_date : '',\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/announcement/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            title:'',\n                            \n                            description:'',\n                            module_id:'',\n                            start_date : '',\n                            end_date : '',\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n       \n        return(\n            <div className=\"animated fadeInRightBig\">\n                <Grid>\n                <Toolbar \n                        title={<b>Form Announcements</b>}\n                        nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                 <Grid className=\"grid-example\">\n                    \n                    <Cell size={12}>\n                        <Card style={{padding:'2.5vw'}}>\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"Title\"\n                                placeholder=\"Title\"\n                                value={this.state.title}\n                                onChange={this.onChangeTitle}\n                            />\n                            <SelectField\n                                style={{width:'400px'}}\n                                id=\"simple-action-dialog-field\"\n                                label=\"Module\"\n                                placeholder=\"Module\"\n                                value={this.state.module_id}\n                                menuItems={this.state.modules}\n                                onChange={this.onChangeModuleId}\n                            />\n\n                            <DatePicker\n                                \n                                id=\"appointment-date-portrait\"\n                                label=\"Start Date\"\n                                className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                displayMode=\"landscape\"\n                                value={this.state.start_date}\n                                onChange={this.onChangeStartDate}\n                            />\n                            <DatePicker\n                                \n                                id=\"appointment-date-landscape\"\n                                label=\"End Date\"\n                                className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                displayMode=\"landscape\"\n                                value={this.state.end_date}\n                                onChange={this.onChangeEndDate}\n                            />\n                        \n                        \n                            {this.state.editor ? (\n                                <div>\n                                <br />\n                                    <div className=\"summernote\">\n                                        {/* This is for text editor Summernote */}\n                                        {this.state.description}\n                                    </div>\n                                <br />\n                                </div>\n                            ):''}\n\n                        <hr />\n                        <Button raised primary onClick={this.save} >Submit</Button>\n                        \n                        </Card>\n                       \n                \n                        <Snackbar\n                        id=\"example-snackbar\"\n                        toasts={this.state.toasts}\n                        autohideTimeout={300}\n                        />\n                    </Cell>\n                </Grid>\n               \n            </div>\n           \n        )\n    }\n}\n\n","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/control/announcements/form',\n        exact: true,\n        component: Form,\n    },\n    name: 'Form',\n}","import Profile from '../../../components/Profile'\n\nexport default {\n    routeProps: {\n        path: '/control/setting/profile',\n        exact: true,\n        component: Profile,\n    },\n    name: 'Profile',\n}","import Preferences from '../../../components/Preferences'\n\nexport default {\n    routeProps: {\n        path: '/control/setting/preferences',\n        exact: true,\n        component: Preferences,\n    },\n    name: 'Preferences',\n}","import ChangePassword from '../../../components/ChangePassword'\n\nexport default {\n    routeProps: {\n        path: '/control/setting/changepwd',\n        exact: true,\n        component: ChangePassword,\n    },\n    name: 'ChangePassword',\n}","import React from 'react'\nimport Logs from './Logs'\n\nexport default {\n    routeProps: {\n        path: '/control?tab_name=log',\n        exact: true,\n        component: Logs,\n    },\n    name: 'Logs',\n}","import Announcements from './Announcements'\n\nexport default {\n    routeProps: {\n        path: '/control?tab_name=announcements',\n        exact: true,\n        component: Announcements,\n    },\n    name: 'Announcements',\n}","import React,{Component, Fragment} from 'react'\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button, ListItem, List, Subheader, Divider, FontIcon,Card,Avatar} from 'react-md'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\n\nimport dateformat from 'dateformat'\nimport {Session} from 'bc-react-session'\nconst {payload} =Session.get()\n\nexport default class Notifications extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            _id:'',\n            avg_rating:0,\n            client_code:'',\n            client_name:'',\n            tab:'onprogress',\n            currentPage : 1,\n            displayPerPage : 25,\n            totalShowed : 0,\n            isLoading : true\n        }\n    \n        this.socket = io(socket_address) \n        \n            this.socket.on('RECEIVE_NOTIFICATION', (data) => {\n                if (data.to_user_id === payload.userId) {\n                    this.componentDidMount()\n                }\n                \n            })\n            this.socket.on('READ_NOTIFICATION', (data) => {\n                this.componentDidMount()\n            })\n\n    }\n    \n\n\n    componentDidMount= async  () => {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        \n\n        try{\n            await  axios.get(`/api/notifications-per-user-total/${payload.userId}?displayPerPage=${0}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({total_data : response.data.data[0].total})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${this.state.displayPerPage}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data,isLoading:false})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n\n    }\n\n    readNotif = async (notif_id) => {\n        const body = {\n          is_read : 1\n        }\n         try{\n           axios.put(`/api/notification/${notif_id}`,body)\n           .then(response => {\n             if (response.data.status === 200) {\n   \n             }\n           })\n         }catch(e){\n           console.log(e)\n         }\n    }\n\n    loadMore = async() => {\n\n        const currentPage = this.state.currentPage+1\n        const displayPerPage = this.state.displayPerPage * currentPage\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${displayPerPage}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: currentPage,\n            totalShowed: displayPerPage\n        })\n    }\n    \n\n    render() \n    {\n       if (this.state.isLoading) {\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <div className=\"notification\">\n                        <p>Loading ... </p>\n                    </div>\n                </Cell>\n             </Grid>\n        )\n       }  else \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>All Notifications</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                </Cell>\n                <Cell size={12}>\n                    <Card style={{padding: '2.5vw',}}>\n                        <List className=\"md-cell \" style={{width:'100%',listStyle:'none'}}>\n                            <Subheader primaryText=\"Notifications\" />\n                            {this.state.data.map((item,i) => (\n                                <Link to={item.link} onClick={() => this.readNotif(item._id)} >\n                                    <ListItem\n                                        //  style={{backgroundColor: item.is_read === 0 ? '#cae7fa' : ''}}\n                                        leftAvatar={<Avatar src={item.avatar_url}/>}\n                                        primaryText={<Fragment> <b>{item.full_name !== '' &&  item.full_name !== null ? item.full_name : item.client_name}</b> &nbsp; {item.is_read === 0 ? <span className=\"tag \" style={{backgroundColor:'#cae7fa'}}><b>UNREAD</b></span>:''} </Fragment>}\n                                        secondaryText={<Fragment>  {item.notification} &nbsp; <p>{dateformat(item.created_at,'dd mmm yyyy, HH:MM' )}</p> </Fragment> }\n                                        threeLines\n                                    />\n                                </Link>\n                            ))}\n                            \n                                                       \n                        </List>\n                        { this.state.totalShowed < this.state.total_data ? (\n                            <a onClick={this.loadMore}><h4 >Load More ... </h4></a>\n                        ):'' }\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import menu from './menu'\nimport modules from './modules'\nimport roles from './roles'\nimport users from './users'\nimport home from '../home'\nimport help from './help'\nimport form_help from './help/form'\nimport form_announcements from './announcements/form'\nimport profile from './profile'\nimport preferences from './preferences'\nimport changepwd from './changepwd'\nimport log from './log'\nimport announcements from './announcements'\nimport notifications from './notifications'\n\nexport default [\n    menu,roles,modules,users,home,help,form_help,profile,changepwd,preferences,form_announcements,log,announcements,\n    notifications\n]","import React from 'react'\nimport Notifications from './Notifications'\n\nexport default {\n    routeProps: {\n        path: '/control/notifications',\n        exact: true,\n        component: Notifications,\n    },\n    name: 'Notifications',\n}","import React,{Component} from 'react'\nimport {BrowserRouter as Router ,Route,Switch,Link, Redirect} from 'react-router-dom'\nimport { Button, Drawer, Toolbar } from 'react-md'\nimport {UserDropdownMenu,Notifications, ApplicationMenu,Profile, Preferences, ChangePassword,NavLink} from '../../../components'\nimport menus from '../menus'\nimport axios from 'axios'\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar inboxListItems = []\n\nexport default class Home extends Component{\n    state = { visible: false, position: 'left',role_id:'',module_title:this.props.module_title,avatar_url:'' };\n\n    async componentDidMount() {\n        window.document.title = 'Control System PT MSO'\n\n\n        var moduleName = window.location.href.split('/')\n        try {\n            await axios.get(`/api/menu-by-module-link/${moduleName[3]}`)\n            .then(response => {\n                    var dt  = []\n                    response.data.data.map((item,i) => {\n                    var obj = {\n                        label: item.menu,\n                        to: item.link,\n                        icon: 'list',\n                    }\n                    dt[i] = (<NavLink key={i} label={item.menu } to={item.link} icon={item.icon} />)\n                    })\n                    inboxListItems = dt\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        try {\n            await axios.get(`/api/user/${payload.userId}`)\n            .then(response => {\n                    if (response.data.status === 200 ) {\n                      response.data.data.map((item,i) => {\n                            this.setState({\n                              avatar_url : item.avatar_url\n                            })\n                        })\n                        \n                    }\n                  \n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        var module_id = ''\n      var moduleName = window.location.href.split('/')\n      try {\n          await  axios.get(`/api/module-by-link/${moduleName[3]}`)\n          .then(response => {\n                  \n                  response.data.data.map((item,i) => {\n                      module_id = item._id\n                      return false\n                  })\n          })\n      }catch(error){\n          console.error('Data Not Loaded ',error)\n      }\n      \n      try {\n          await  axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n          .then(response => {\n          \n              if (response.data.status === 200) {\n                  this.setState({role:response.data.data[0].role,role_id:response.data.data[0].role_id})\n              }\n          \n          })\n      }catch(error){\n          console.log(error)\n      }\n\n      console.log(this.state.role_id)\n\n      try {\n        await  axios.get(`/api/ccs-notifications-per-user/${payload.userId}`)\n        .then(response => {\n        \n            if (response.data.status === 200) {\n                this.setState({notifications:response.data.data})\n            }\n        \n        })\n    }catch(error){\n        console.log(error)\n    }\n    }\n    openDrawerLeft = () => {\n        this.setState({ visible: true, position: 'left' });\n    };\n\n\n    closeDrawer = () => {\n        this.setState({ visible: false });\n    };\n\n    handleVisibility = (visible) => {\n        this.setState({ visible });\n    };\n\n    render() {\n        const { visible, position } = this.state;\n        const isLeft = position === 'left';\n\n        const closeBtn = <Button icon onClick={this.closeDrawer}>{isLeft ? 'arrow_back' : 'close'}</Button>;\n        if (payload.userId === '' || payload.userId === null || payload.userId === undefined) {\n            return (\n              <Redirect to='/' />\n            )\n          } else\n        return (\n            <Router>\n           <div style={{marginTop:'70px'}}>\n            \n            <Toolbar\n                fixed\n                colored\n              //  nav={<Button icon onClick={this.openDrawerLeft} >menu</Button>}\n                nav={<a href ={'/'} style={{color:'#fff'}} ><Button icon  >home</Button></a>}\n                actions={[(<ApplicationMenu />),(<Notifications />),(<UserDropdownMenu  avatar={this.state.avatar_url} />)]}\n                title={this.state.module_title}\n                style={{backgroundColor:this.props.bg_color,color:'white'}}\n                \n            />\n            <div className=\"content\">\n                <Switch>\n                    { menus.map((_,i) => (\n                    <Route path={_.routeProps.path} exact = {_.routeProps.exact} key={_.name} component={() => <_.routeProps.component role={this.state.role} role_id={this.state.role_id} />}/>\n                    )) }\n                </Switch>\n            </div>\n                   \n                  \n               \n        \n            <Drawer\n            id=\"simple-drawer-example\"\n            type={Drawer.DrawerTypes.TEMPORARY}\n            visible={visible}\n            position={position}\n            onVisibilityChange={this.handleVisibility}\n            navItems={inboxListItems}\n            header={(\n                <Toolbar\n                nav={isLeft ? (<Button icon onClick={() => window.location.href='/'} >home</Button> ) : closeBtn}\n                actions={isLeft ? closeBtn : null}\n                className=\"md-divider-border md-divider-border--bottom\"\n                />\n            )}\n            />\n      \n        </div>\n        </Router>\n        );\n    }\n} \n","import React,{Component} from 'react'\n\nimport Home from './home/Home'\n\nclass ControlSystem extends Component{\n    render() {\n        return(\n            <Home module_title='Control System' bg_color='#3f51b5'/> \n        )\n    }\n} \n\nexport default {\n    routeProps: {\n        path: '/control',\n        exact: true,\n        component: ControlSystem,\n    },\n    name: 'Control System',\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Cell, TextField, Button, MenuButton, ListItem, DialogContainer, DatePicker, Snackbar } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print';\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Employees extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            data: [],\n            status: [],\n            structures: [],\n            dialogDeleteVisible: false,\n            dialogVisible: false,\n            full_name: '',\n            nick_name: '',\n            structure_id: '',\n\n            role_create: false,\n            role_read: false,\n            role_update: false,\n            role_delete: false,\n\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 25,\n\n        }\n    }\n\n    async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        console.log(this.state.role_id)\n\n\n        try {\n            await axios.get(`/api/employees`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/employees?tab_name=employees', role_id: this.state.role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role_controls: response.data.data })\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({\n                                    role_read: true\n                                })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({\n                                    role_create: true\n                                })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({\n                                    role_update: true\n                                })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({\n                                    role_delete: true\n                                })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n    }\n\n    showForm = () => {\n        this.setState({ dialogVisible: true })\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    search = async (evt) => {\n        if (evt !== '') {\n            try {\n                await axios.get(`/api/employees?key=${evt}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            try {\n                await axios.get(`/api/employees`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n\n    setDelete = (id) => {\n        this.setState({ _id: id, dialogDeleteVisible: true })\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/employee/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogDeleteVisible: !this.state.dialogDeleteVisible,\n                        })\n\n                    } else {\n                        this.addToast(response.data.message)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.data.length / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.data.length / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n    }\n\n\n\n\n    render() {\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Name', width: '20%', sorting: 'full_name' },\n            { label: 'Structure', width: '15%', sorting: 'structure_id' },\n            { label: 'Phone No', width: '15%' },\n            { label: 'Email', width: '15%' },\n            { label: 'Join Date', width: '15%', sorting: 'join_date' },\n            { label: 'Status', width: '5%' },\n            { label: '', width: '2%' }]\n        const actions = [];\n\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.data.length / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        return (\n            <div>\n                {this.state.role_create ? (\n                    <Link to={`/employees/form`}>\n                        <Button style={{\n                            position: 'fixed',\n                            right: '10px',\n                            bottom: '20px',\n                            float: 'bottom'\n                        }}\n                            onClick={this.showForm}\n                            secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n\n                    </Link>\n                ) : ''}\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        All Employees\n                    </h4>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={11}>\n\n                    </Cell>\n                    <Cell size={1} style={{ alignItems: 'right' }}>\n                        <ReactToPrint\n                            trigger={() => <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                            </button>}\n                            content={() => this.componentRef}\n                        />\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.data}\n                            />\n\n                        </div>\n                    </Cell>\n                </Grid>\n                <Grid>\n                    <Cell size={4}>\n\n\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            placeholder=\"Search ... \" onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                item.sorting !== null && item.sorting !== '' && item.sorting !== undefined ? (\n                                    <td width={item.width} >{item.label} &nbsp; <a onClick={() => this.setSorting(item.sorting)}><i className=\"fa fa-sort\"></i></a> </td>\n                                ) : (\n                                        <td width={item.width} >{item.label} </td>\n\n                                    )\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n                                (i <= limitTop && i >= limitBottom) ? (\n                                    <tr>\n                                        <td >{i + 1}</td>\n                                        <td><strong>{item.full_name}</strong></td>\n                                        <td>{item.structure}</td>\n                                        <td>{item.phone_number}</td>\n                                        <td>{item.email}</td>\n                                        <td>{ item.join_date > '1971-01-01' ? dateformat(item.join_date, 'dd mmm yyyy'): '' }</td>\n                                        <td> {item.status_id === 1 ? <span className=\"tag is-success\"><i className=\"fa fa-check-circle\"></i>&nbsp; {item.status}</span> : <span className=\"tag is-danger\"><i className=\"fa fa-minus-circle\"></i> &nbsp; {item.status} </span>}</td>\n\n                                        <td>\n                                            {this.state.role_delete && this.state.role_update ? (\n                                                <KebabMenu id={item._id} setUpdate={(id) => this.setUpdate(id)}\n                                                    setDelete={(id) => this.setDelete(id)} />\n                                            ) : '-'}\n                                        </td>\n                                    </tr>\n                                ) : ''))}\n\n\n\n\n                        </tbody>\n                    </table>\n                    {pages.length > 0 ? (\n                        <div className=\"container\">\n                            <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                            <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                            {pages.map((page) => (\n                                this.isActive(page) ? (\n                                    <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                ) : (\n                                        <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    )\n\n\n                            ))}\n                            <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                            <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                        </div>\n\n                    ) : ''}\n\n                    <DialogContainer\n                        width={'600px'}\n                        id=\"simple-action-dialog\"\n                        visible={this.state.dialogDeleteVisible}\n                        onHide={() => !this.state.dialogDeleteVisible}\n                        actions={action_delete}\n                        title=\"Confirmation\"\n                    >\n                        Are you sure delete this item?\n            </DialogContainer>\n                    <Snackbar\n                        id=\"example-snackbar\"\n                        toasts={this.state.toasts}\n                        autohideTimeout={300}\n                    />\n                </Grid>\n\n            </div>\n\n        )\n    }\n}\n\nclass KebabMenu extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n\n    setUpdate = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render() {\n        const menuItems = [\n            <ListItem key={1} primaryText={<Link to={`/employees/form?id=${this.props.id}`} >Edit &nbsp;<i className='fa fa-pencil' /> </Link>} style={{ backgroundColor: 'lightblue' }} />,\n            <ListItem key={2} primaryText='Delete' rightIcon={(<i className='fa fa-trash' />)} style={{ top: 0, backgroundColor: 'pink', marginTop: '0em' }} onClick={() =>\n                this.setDelete(this.props.id)} />\n        ]\n        return (\n            <MenuButton id='kebabmenu' icon menuItems={menuItems}\n                listInline centered\n                listStyle={{ textDecoration: 'none', listStyle: 'none', justifyItems: 'center', marginTop: '0em' }}\n\n\n            > more_vert</MenuButton>\n        )\n    }\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Name', width: '20%' },\n            { label: 'Structure', width: '15%' },\n            { label: 'Phone No', width: '15%' },\n            { label: 'Email', width: '15%' },\n            { label: 'Join Date', width: '15%' },\n            { label: 'Status', width: '5%' },\n        ]\n\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <td width={item.width} >{item.label}</td>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.props.data.map((item, i) => (\n                                <tr>\n                                    <td >{i + 1}</td>\n                                    <td><strong>{item.full_name}</strong></td>\n                                    <td>{item.structure}</td>\n                                    <td>{item.phone_number}</td>\n                                    <td>{item.email}</td>\n                                    <td>{item.join_date > '1971-01-01' ? dateformat(item.join_date, 'dd mmm yyyy') : '' }</td>\n                                    <td>{item.status}</td>\n\n                                </tr>)\n\n                            )}\n\n\n                        </tbody>\n                    </table>\n\n                </Grid>\n            </div>\n\n        )\n    }\n}","import Employees from './Employees'\n\nexport default {\n    routeProps: {\n        path: '/employees/employees',\n        exact: true,\n        component: Employees,\n    },\n    name: 'Employees',\n}","import React,{Component} from 'react'\nimport {MenuButton,ListItem} from 'react-md'\n\nexport default class KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                <ListItem key={1}  primaryText='Edit' rightIcon ={(<i className='fa fa-pencil' />)} style={{backgroundColor:'lightblue'}} onClick={ () => \n                     this.setUpdate(this.props.id)} /> , \n                <ListItem key={2} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> \n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center',marginTop:'0em'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}","import React,{Component} from 'react'\nimport {Grid,TextField, Button,DialogContainer,SelectField,Snackbar, Cell} from 'react-md'\nimport axios from 'axios' \nimport KebabMenu from '../../components/KebabMenu'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class Status extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            modules:[],\n            dialogVisible:false,\n            module:'',\n            link:'',\n            description:'',\n            module_short_name:'',\n            created_by : payload.userId,\n\n            role_create : false,\n            role_read : false,\n            role_update : false,\n            role_delete: false,\n        }\n    }\n    async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                   \n                    response.data.data.map((item,i) => {\n                        module_id = item._id\n                    })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n       \n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role:response.data.data[0].role,role_id:response.data.data[0].role_id})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n        console.log(this.state.role_id)\n        \n        try{\n            await axios.get(`/api/employee-status`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id` ,{link:'/employees?tab_name=status',role_id:this.state.role_id})\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role_controls:response.data.data})\n                    response.data.data.map((item,i) => {\n                        if (item.type_control === 'read') {\n                            this.setState({\n                                role_read :true\n                            })\n                        }\n                        if (item.type_control === 'create') {\n                            this.setState({\n                                role_create :true\n                            })\n                        }\n                        if (item.type_control === 'update') {\n                            this.setState({\n                                role_update :true\n                            })\n                        }\n                        if (item.type_control === 'delete') {\n                            this.setState({\n                                role_delete :true\n                            })\n                        }\n                        \n                    })\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        console.log(this.state.role_create)\n        console.log(this.state.role_read)\n        console.log(this.state.role_update)\n        console.log(this.state.role_delete)\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({\n            _id: '',\n            status: '',\n            description: '',\n            dialogVisible:true\n           \n        })\n    }\n\n    onChangeStatus= (evt) => {\n        this.setState({status:evt})\n    }\n\n   \n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    search = async(evt) => {\n        try{\n            await axios.get(`/api/employee-status?key=${evt}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    setUpdate  = async(id) => {\n        try{\n            await axios.get(`/api/employee-status/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        this.setState({\n                            _id: item._id,\n                            status:item.status,\n                            description:item.description,\n                           \n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        this.setState({dialogVisible:true})\n    }\n\n    setDelete =  (id) => {\n        this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/employee-status/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:!this.state.dialogDeleteVisible,\n                        status :'',\n                        description : '',\n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save  = async() => {\n        const body = {\n            status : this.state.status,\n            \n            description : this.state.description,\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/employee-status`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            status :'',\n                            description : '',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/employee-status/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            status :'',\n                            description : '',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n        const columns = [{label:'No',width:'2%'},{label:'Status',width:'8%'},{label:'Description',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({  children: 'NO', onClick: (() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible}))});\n        return(\n            <div>\n                 {this.state.role_create ? (\n                <Button style={{\n                    position:'fixed',\n                    right:'10px',\n                    bottom:'20px',\n                    float:'bottom'\n                }} \n                onClick={this.showForm}\n                secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                ):''}\n                 <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Status\n                    </h4>\n                    <Cell size={4}>\n                        \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.status}</td>\n                                    <td>{item.description}</td>\n                                    <td>\n                                        {this.state.role_delete && this.state.role_update ? (\n                                            <KebabMenu id={item._id} setUpdate = {(id) => this.setUpdate(id)} \n                                            setDelete = {(id) => this.setDelete(id)} />\n                                        ):'-'}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogVisible}\n                onHide={() => !this.state.dialogVisible}\n                actions={actions}\n                title=\"Manage Status\"\n                >\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Status\"\n                    placeholder=\"Status\"\n                    value={this.state.status}\n                    onChange={this.onChangeStatus}\n                />\n               \n                 <TextField\n                    rows={2}\n                    id=\"simple-action-dialog-field\"\n                    label=\"Description\"\n                    placeholder=\"Description\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                />\n            </DialogContainer>\n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={action_delete}\n                title=\"Confirmation\"\n                >\n               Are you sure delete this item?\n            </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}","import Status from './Status'\n\nexport default {\n    routeProps: {\n        path: '/employees/Status',\n        exact: true,\n        component: Status,\n    },\n    name: 'Status',\n}","import React, { Component } from 'react'\nimport { Grid, TextField, Button, DialogContainer, SelectField, Snackbar, Cell } from 'react-md'\nimport axios from 'axios'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Report extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            _id: '',\n            data: [],\n            modules: [],\n            dialogVisible: false,\n            module: '',\n            link: '',\n            description: '',\n            module_short_name: '',\n            created_by: payload.userId\n        }\n    }\n    async componentDidMount() {\n\n        try {\n            await axios.get(`/api/employees`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({ dialogVisible: true })\n    }\n\n    onChangeLink = (evt) => {\n        this.setState({ link: evt })\n    }\n\n    onChangeModule = (evt) => {\n        this.setState({ module: evt })\n    }\n\n    onChangeModuleShort = (evt) => {\n        this.setState({ module_short_name: evt })\n    }\n\n    onChangeDescription = (evt) => {\n        this.setState({ description: evt })\n    }\n\n    setUpdate = (id) => {\n        alert(id)\n    }\n\n    setDelete = (id) => {\n        alert(id)\n    }\n\n    save = async () => {\n        const body = {\n            module: this.state.module,\n            module_short_name: this.state.module_short_name,\n            link: this.state.link,\n            directory_path: this.state.link,\n            description: this.state.description,\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/module`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                module: '',\n                                link: '',\n                                description: '',\n\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' }, { label: 'Module', width: '8%' }, { label: 'Link', width: '10%' }, { label: 'Description', width: '35%' }, { label: '', width: '2%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        ;\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Report\n                    </h2>\n                    <Cell size={4}>\n                        <Button raised primary iconClassName=\"fa fa-plus-circle \" onClick={this.showForm} >Add</Button>\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{i + 1}</td>\n                                    <td>{item.module}</td>\n                                    <td>{item.link}</td>\n                                    <td>{item.description}</td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={actions}\n                    title=\"Manage Module\"\n                >\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Module\"\n                        placeholder=\"Module\"\n                        value={this.state.module}\n                        onChange={this.onChangeModule}\n                    />\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Short Name\"\n                        placeholder=\"Short Name\"\n                        value={this.state.module_short_name}\n                        onChange={this.onChangeModuleShort}\n                    />\n                    <TextField\n                        style={{ width: '400px' }}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Link\"\n                        placeholder=\"Link, Start with '/' \"\n                        value={this.state.link}\n                        onChange={this.onChangeLink}\n                    />\n                    <TextField\n                        rows={2}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Description\"\n                        placeholder=\"Description\"\n                        value={this.state.description}\n                        onChange={this.onChangeDescription}\n                    />\n                </DialogContainer>\n                <Snackbar\n                    id=\"example-snackbar\"\n                    toasts={this.state.toasts}\n                    autohideTimeout={300}\n                />\n            </div>\n\n        )\n    }\n}","import Report from './Report'\n\nexport default {\n    routeProps: {\n        path: '/employees/report',\n        exact: true,\n        component: Report,\n    },\n    name: 'Report',\n}","import React, { Component } from 'react'\nimport { Grid, TextField, Button, DialogContainer, SelectField, Snackbar, Cell, MenuButtonColumn } from 'react-md'\nimport axios from 'axios'\nimport KebabMenu from '../../components/KebabMenu'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Structure extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            structures: [],\n            _id: '',\n            data: [],\n            modules: [],\n            dialogVisible: false,\n            structure: '',\n            level: '',\n            description: '',\n            parent_id: '',\n            created_by: payload.userId,\n\n\n            role_create: false,\n            role_read: false,\n            role_update: false,\n            role_delete: false,\n        }\n    }\n    async componentDidMount() {\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        console.log(this.state.role_id)\n\n        try {\n            await axios.get(`/api/employee-structures`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            var obj = {\n                                label: item.structure + ' (level ' + item.level + ')',\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        this.setState({ structures: dt })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/employees?tab_name=structure', role_id: this.state.role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role_controls: response.data.data })\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({\n                                    role_read: true\n                                })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({\n                                    role_create: true\n                                })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({\n                                    role_update: true\n                                })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({\n                                    role_delete: true\n                                })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        console.log(this.state.role_create)\n        console.log(this.state.role_read)\n        console.log(this.state.role_update)\n        console.log(this.state.role_delete)\n\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({\n            _id: '',\n            status: '',\n            description: '',\n            dialogVisible: true\n\n        })\n    }\n\n    onChangeStatus = (evt) => {\n        this.setState({ structure: evt })\n    }\n    onChangeLevel = (evt) => {\n        this.setState({ level: evt })\n    }\n\n    onChangeparentId = (evt) => {\n        this.setState({ parent_id: evt })\n    }\n\n\n    onChangeDescription = (evt) => {\n        this.setState({ description: evt })\n    }\n\n    search = async (evt) => {\n        try {\n            await axios.get(`/api/employee-structures?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                        \n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    setUpdate = async (id) => {\n        try {\n            await axios.get(`/api/employee-structure/${id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        response.data.data.map((item, i) => {\n                            this.setState({\n                                _id: item._id,\n                                structure: item.structure,\n                                level: item.level,\n                                description: item.description,\n                                parent_id: item.parent_id\n\n                            })\n                            return false\n                        })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        this.setState({ dialogVisible: true })\n    }\n\n    setDelete = (id) => {\n        this.setState({ _id: id, dialogDeleteVisible: true })\n    }\n\n    delete = async () => {\n        try {\n            await axios.delete(`/api/employee-structure/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogDeleteVisible: !this.state.dialogDeleteVisible,\n                            status: '',\n                            level: '',\n                            parent_id: '',\n                            description: '',\n                            _id: ''\n                        })\n\n                    } else {\n                        this.addToast(response.data.message)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    save = async () => {\n        const body = {\n            structure: this.state.structure,\n            level: this.state.level,\n            description: this.state.description,\n            parent_id: this.state.parent_id\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/employee-structure`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                status: '',\n                                level: '',\n                                parent_id: '',\n                                description: '',\n\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/employee-structure/${this.state._id}`, body)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.addToast(response.data.message)\n                            this.componentDidMount()\n                            this.setState({\n                                dialogVisible: !this.state.dialogVisible,\n                                status: '',\n                                level: '',\n                                parent_id: '',\n                                description: '',\n                                _id: ''\n\n                            })\n\n                        } else {\n                            this.addToast(response.data.message)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' }, { label: 'Structure', width: '8%' }, { label: 'Description', width: '35%' }, { label: '', width: '2%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n        return (\n            <div>\n                {this.state.role_create ? (\n                    <Button style={{\n                        position: 'fixed',\n                        right: '10px',\n                        bottom: '20px',\n                        float: 'bottom'\n                    }}\n                        onClick={this.showForm}\n                        secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                ) : ''}\n                <Grid className=\"grid-example\">\n                    <h4 className=\"md-cell md-cell--12\">\n                        Structures\n                    </h4>\n                    <Cell size={4}>\n\n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                        <thead>\n                            {columns.map((item, i) => (\n                                <th width={item.width} key={i}>{item.label}</th>\n                            ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item, i) => (\n                                <tr key={i}>\n                                    <td>{i + 1}</td>\n                                    <td>{item.structure}</td>\n                                    <td>{item.description}</td>\n                                    <td>\n                                        {this.state.role_delete && this.state.role_update ? (\n                                            <KebabMenu id={item._id} setUpdate={(id) => this.setUpdate(id)}\n                                                setDelete={(id) => this.setDelete(id)} />\n                                        ) : '-'}\n                                    </td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={actions}\n                    title=\"Manage Structure\"\n                >\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Structure Name\"\n                        placeholder=\"Structure Name\"\n                        value={this.state.structure}\n                        onChange={this.onChangeStatus}\n                    />\n                    <TextField\n                        id=\"simple-action-dialog-field\"\n                        label=\"Level\"\n                        placeholder=\"Level\"\n                        value={this.state.level}\n                        onChange={this.onChangeLevel}\n                    />\n                    <SelectField\n                        id=\"select-field-2\"\n                        value={this.state.parent_id}\n                        placeholder=\"Parent Structure\"\n                        menuItems={this.state.structures}\n                        anchor={{\n                            x: MenuButtonColumn.HorizontalAnchors.CENTER,\n                            y: MenuButtonColumn.VerticalAnchors.TOP\n                        }}\n                        onChange={this.onChangeparentId}\n                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n\n                    />\n                    <TextField\n                        rows={2}\n                        id=\"simple-action-dialog-field\"\n                        label=\"Description\"\n                        placeholder=\"Description\"\n                        value={this.state.description}\n                        onChange={this.onChangeDescription}\n                    />\n                </DialogContainer>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogDeleteVisible}\n                    onHide={() => !this.state.dialogDeleteVisible}\n                    actions={action_delete}\n                    title=\"Confirmation\"\n                >\n                    Are you sure delete this item?\n            </DialogContainer>\n                <Snackbar\n                    id=\"example-snackbar\"\n                    toasts={this.state.toasts}\n                    autohideTimeout={300}\n                />\n            </div>\n\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport { Link, Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { Grid, Cell } from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport Employees from '../menus/employees/Employees'\nimport Status from '../menus/status/Status'\nimport Structures from '../menus/structure/Structure'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Container extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            role: '',\n            role_id: '',\n            data: [],\n            contain: '',\n            announcements: [],\n        }\n\n\n\n    }\n\n    async componentDidMount() {\n\n        this.setState({ contain: 'form' })\n\n\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n        console.log(this.state.role_id)\n        try {\n            await axios.get(`/api/announcements-by-module-id/${module_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (dateformat(item.star_date, 'yyyy-mm-dd') <= dateformat(new Date(), 'yyyy-mm-dd') && dateformat(item.end_date, 'yyyy-mm-dd') >= dateformat(new Date(), 'yyyy-mm-dd')) {\n                                var obj = item\n                                dt.push(obj)\n                            }\n\n                            return false\n                        })\n                        this.setState({ announcements: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n    }\n\n    render() {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var list_contain = parsed.tab_name !== undefined ? parsed.tab_name : 'employees'\n        var tabList = [\n            { color: 'pink', action: 'employees', icon: 'fa fa-ticket', tooltip: 'Employees' },\n            { color: 'lightblue', action: 'status', icon: 'fa fa-ticket', tooltip: 'Status' },\n            { color: 'lightgreen', action: 'structures', icon: 'fa fa-ticket', tooltip: 'Structures' },\n        ]\n\n        return (\n            <div>\n                {(() => {\n                    if (payload.userId === null) {\n                        return (<Redirect to={'/'} />)\n                    } else {\n                        return (\n                            <Grid className=\"grid-example\">\n                                <h2 className=\"md-cell md-cell--12\">\n                                    Hi, {payload.username}  <p>{this.state.role}</p>\n                                </h2>\n                                <Cell size={12}>\n                                    {this.state.announcements.length > 0 ? (\n                                        <Fragment>\n                                            <h4>Announcements</h4>\n                                            {this.state.announcements.map((item, i) => (\n                                                <div className=\"notification is-warning\">\n                                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                </div>\n                                            ))}\n                                        </Fragment>\n                                    ) : ''}\n                                </Cell>\n\n                                <Cell size={12}>\n                                    <div className=\"tabs\" style={{ border: 'none' }}>\n                                        <ul>\n                                            {tabList.map((item, i) => {\n                                                if (list_contain === item.action) {\n                                                    return (<li\n                                                        style={{ borderBottom: 'solid 3px ' + item.color, backgroundColor: '#c7d6eb', padding: '10px 5px 0 0 ', borderTopRightRadius: '8px', borderTopLeftRadius: '8px' }} >\n                                                        <Link to={'/employees?tab_name=' + item.action} >{item.tooltip} </Link>\n                                                        {item.badge !== undefined && item.badge !== null ? (\n                                                            <span className={\"tag \"} style={{ backgroundColor: item.color, color: 'white' }}>{item.badge}</span>\n                                                        ) : ''}\n\n                                                    </li>\n                                                    )\n                                                } else {\n                                                    return (<li\n                                                        style={{ borderBottom: 'solid 3px ' + item.color, padding: '10px 5px 0 0 ', }} >\n                                                        <Link to={'/employees?tab_name=' + item.action} >{item.tooltip} </Link>\n                                                        {item.badge !== undefined && item.badge !== null ? (\n                                                            <span className={\"tag \"} style={{ backgroundColor: item.color, color: 'white' }}>{item.badge}</span>\n                                                        ) : ''}\n                                                    </li>\n                                                    )\n                                                }\n\n                                            })}\n\n\n                                        </ul>\n                                    </div>\n                                </Cell>\n\n                                <Cell size={12}>\n                                    {(() => {\n                                        switch (list_contain) {\n                                            case 'employees': return <Employees role={this.props.role} role_id={this.state.role_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'status': return <Status role={this.props.role} role_id={this.state.role_id} showDetail={(id) => this.showDetail(id)} />\n                                            case 'structures': return <Structures role={this.props.role} role_id={this.state.role_id} showDetail={(id) => this.showDetail(id)} />\n                                            default: {\n                                                return <Employees role={this.props.role} role_id={this.state.role_id} showDetail={(id) => this.showDetail(id)} />\n                                            }\n                                        }\n\n\n                                    })()}\n\n                                </Cell>\n                            </Grid>\n                        )\n                    }\n                })()}\n\n            </div>\n        )\n    }\n}","import Container from './Container'\n\nexport default {\n    routeProps: {\n        path: '/employees',\n        exact: true,\n        component: Container,\n    },\n    name: 'Container',\n}","import Preferences from '../../../components/Preferences'\n\nexport default {\n    routeProps: {\n        path: '/employees/setting/preferences',\n        exact: true,\n        component: Preferences,\n    },\n    name: 'Preferences',\n}","import Profile from '../../../components/Profile'\n\nexport default {\n    routeProps: {\n        path: '/employees/setting/profile',\n        exact: true,\n        component: Profile,\n    },\n    name: 'Profile',\n}","import ChangePassword from '../../../components/ChangePassword'\n\nexport default {\n    routeProps: {\n        path: '/employees/setting/changepwd',\n        exact: true,\n        component: ChangePassword,\n    },\n    name: 'ChangePassword',\n}","import React,{Component} from 'react'\nimport { Link } from \"react-router-dom\";\nimport {Grid,TextField,Button,Toolbar,SelectField,Card, Cell,DatePicker,MenuButton,Chip} from 'react-md'\nimport axios from 'axios' \nimport $ from 'jquery/dist/jquery.js'\nimport qs from 'query-string'\nimport dateformat from 'dateformat'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\n\n\nexport default class Form  extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            editor:true,\n            status:[],\n            structures:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            title:'',\n            module_id:'',\n            role_id:[],\n            description:'',\n            created_by : payload.userId,\n            roles:[],\n        }\n    }\n    async componentDidMount() {\n\n        var parsed = qs.parse(window.location.search)\n        this.setState({_id : parsed.id})\n\n        try{\n            await axios.get(`/api/employee-structures`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    \n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.structure,\n                            value:item._id\n                        }\n\n                        dt[i] = obj\n                        \n                    })\n                    this.setState({structures:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await axios.get(`/api/employee-status`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    var dt = []\n                    \n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.status,\n                            value:item._id\n                        }\n\n                        dt[i] = obj\n                        \n                    })\n                    this.setState({status:dt})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        if (this.state._id !=='' ) {\n            try{\n                await axios.get(`/api/employee/${this.state._id}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            this.setState({\n                                _id: item._id,\n                                full_name:item.full_name,\n                                nick_name:item.nick_name,\n                                structure_id:item.structure_id,\n                                join_date : dateformat(item.join_date,'yyyy-mm-dd'),\n                                phone_number : item.phone_number,\n                                email : item.email,\n                                status_id : item.status_id,\n                            })\n                            return false\n                        })\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({dialogVisible:true})\n    }\n\n    onChangeStructureId = async (evt) => {\n        this.setState({structure_id:evt})\n\n    }\n\n    onChangeFullName = async (evt) => {\n        this.setState({full_name:evt})\n\n    }\n\n    onChangeNickName= async (evt) => {\n        this.setState({nick_name:evt})\n\n    }\n\n    onChangePhoneNumber = async (evt) => {\n        this.setState({phone_number:evt})\n\n    }\n\n    onChangeEmail = async (evt) => {\n        this.setState({email:evt})\n\n    }\n\n    onChangeStatusId= (evt) => {\n        this.setState({status_id:evt})\n    }\n\n    onChangeJoinDate  = (evt) => {\n        this.setState({join_date:dateformat(evt,'yyyy-mm-dd')})\n    }\n\n    \n\n   \n    save  = async() => {\n        const body = {\n            full_name : this.state.full_name,\n            nick_name : this.state.nick_name,\n            structure_id  : this.state.structure_id,\n            join_date : this.state.join_date,\n            phone_number : this.state.phone_number,\n            email : this.state.email,\n            status_id : this.state.status_id,\n\n        }\n\n        if (this.state._id === '' || this.state._id === null || this.state._id === undefined) {\n           \n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/employee`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        \n                        this.setState({\n                            full_name : '',\n                            nick_name : '',\n                            structure_id  : '',\n                            join_date : '',\n                            phone_number : '',\n                            email : '',\n                            status_id : '',\n                        })\n                        window.history.go(-1)\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.updated_by = this.state.created_by\n            try {\n                await axios.put(`/api/employee/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.setState({\n                            full_name : '',\n                            nick_name : '',\n                            structure_id  : '',\n                            join_date : '',\n                            phone_number : '',\n                            email : '',\n                            status_id : '',\n                        })\n                        window.history.go(-1)\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n       \n        return(\n            <div>\n                <Grid>\n                <Toolbar \n                        title={<b>Form Employee</b>}\n                        nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                 <Grid className=\"grid-example\">\n                    \n                    <Cell size={12}>\n                        <Card style={{padding:'2.5vw'}}>\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"Full Name\"\n                                placeholder=\"Full Name\"\n                                value={this.state.full_name}\n                                onChange={this.onChangeFullName}\n                            />\n                            <TextField\n                                id=\"simple-action-dialog-field\"\n                                label=\"Nick Name\"\n                                placeholder=\"Nick Name\"\n                                value={this.state.nick_name}\n                                onChange={this.onChangeNickName}\n                            />\n                            <SelectField\n                                className=\"md-cell md-cell--4\"\n                                id=\"simple-action-dialog-field\"\n                                label=\"Structure Name\"\n                                placeholder=\"Structure Name\"\n                                value={this.state.structure_id}\n                                menuItems={this.state.structures}\n                                onChange={this.onChangeStructureId}\n                            />\n                            <TextField\n                             \n                                id=\"simple-action-dialog-field\"\n                                label=\"Phone Number\"\n                                placeholder=\"Phone Number\"\n                                value={this.state.phone_number}\n                                onChange={this.onChangePhoneNumber}\n                            />\n                            <TextField\n                                \n                                id=\"simple-action-dialog-field\"\n                                label=\"Email\"\n                                placeholder=\"Email\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                            />\n                            <DatePicker\n                            id=\"appointment-date-landscape\"\n                            label=\"Join date\"\n                            className=\"md-cell\"\n                            displayMode=\"landscape\"\n                            value={this.state.join_date}\n                            onChange={this.onChangeJoinDate}\n                            />\n                            <SelectField\n                                  className=\"md-cell md-cell--4\"\n                                id=\"simple-action-dialog-field\"\n                                label=\"Status\"\n                                placeholder=\"Status\"\n                                value={this.state.status_id}\n                                menuItems={this.state.status}\n                                onChange={this.onChangeStatusId}\n                            />\n                            <hr />\n                            <Button raised primary onClick={this.save} >Submit</Button>\n                        </Card>\n                    </Cell>\n                </Grid>\n                \n            </div>\n           \n        )\n    }\n}\n\n","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/employees/form',\n        exact: true,\n        component: Form,\n    },\n    name: 'Form',\n}","import React,{Component, Fragment} from 'react'\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button, ListItem, List, Subheader, Divider, FontIcon,Card,Avatar} from 'react-md'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\n\nimport dateformat from 'dateformat'\nimport {Session} from 'bc-react-session'\nconst {payload} =Session.get()\n\nexport default class Notifications extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            _id:'',\n            avg_rating:0,\n            client_code:'',\n            client_name:'',\n            tab:'onprogress',\n            currentPage : 1,\n            displayPerPage : 25,\n            totalShowed : 0,\n            isLoading : true\n        }\n    \n        this.socket = io(socket_address) \n        \n            this.socket.on('RECEIVE_NOTIFICATION', (data) => {\n                if (data.to_user_id === payload.userId) {\n                    this.componentDidMount()\n                }\n                \n            })\n            this.socket.on('READ_NOTIFICATION', (data) => {\n                this.componentDidMount()\n            })\n\n    }\n    \n\n\n    componentDidMount= async  () => {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        \n\n        try{\n            await  axios.get(`/api/notifications-per-user-total/${payload.userId}?displayPerPage=${0}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({total_data : response.data.data[0].total})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${this.state.displayPerPage}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data,isLoading:false})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n\n    }\n\n    readNotif = async (notif_id) => {\n        const body = {\n          is_read : 1\n        }\n         try{\n           axios.put(`/api/notification/${notif_id}`,body)\n           .then(response => {\n             if (response.data.status === 200) {\n   \n             }\n           })\n         }catch(e){\n           console.log(e)\n         }\n    }\n\n    loadMore = async() => {\n\n        const currentPage = this.state.currentPage+1\n        const displayPerPage = this.state.displayPerPage * currentPage\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${displayPerPage}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: currentPage,\n            totalShowed: displayPerPage\n        })\n    }\n    \n\n    render() \n    {\n       if (this.state.isLoading) {\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <div className=\"notification\">\n                        <p>Loading ... </p>\n                    </div>\n                </Cell>\n             </Grid>\n        )\n       }  else \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>All Notifications</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                </Cell>\n                <Cell size={12}>\n                    <Card style={{padding: '2.5vw',}}>\n                        <List className=\"md-cell \" style={{width:'100%',listStyle:'none'}}>\n                            <Subheader primaryText=\"Notifications\" />\n                            {this.state.data.map((item,i) => (\n                                <Link to={item.link} onClick={() => this.readNotif(item._id)} >\n                                    <ListItem\n                                        //  style={{backgroundColor: item.is_read === 0 ? '#cae7fa' : ''}}\n                                        leftAvatar={<Avatar src={item.avatar_url}/>}\n                                        primaryText={<Fragment> <b>{item.full_name !== '' &&  item.full_name !== null ? item.full_name : item.client_name}</b> &nbsp; {item.is_read === 0 ? <span className=\"tag \" style={{backgroundColor:'#cae7fa'}}><b>UNREAD</b></span>:''} </Fragment>}\n                                        secondaryText={<Fragment>  {item.notification} &nbsp; <p>{dateformat(item.created_at,'dd mmm yyyy, HH:MM' )}</p> </Fragment> }\n                                        threeLines\n                                    />\n                                </Link>\n                            ))}\n                            \n                                                       \n                        </List>\n                        { this.state.totalShowed < this.state.total_data ? (\n                            <a onClick={this.loadMore}><h4 >Load More ... </h4></a>\n                        ):'' }\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import employees from './employees'\nimport status from './status'\nimport report from './report'\nimport home from '../home'\nimport preferences from \"./preferences\"\nimport profile from \"./profile\"\nimport changepwd from \"./changepwd\"\nimport form from '../menus/employees/form'\nimport notifications from './notifications'\n\n\nexport default [\n    employees,status,report,home,preferences,profile,changepwd,form,notifications\n]","import React from 'react'\nimport Notifications from './Notifications'\n\nexport default {\n    routeProps: {\n        path: '/employees/notifications',\n        exact: true,\n        component: Notifications,\n    },\n    name: 'Notifications',\n}","import React, { Component } from 'react'\nimport { Link, Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { Button, Drawer, Toolbar } from 'react-md'\nimport { UserDropdownMenu, Notifications, ApplicationMenu, NavLink } from '../../../components'\nimport axios from 'axios'\nimport menus from '../menus'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\nvar inboxListItems = []\n\nexport default class Home extends Component {\n  state = { visible: false, position: 'left', module_title: this.props.module_title, avatar_url: '' }\n\n  async componentDidMount() {\n    window.document.title = 'Employees Management PT MSO'\n    var moduleName = window.location.href.split('/')\n    try {\n      await axios.get(`/api/menu-by-module-link/${moduleName[3]}`)\n        .then(response => {\n          var dt = []\n          response.data.data.map((item, i) => {\n            var obj = {\n              label: item.menu,\n              to: item.link,\n              icon: 'list',\n            }\n            dt[i] = (<NavLink key={i} label={item.menu} to={item.link} icon={item.icon} />)\n          })\n          inboxListItems = dt\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n    try {\n      await axios.get(`/api/user/${payload.userId}`)\n        .then(response => {\n          if (response.data.status === 200) {\n            response.data.data.map((item, i) => {\n              this.setState({\n                avatar_url: item.avatar_url\n              })\n            })\n\n          }\n\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n    var module_id = ''\n    var moduleName = window.location.href.split('/')\n    try {\n      await axios.get(`/api/module-by-link/${moduleName[3]}`)\n        .then(response => {\n\n          response.data.data.map((item, i) => {\n            module_id = item._id\n            return false\n          })\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n    try {\n      await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n        .then(response => {\n\n          if (response.data.status === 200) {\n            this.setState({ role: response.data.data[0].role, role_id: response.data.data[0].role_id })\n          }\n\n        })\n    } catch (error) {\n      console.log(error)\n    }\n\n    try {\n      await axios.get(`/api/ccs-notifications-per-user/${payload.userId}`)\n        .then(response => {\n\n          if (response.data.status === 200) {\n            this.setState({ notifications: response.data.data })\n          }\n\n        })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  openDrawerLeft = () => {\n    this.setState({ visible: true, position: 'left' });\n  };\n\n\n  closeDrawer = () => {\n    this.setState({ visible: false });\n  };\n\n  handleVisibility = (visible) => {\n    this.setState({ visible });\n  };\n\n  render() {\n    const { visible, position } = this.state;\n    const isLeft = position === 'left';\n\n    const closeBtn = <Button icon onClick={this.closeDrawer}>{isLeft ? 'arrow_back' : 'close'}</Button>;\n    if (payload.userId === '' || payload.userId === null || payload.userId === undefined) {\n      return (\n        <Redirect to='/' />\n      )\n    } else\n      return (\n        <Router>\n          <div style={{ marginTop: '70px' }}>\n            <Toolbar\n              fixed\n              colored\n              // nav={<Button icon onClick={this.openDrawerLeft} >menu</Button>}\n              nav={<a href={'/'} style={{ color: '#fff' }}><Button icon  >home</Button></a>}\n              title={this.state.module_title}\n              style={{ backgroundColor: this.props.bg_color }}\n              actions={[(<ApplicationMenu />), (<Notifications />), (<UserDropdownMenu avatar={this.state.avatar_url} />)]}\n            />\n            <div className=\"content\">\n              <Switch>\n                {menus.map((_, i) => (\n                  <Route path={_.routeProps.path} exact={_.routeProps.exact} key={_.name} component={() => <_.routeProps.component role={this.state.role} role_id={this.state.role_id} />} />\n                ))}\n              </Switch>\n            </div>\n            {/*} <Drawer\n          id=\"simple-drawer-example\"\n          type={Drawer.DrawerTypes.TEMPORARY}\n          visible={visible}\n          position={position}\n          onVisibilityChange={this.handleVisibility}\n          navItems={inboxListItems}\n          header={(\n            <Toolbar\n              nav={isLeft ? (<Button icon onClick={() => window.location.href='/'} >home</Button> ) : closeBtn}\n              actions={isLeft ? closeBtn : null}\n              className=\"md-divider-border md-divider-border--bottom\"\n            />\n          )}\n        />\n          {*/}\n          </div>\n        </Router>\n      );\n  }\n} \n","import React,{Component} from 'react'\nimport Home from './home/Home'\n\nclass Employees extends Component{\n    render() {\n        return(\n            <Home module_title='Employees Mng' bg_color='#00bc94'/>\n        )\n    }\n} \n\nexport default {\n    routeProps: {\n        path: '/employees',\n        exact: true,\n        component: Employees,\n    },\n    name: 'Employees',\n}","import React, { Fragment, Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, TextField, Button, DialogContainer, Card, Snackbar, DatePicker, Avatar, Cell, MenuButton, SelectField, ListItem } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class LetterIn extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isLoading: true,\n            module_id: '',\n            role: '',\n            role_id: '',\n            data: [],\n            data_disposition: [],\n            dataToExport: [],\n            dataToExportPDF: [],\n            dataToExportDisposition: [],\n            dataToExportPDFDisposition: [],\n            modules: [],\n            key: '',\n            keyDisposition: '',\n            total_data: 0,\n            toasts: '',\n            _id: '',\n            isFilter: false,\n            isFilterDisposition: false,\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            created_by: payload.userId,\n            date_from: '',\n            date_to: '',\n            date_from_disposition: '',\n            date_to_disposition: '',\n            clients: [],\n            client_id: '',\n            client_id_disposition: '',\n            status_id: '',\n            list_contain: 'letter-in-all',\n            role_create: false,\n            role_update: false,\n            role_read: false,\n            role_delete: false,\n            currentPage: 1,\n            currentPageDisposition: 1,\n            displayPerPage: 50,\n        }\n\n        const socket = io(socket_address) //SERVER MSO\n        socket.on('LETTER_IN_ADDED', (data) => {\n            this.fetchData()\n        })\n\n        socket.on('LETTER_IN_DISPOSITION_ADDED', (data) => {\n            this.fetchData()\n        })\n\n        socket.on('LETTER_OUT_APPROVAL_APPROVED_ADDED', (data) => {\n            this.fetchData()\n        })\n\n    }\n\n\n\n\n    componentDidMount = () => {\n        this.setState({ isLoading: (true) })\n        this.loadRole()\n        this.fetchData()\n\n\n\n    }\n\n    async loadRole() {\n\n\n    }\n\n    async  fetchData() {\n        var moduleName = window.location.href.split('/')\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        this.setState({ module_id: item._id })\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${this.state.module_id}/${this.state.created_by}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.state.role = response.data.data[0].role\n                        this.state.role_id = response.data.data[0].role_id\n                        this.loadROleControl(response.data.data[0].role_id)\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        if (this.state.role.includes('Customer')) {\n\n            try {\n                await axios.get(`/api/user/${this.state.created_by}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ client_id: response.data.data[0].client_id })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                await axios.get(`/api/sism-letters_out-total?client_id=${this.state.client_id}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                await axios.get(`/api/sism-letters_out?client_id=${this.state.client_id}&is_approved=1&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                            this.setState({ isLoading: false })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n\n            this.loadClients()\n            console.log(this.state.role)\n\n            if (this.state.role.includes('Direktur Utama') || this.state.role.includes('Superadmin') || this.state.role.includes('Administrator')) {\n                try {\n                    await axios.get(`/api/sism-letters_in-total`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n\n                try {\n                    await axios.get(`/api/sism-letters_in?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                                this.setState({ isLoading: false })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            } else {\n\n                try {\n                    await axios.get(`/api/sism-letters_in-total`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n\n                try {\n                    await axios.get(`/api/sism-letters_in?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                                this.setState({ isLoading: false })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n                try {\n                    await axios.get(`/api/sism-letters_in-total?handled_by_user_id=${this.state.created_by}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ total_data_disposition: response.data.data[0].total })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n\n                try {\n                    await axios.get(`/api/sism-letters_in?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}&handled_by_user_id=${this.state.created_by}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ data_disposition: response.data.data })\n                                this.setState({ isLoading: false })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n\n\n        }\n    }\n\n\n\n    async loadClients() {\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (item.client_code > 0) {\n                                var obj = {\n                                    label: item.client_code + '-' + item.client_name,\n                                    value: item._id\n                                }\n                                dt[i] = obj\n                            }\n\n                            return false\n                        })\n                        this.setState({ clients: (dt) })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async loadROleControl(role_id) {\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: window.location.pathname, role_id: role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({ role_read: (true) })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({ role_create: (true) })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({ role_update: (true) })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({ role_delete: (true) })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    search = async (evt) => {\n\n        this.setState({ key: evt })\n        var filterString = `&date_from=${(this.state.date_from)}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n        if (this.state.role.includes('Customer')) {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}`\n            try {\n                axios.get(`/api/sism-letters_out-total${filterString}&client_id=${this.state.client_id}&key=${this.state.key}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                axios.get(`/api/sism-letters_out${filterString}&client_id=${this.state.client_id}&key=${this.state.key}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: (response.data.data) })\n                            this.setState({ isLoading: (false) })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        } else {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n\n            try {\n                axios.get(`/api/sism-letters_in-total${filterString}&key=${evt}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                axios.get(`/api/sism-letters_in${filterString}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: (response.data.data) })\n                            this.setState({ isLoading: (false) })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n\n        this.setState({ currentPage: 1 })\n    }\n\n    searchDisposition = async (evt) => {\n\n        this.setState({ keyDisposition: evt })\n\n        var filterString = `&date_from=${this.state.date_from_disposition}&date_to=${this.state.date_to_disposition}&client_id=${this.state.client_id_disposition}`\n\n        try {\n            await axios.get(`/api/sism-letters_in-total?handled_by_user_id=${this.state.created_by}${filterString}&key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data_disposition: response.data.data[0].total })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/sism-letters_in?currentPage=${this.state.currentPageDisposition}&displayPerPage=${this.state.displayPerPage}&handled_by_user_id=${this.state.created_by}${filterString}&key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data_disposition: response.data.data })\n                        this.setState({ isLoading: false })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n        this.setState({ currentPageDisposition: 1 })\n    }\n\n    setDelete(id) {\n        this.setState({ _id: (id) })\n        this.setState({ dialogDeleteVisible: true })\n    }\n\n    deleteLetter = async () => {\n        if (this.state.role.includes('Customer')) {\n            try {\n                axios.delete(`/api/sism-letter_out/${this.state._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.notify('SUCCESS', response.data.message)\n                            // fetchData()\n                            this.setState({ dialogDeleteVisible: false })\n                            this.setState({ _id: '' })\n                            this.fetchData()\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            try {\n                axios.delete(`/api/sism-letter_in/${this.state._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.notify('SUCCESS', response.data.message)\n                            // fetchData()\n                            this.setState({ dialogDeleteVisible: false })\n                            this.setState({ _id: '' })\n                            this.fetchData()\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: (i) })\n        this.loadDataByPage(i)\n        // window.scrollTo(0,  tableData.current.offsetTop)\n\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: (endPage) })\n        this.loadDataByPage(endPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: (1) })\n        this.loadDataByPage(1)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n    }\n\n    setPageNext() {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: (nextPage) })\n        this.loadDataByPage(nextPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPagePrevious() {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: (prevPage) })\n        this.loadDataByPage(prevPage)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setActivePageDisposition = (i) => {\n\n        this.setState({ currentPageDisposition: (i) })\n        this.loadDataByPageDisposition(i)\n        // window.scrollTo(0,  tableData.current.offsetTop)\n\n\n    }\n    isActiveDisposition = (i) => {\n        if (i === this.state.currentPageDisposition) {\n            return true\n        }\n    }\n\n    setPageEndDisposition = () => {\n        var endPage = Math.ceil(this.state.total_data_disposition / this.state.displayPerPage)\n        this.setState({ currentPageDisposition: (endPage) })\n        this.loadDataByPageDisposition(endPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageStartDisposition = () => {\n        this.setState({ currentPageDisposition: (1) })\n        this.loadDataByPageDisposition(1)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n    }\n\n    setPageNextDisposition = () => {\n        var i = this.state.currentPageDisposition\n        const endPage = Math.ceil(this.state.total_data_disposition / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPageDisposition: (nextPage) })\n        this.loadDataByPageDisposition(nextPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPagePreviousDisposition = () => {\n        var i = this.state.currentPageDisposition\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPageDisposition: (prevPage) })\n        this.loadDataByPageDisposition(prevPage)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    async  loadDataByPage(i) {\n        this.setState({ isLoading: (true) })\n        var evt = this.state.key\n        var filterString = `&date_from=${(this.state.date_from)}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n        if (this.state.role.includes('Customer')) {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}`\n\n\n            try {\n                axios.get(`/api/sism-letters_out${filterString}&client_id=${this.state.client_id}&key=${this.state.key}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: (response.data.data) })\n                            this.setState({ isLoading: (false) })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        } else {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n\n\n            try {\n                axios.get(`/api/sism-letters_in${filterString}&currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: (response.data.data) })\n                            this.setState({ isLoading: (false) })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n\n\n\n    }\n\n    async  loadDataByPageDisposition(i) {\n        this.setState({ isLoading: true })\n        var filterString = `&date_from=${this.state.date_from_disposition}&date_to=${this.state.date_to_disposition}&client_id=${this.state.client_id_disposition}`\n\n        try {\n            await axios.get(`/api/sism-letters_in?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&handled_by_user_id=${this.state.created_by}${filterString}&key=${this.state.keyDisposition}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data_disposition: response.data.data })\n                        this.setState({ isLoading: false })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n\n        var evt = this.state.key\n        var filterString = `&date_from=${(this.state.date_from)}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n        if (this.state.role.includes('Customer')) {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}`\n\n\n            try {\n                await axios.get(`/api/sism-letters_out${filterString}&client_id=${this.state.client_id}&key=${this.state.key}&currentPage=${0}&displayPerPage=${0}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map(async (item, i) => {\n                                var obj = {}\n                                obj['No'] = (i + 1)\n                                obj['Letter Number'] = item.letter_number\n                                obj['Subject'] = item.subject\n                                obj['FROM'] = 'PT MSO Purwokerto'\n\n\n                                obj['Date'] = dateformat(item.letter_date, 'dd mmm yyyy')\n                                dt.push(obj)\n                                return false\n                            })\n\n                            dataToExport = dt\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        } else {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n            if (this.state.role.includes('Direktur Utama') || this.state.role.includes('admin')) {\n\n                try {\n                    await axios.get(`/api/sism-letters_in${filterString}&currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                var dt = []\n                                response.data.data.map(async (item, i) => {\n                                    var obj = {}\n                                    obj['No'] = (i + 1)\n                                    obj['Letter Number'] = item.letter_number\n                                    obj['Subject'] = item.subject\n                                    obj['FROM'] = ''\n                                    if (item.client_name !== null && item.client_name !== '' && item.client_name !== undefined) {\n                                        obj['FROM'] += item.client_name\n                                    } else if (item.sender !== null && item.sender !== '' && item.sender !== undefined) {\n                                        obj['FROM'] += item.sender\n                                    }\n\n                                    obj['Date'] = dateformat(item.letter_date, 'dd mmm yyyy')\n                                    dt.push(obj)\n\n                                    return false\n                                })\n\n                                dataToExport = dt\n\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            } else {\n\n\n                try {\n                    await axios.get(`/api/sism-letters_in${filterString}&currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                var dt = []\n                                response.data.data.map(async (item, i) => {\n                                    var obj = {}\n                                    obj['No'] = (i + 1)\n                                    obj['Letter Number'] = item.letter_number\n                                    obj['Subject'] = item.subject\n                                    obj['FROM'] = ''\n                                    if (item.client_name !== null && item.client_name !== '' && item.client_name !== undefined) {\n                                        obj['FROM'] += item.client_name\n                                    } else if (item.sender !== null && item.sender !== '' && item.sender !== undefined) {\n                                        obj['FROM'] += item.sender\n                                    }\n\n                                    obj['Date'] = dateformat(item.letter_date, 'dd mmm yyyy')\n                                    dt.push(obj)\n                                    return false\n                                })\n\n                                dataToExport = dt\n\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All Incoming Letter  per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    exportXLSDisposition = async () => {\n        var dataToExport = []\n\n        var filterString = `?date_from=${this.state.date_from_disposition}&date_to=${this.state.date_to_disposition}&client_id=${this.state.client_id_disposition}`\n\n        try {\n            await axios.get(`/api/sism-letters_in${filterString}&currentPage=${0}&displayPerPage=${0}&handled_by_user_id=${this.state.created_by}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map(async (item, i) => {\n                            var obj = {}\n                            obj['No'] = (i + 1)\n                            obj['Letter Number'] = item.letter_number\n                            obj['Subject'] = item.subject\n                            obj['FROM'] = ''\n                            if (item.client_name !== null && item.client_name !== '' && item.client_name !== undefined) {\n                                obj['FROM'] += item.client_name\n                            } else if (item.sender !== null && item.sender !== '' && item.sender !== undefined) {\n                                obj['FROM'] += item.sender\n                            }\n\n                            obj['Date'] = dateformat(item.letter_date, 'dd mmm yyyy')\n                            dt.push(obj)\n                            return false\n                        })\n\n                        dataToExport = dt\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All Incoming Disposition Letter  per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async () => {\n        var evt = this.state.key\n        var filterString = `&date_from=${(this.state.date_from)}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n\n        if (this.state.role.includes('Customer')) {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}`\n\n\n            try {\n                await axios.get(`/api/sism-letters_out${filterString}&client_id=${this.state.client_id}&key=${this.state.key}&currentPage=${0}&displayPerPage=${0}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ dataToExportPDF: (response.data.data) })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        } else {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n            if (this.state.role.includes('Direktur Utama') || this.state.role.includes('admin')) {\n\n                try {\n                    await axios.get(`/api/sism-letters_in${filterString}&currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ dataToExportPDF: response.data.data })\n\n\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            } else {\n\n\n                try {\n                    await axios.get(`/api/sism-letters_in${filterString}&currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ dataToExportPDF: response.data.data })\n\n\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            }\n        }\n\n    }\n\n    beforeGetContentDispoition = async () => {\n\n        var filterString = `?date_from=${this.state.date_from_disposition}&date_to=${this.state.date_to_disposition}&client_id=${this.state.client_id_disposition}`\n\n        try {\n            await axios.get(`/api/sism-letters_in${filterString}&currentPage=${0}&displayPerPage=${0}&handled_by_user_id=${this.state.created_by}&key=${this.state.keyDisposition}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ dataToExportPDFDisposition: response.data.data })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    onChangeClientId = (val) => {\n        this.setState({ client_id: val })\n    }\n    onChangeFromDate = (val) => {\n        this.setState({ date_from: val })\n    }\n    onChangeToDate = (val) => {\n        this.setState({ date_to: val })\n    }\n\n    onChangeClientIdDisposition = (val) => {\n        this.setState({ client_id_disposition: val })\n    }\n    onChangeFromDateDisposition = (val) => {\n        this.setState({ date_from_disposition: val })\n    }\n    onChangeToDateDisposition = (val) => {\n        this.setState({ date_to_disposition: val })\n    }\n\n    filter = (val) => {\n        this.setState({ isLoading: true })\n        var evt = this.state.key\n\n        if (this.state.role.includes('Customer')) {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}`\n            try {\n                axios.get(`/api/sism-letters_out-total${filterString}&client_id=${this.state.client_id}&key=${this.state.key}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                axios.get(`/api/sism-letters_out${filterString}&client_id=${this.state.client_id}&key=${this.state.key}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}&is_approved=1`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: (response.data.data) })\n                            this.setState({ isLoading: (false) })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        } else {\n            var filterString = `?date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}`\n\n            try {\n                axios.get(`/api/sism-letters_in-total${filterString}&key=${this.state.key}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                axios.get(`/api/sism-letters_in${filterString}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: (response.data.data) })\n                            this.setState({ isLoading: (false) })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n\n        this.setState({ currentPage: 1 })\n    }\n\n    filterDisposition = async () => {\n        this.setState({ isLoading: true })\n        var filterString = `?date_from=${this.state.date_from_disposition}&date_to=${this.state.date_to_disposition}&client_id=${this.state.client_id_disposition}`\n\n        try {\n            axios.get(`/api/sism-letters_in-total${filterString}&handled_by_user_id=${this.state.created_by}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data_disposition: response.data.data[0].total })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            axios.get(`/api/sism-letters_in${filterString}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}&handled_by_user_id=${this.state.created_by}&key=${this.state.keyDisposition}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data_disposition: (response.data.data) })\n                        this.setState({ isLoading: (false) })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        this.setState({ currentPageDisposition: 1 })\n\n    }\n\n    resetFilter = () => {\n        if (this.state.role.includes('Customer')) {\n            this.setState({ date_from: '', date_to: '' })\n        } else {\n            this.setState({ client_id: '', date_from: '', date_to: '' })\n        }\n\n    }\n\n    resetFilterDisposition = () => {\n\n        this.setState({ client_id_disposition: '', date_from_disposition: '', date_to_disposition: '' })\n\n\n    }\n\n    setTabList = (act) => {\n        if (act === 'create') {\n            this.setState({ contain: act })\n        } else {\n            this.setState({ list_contain: act })\n        }\n\n    }\n\n    LetterInAll = () => {\n        const columns = !this.state.role.includes('Customer') ?\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: '', width: '8%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'From', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n            :\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'From', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n        const pages = []\n\n        const m = this.state.currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (this.state.currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        return (\n            <Fragment>\n                <Grid className=\"grid-example\">\n                    <Cell size={6} ></Cell>\n                    <Cell size={4} >\n                        <TextField\n                            icon={<i className=\"fa fa-search\" />}\n                            value={this.state.key}\n                            placeholder=\"Search ... \"\n                            onChange={(evt) => this.search(evt)}\n                        />\n                    </Cell>\n                    <Cell size={2} style={{ alignItems: 'right' }} >\n                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} style={{ borderRadius: '4px' }}><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                            }, {\n                                primaryText: (<ReactToPrint\n                                    onBeforeGetContent={this.beforeGetContent}\n                                    trigger={() => <p>PDF</p>}\n                                    content={() => this.componentRef}\n                                />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\" style={{ borderRadius: '4px' }} >\n                                <i className=\"fa fa-print\"></i>\n                                &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                role={this.state.role}\n                                data={this.state.dataToExportPDF}\n                            />\n                        </div>\n                    </Cell>\n                </Grid>\n                {this.state.isFilter ? (\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '10px', borderRadius: '8px' }} >\n                                <h4>Filter</h4>\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"From Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.onChangeFromDate}\n                                    value={this.state.date_from}\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"To Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.onChangeToDate}\n                                    value={this.state.date_to}\n                                />\n                                {!this.state.role.includes('Customer') ? (\n                                    <SelectField\n                                        leftIcon={\"view_list\"}\n                                        label=\"Select BPR/Client\"\n                                        fullWidth\n                                        menuItems={this.state.clients}\n                                        onChange={this.onChangeClientId}\n                                        value={this.state.client_id}\n                                    />\n                                ) : ''}\n                                <br />\n                                <Button raised primary onClick={this.filter}>Apply</Button>\n                                <Button flat onClick={this.resetFilter} >Reset</Button>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                ) : ''}\n                <Grid className=\"grid-example\" >\n                    <Cell size={12}>\n                        <Card style={{ padding: '10px', borderRadius: '8px', overflowX: 'scroll' }} >\n                            <table className=\"table  is-striped\">\n                                <thead>\n                                    <tr>\n                                        {\n                                            columns.map((col, i_col) => (\n                                                <th>{col.label}</th>\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.data.map((item, i) => {\n                                        if (this.state.role.includes('Customer')) {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}><Avatar>{'PT MSO Purwokerto'.charAt(0)}</Avatar></td>\n                                                    <td style={{ justifyContent: 'space-between' }} >\n                                                        <Link to={this.state.role.includes('Customer') ? `/sism/letter-in/detail?id=${item._id}` : `/sism/letter-in/detail?id=${item._id}`}><b>{item.letter_number}</b></Link>\n                                                       \n                                                    </td>\n                                                    <td  >\n                                                        <Link to={this.state.role.includes('Customer') ? `/sism/letter-in/detail?id=${item._id}` : `/sism/letter-in/detail?id=${item._id}`}><b>{item.subject}</b></Link>\n                                                       \n                                                    </td>\n                                                    <td width={'20%'}>\n                                                        PT MSO Purwokerto\n                                                </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                </tr>\n                                            )\n                                        } else {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}><Avatar>{item.client_code === null ? '-' : item.client_code}</Avatar></td>\n                                                    <td style={{ justifyContent: 'space-between' }} >\n                                                        <Link to={`/sism/letter-in/detail?id=${item._id}`}><b>{item.letter_number}</b></Link>\n\n                                                    </td>\n                                                    <td>\n                                                        {item.total_reply > 0 ? (<span className=\"tag\" style={{ padding: '8px' }}><b> {item.total_reply} Balasan</b></span>) : ''}\n                                                    </td>\n                                                    <td  >\n                                                        <Link to={`/sism/letter-in/detail?id=${item._id}`}><b>{item.subject}</b></Link>\n                                                    </td>\n\n                                                    <td width={'20%'}>\n                                                        {item.client_name === null ? item.sender : item.client_name}\n                                                    </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                    {this.state.role_delete && this.state.role_update ? (\n                                                        <td>\n                                                            <LetterInMenu id={item._id} setUpdate={(id) => this.setUpdate(id)} setDelete={(id) => this.setDelete(id)} />\n                                                        </td>\n                                                    ) : ''}\n                                                </tr>\n                                            )\n                                        }\n                                    })}\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                </Grid>\n\n\n                <Grid className=\"grid-example\" >\n                    <Cell >\n                        {pages.length > 0 ? (\n                            <div className=\"container\">\n                                <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ) : (\n                                            <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                        )\n                                ))}\n                                <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                            </div>\n\n                        ) : ''}\n                    </Cell>\n                </Grid>\n            </Fragment>\n        )\n    }\n\n    LetterInDisposition = () => {\n        const columns =\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: '', width: '8%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'From', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n\n        const pages = []\n\n        const m = this.state.currentPageDisposition + 2\n        const endPage = Math.ceil(this.state.total_data_disposition / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (this.state.currentPageDisposition - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        return (\n            <Fragment>\n                <Grid className=\"grid-example\">\n                    <Cell size={6} ></Cell>\n                    <Cell size={4} >\n                        <TextField\n                            icon={<i className=\"fa fa-search\" />}\n                            value={this.state.keyDisposition}\n                            placeholder=\"Search ... \"\n                            onChange={(evt) => this.searchDisposition(evt)}\n                        />\n                    </Cell>\n                    <Cell size={2} style={{ alignItems: 'right' }} >\n                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilterDisposition: !this.state.isFilterDisposition })} style={{ borderRadius: '4px' }}><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLSDisposition}>XLS</p>,\n                            }, {\n                                primaryText: (<ReactToPrint\n                                    onBeforeGetContent={this.beforeGetContentDispoition}\n                                    trigger={() => <p>PDF</p>}\n                                    content={() => this.componentRef}\n                                />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\" style={{ borderRadius: '4px' }} >\n                                <i className=\"fa fa-print\"></i>\n                                &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                role={this.state.role}\n                                data={this.state.dataToExportPDFDisposition}\n                            />\n                        </div>\n                    </Cell>\n                </Grid>\n                {this.state.isFilterDisposition ? (\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '10px', borderRadius: '8px' }} >\n                                <h4>Filter</h4>\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"From Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.onChangeFromDateDisposition}\n                                    value={this.state.date_from_disposition}\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"To Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.onChangeToDateDisposition}\n                                    value={this.state.date_to_disposition}\n                                />\n                                {!this.state.role.includes('Customer') ? (\n                                    <SelectField\n                                        leftIcon={\"view_list\"}\n                                        label=\"Select BPR/Client\"\n                                        fullWidth\n                                        menuItems={this.state.clients}\n                                        onChange={this.onChangeClientIdDisposition}\n                                        value={this.state.client_id_disposition}\n                                    />\n                                ) : ''}\n                                <br />\n                                <Button raised primary onClick={this.filterDisposition}>Apply</Button>\n                                <Button flat onClick={this.resetFilterDisposition} >Reset</Button>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                ) : ''}\n\n                <Grid className=\"grid-example\" >\n                    <Cell size={12}>\n                        <Card style={{ padding: '10px', borderRadius: '8px', overflowX: 'scroll' }} >\n                            <table className=\"table  is-striped\">\n                                <thead>\n                                    <tr>\n                                        {\n                                            columns.map((col, i_col) => (\n                                                <th>{col.label}</th>\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.data_disposition.length > 0 ? (\n                                        <Fragment>\n                                            {this.state.data_disposition.map((item, i) => (\n                                                <tr>\n                                                    <td width={'5%'}><Avatar>{item.client_code === null ? '-' : item.client_code}</Avatar></td>\n                                                    <td style={{ justifyContent: 'space-between' }} >\n                                                        <Link to={`/sism/letter-in/detail?id=${item._id}`}><b>{item.letter_number}</b></Link>\n\n                                                    </td>\n                                                    <td>\n                                                        {item.total_reply > 0 ? (<span className=\"tag\" style={{ padding: '8px' }}><b> {item.total_reply} Balasan</b></span>) : ''}\n                                                    </td>\n                                                    <td  >\n                                                        <Link to={`/sism/letter-in/detail?id=${item._id}`}><b>{item.subject}</b></Link>\n                                                    </td>\n\n                                                    <td width={'20%'}>\n                                                        {item.client_name === null ? item.sender : item.client_name}\n                                                    </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                    {this.state.role_delete && this.state.role_update ? (\n                                                        <td>\n                                                            <LetterInMenu id={item._id} setUpdate={(id) => this.setUpdate(id)} setDelete={(id) => this.setDelete(id)} />\n                                                        </td>\n                                                    ) : ''}\n                                                </tr>\n                                            ))}\n                                        </Fragment>\n                                    ) : (\n                                            <tr>\n                                                <td colSpan={columns.length} >\n                                                    <div className=\"notification is-light\">\n                                                        <p>Data is empty ...</p>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )}\n\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                </Grid>\n\n\n                <Grid className=\"grid-example\" >\n                    <Cell >\n                        {pages.length > 0 ? (\n                            <div className=\"container\">\n                                <button className=\"button is-small is-info\" onClick={this.setPageStartDisposition} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPagePreviousDisposition}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActiveDisposition(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePageDisposition(page)}><b>{page}</b></button>\n                                    ) : (\n                                            <button className=\"button is-small \" onClick={() => this.setActivePageDisposition(page)}><b>{page}</b></button>\n                                        )\n                                ))}\n                                <button className=\"button is-small is-info\" onClick={this.setPageNextDisposition}><i className=\"fa fa-angle-right\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPageEndDisposition}><i className=\"fa fa-angle-double-right\"></i></button>\n                            </div>\n\n                        ) : ''}\n                    </Cell>\n                </Grid>\n            </Fragment>\n        )\n    }\n\n\n    render() {\n\n\n\n        const componentRef = ''\n\n        var tabList = []\n        if (this.state.role.includes('Customer') || this.state.role.includes('Direktur Utama') || this.state.role.includes('Superadmin') || this.state.role.includes('Admin')) {\n            tabList = [\n                { color: 'darkblue', action: 'letter-in-all', icon: 'fa fa-envelope', tooltip: (<b>All &nbsp; ({this.state.total_data})</b>) },\n\n            ]\n        } else {\n            tabList = [\n\n                { color: '#348066', action: 'letter-in-all', icon: 'fa fa-envelope', tooltip: (<b>All &nbsp; ({this.state.total_data})</b>) },\n                { color: 'darkblue', action: 'letter-in-disposition', icon: 'fa fa-envelope-o', tooltip: (<b>My Disposition&nbsp; ({this.state.total_data_disposition}) </b>) },\n            ]\n        }\n\n\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Loading data ...</p>\n                </div>\n            )\n        } else\n            return (\n                <div>\n                    {this.state.role_create ? (\n                        <Link to='/sism/letter-in/form'><Button style={{\n                            position: 'fixed',\n                            right: '10px',\n                            bottom: '20px',\n                            float: 'bottom'\n                        }} secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button></Link>\n                    ) : ''}\n\n                    <Grid className=\"grid-example\">\n                        <Cell size={6}>\n                            <span>\n                                <h2 className=\"md-cell md-cell--12\">\n                                    Incoming Letters\n                                </h2>\n\n                            </span>\n                        </Cell>\n\n                    </Grid>\n\n\n                    <div className=\"tabs\" style={{ border: 'none' }}>\n                        <ul>\n                            {tabList.map((item, i) => {\n                                if (this.state.list_contain === item.action) {\n                                    return (<li\n                                        style={{ borderBottom: 'solid 3px ' + item.color, backgroundColor: '#c7d6eb', padding: '10px 5px 0 0 ', borderTopRightRadius: '8px', borderTopLeftRadius: '8px' }} >\n                                        <a onClick={() => this.setTabList(item.action)} ><i className={item.icon} ></i>&nbsp;{item.tooltip} </a>\n\n                                    </li>\n                                    )\n                                } else {\n                                    return (<li\n                                        style={{ borderBottom: 'solid 3px ' + item.color, padding: '10px 5px 0 0 ', }} >\n                                        <a onClick={() => this.setTabList(item.action)} ><i className={item.icon} ></i>&nbsp; {item.tooltip} </a>\n\n                                    </li>\n                                    )\n                                }\n\n                            })}\n                        </ul>\n                    </div>\n                    {(() => {\n                        switch (this.state.list_contain) {\n                            case 'letter-in-all': return <this.LetterInAll />\n                            case 'letter-in-disposition': return <this.LetterInDisposition />\n                            default: return ''\n                        }\n                    })()}\n\n\n                    <Snackbar\n                        id=\"example-snackbar\"\n                        toasts={this.state.toasts}\n                        autohideTimeout={300}\n                    />\n                    <DialogContainer\n                        width={'600px'}\n                        id=\"simple-action-dialog\"\n                        visible={this.state.dialogDeleteVisible}\n                        onHide={() => !this.state.dialogDeleteVisible}\n                        actions={[<Button raised primary onClick={this.deleteLetter} >YES</Button>, <Button onClick={() => this.setState({ dialogDeleteVisible: false })} >NO</Button>]}\n                        title=\"Confirmation\"\n                    >\n                        <p>Are you sure delete this item?</p>\n                    </DialogContainer>\n                </div>\n\n            )\n    }\n}\n\n\nclass LetterInMenu extends Component {\n    state = {\n\n    }\n\n    setUpdate = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render() {\n        const { is_reply_required } = this.props\n        var menuItems = []\n\n        menuItems = [\n            <ListItem key={1} primaryText={<Link to={`/sism/letter-in/form?id=${this.props.id}`} >Edit &nbsp;<i className='fa fa-pencil' /> </Link>} style={{ backgroundColor: 'lightblue' }} />,\n            <ListItem key={2} primaryText='Delete' rightIcon={(<i className='fa fa-trash' />)} style={{ top: 0, backgroundColor: 'pink', marginTop: '0em' }} onClick={() =>\n                this.setDelete(this.props.id)} />,\n            <ListItem key={2} primaryText={<Link to={`/sism/letter-out/form?letter_in_id=${this.props.id}`} >Reply &nbsp;<i className='fa fa-share' /> </Link>} style={{ top: 0, backgroundColor: 'lightgreen', marginTop: '0em' }} />\n        ]\n\n\n        return (\n            <MenuButton id='kebabmenu' icon menuItems={menuItems}\n                listInline centered\n                listStyle={{ textDecoration: 'none', listStyle: 'none', justifyItems: 'center' }}\n\n\n            > more_vert</MenuButton>\n        )\n    }\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            role: this.props.role,\n\n        }\n    }\n\n    render() {\n        const columns = !this.state.role.includes('Customer') ?\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'From', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n            :\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'From', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n\n        return (\n            <div style={{ padding: '2.5%' }}>\n                <Grid className=\"grid-example\">\n                    <Cell size={6}>\n                        <span>\n                            <h2 className=\"md-cell md-cell--12\">\n                                Incoming Letters\n                            </h2>\n                            <p>per {dateformat(new Date(), 'dd mmm yyyy, HH:MM')}</p>\n                        </span>\n                    </Cell>\n\n                </Grid>\n                <Grid className=\"grid-example\" >\n                    <Cell size={12}>\n                        <Card style={{ padding: '10px', borderRadius: '8px', overflowX: 'scroll' }} >\n                            <table className=\"table  is-striped\" style={{ fontSize: '9pt' }}>\n                                <thead>\n                                    <tr>\n                                        {\n                                            columns.map((col, i_col) => (\n                                                <th>{col.label}</th>\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.data.map((item, i) => {\n                                        if (this.state.role.includes('Customer')) {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}>{i + 1}</td>\n                                                    <td  >{item.letter_number}</td>\n                                                    <td  >{item.subject}</td>\n                                                    <td width={'20%'}>\n                                                        PT MSO Purwokerto\n                                            </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                </tr>\n                                            )\n                                        } else {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}>{i + 1}</td>\n                                                    <td  >{item.letter_number}</td>\n                                                    <td  >{item.subject}</td>\n                                                    <td width={'20%'}>\n                                                        {item.client_name === null ? item.sender : item.client_name}\n                                                    </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                </tr>\n                                            )\n                                        }\n                                    })}\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                </Grid>\n            </div>\n        )\n    }\n}","import LetterIn from './LetterIn'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-in',\n        exact: true,\n        component: LetterIn,\n    },\n    name: 'LetterIn',\n}","import React,{Component,Fragment, useState, useEffect} from 'react' \nimport { Grid,Cell,SelectField,Button,MenuButtonColumn, Card } from 'react-md'; \nimport axios from 'axios'\nimport $ from 'jquery'\nimport qs from 'query-string'\n import * as summernote from 'summernote/dist/summernote-lite'\n//import '../../../styles.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport  { insertLog } from '../../../../log/InsertLog'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst clients=[]\nvar  data = new FormData()\n\nexport default function FormDisposition (props) {\n \n const [_id, setId]  = useState('')\n const [role_id, setRoleId]  = useState('')\n const [role, setRole]  = useState(props['role'])\n const [structure_id, setStuctureId]  = useState('')\n const [module_id, setModuleId]  = useState('')\n const [formdata, setFormdata]  = useState([])\n const [clients, setClients]  = useState([])\n const [file_url, setFileUrl]  = useState([])\n const [employees, setEmployees]  = useState([])\n const [to_user_id, setToUserId]  = useState('')\n const [from_user_id, setFromUserId]  = useState(payload.userId)\n const [disposition, setDisposition]  = useState('')\n const [created_by, setCreatedBy]  = useState(payload.userId)\n\n\n   \n    useEffect(() => {\n        $('.summernote').summernote({\n            placeholder:'Add Disposition Note',\n            height:'20vh'\n        })\n\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        setId(parsed.ticket_id)\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            setId(parsed.id)\n        }\n\n      \n        initialFecth()\n       \n\n    },[] )\n\n   \n\n    async function initialFecth() {\n        var moduleName = window.location.href.split('/')\n        try {\n            axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        setModuleId(item._id)\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        \n\n        try{\n             axios.get(`/api/user/${payload.userId}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                     \n                            console.log(item.structure_id)\n                            setStuctureId(item.structure_id)\n                            loadEmployees(item.structure_id)\n                       \n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n       \n        \n    }\n\n    function loadEmployees(structure_id) {\n\n        if (role.includes('admin')) {\n            try{\n                axios.get(`/api/user_employees?module_id=${props.module_id}`)\n                .then(response => {\n                    \n                    if(response.data.status ===200) {\n                        var dt = []\n                        response.data.data.map((item,i) => {\n                            \n                                var obj = {\n                                    label:item.full_name+' - '+item.structure,\n                                    value:item._id\n                                }\n                                dt[i] = obj\n                            \n                            return false\n                        })\n\n                        setEmployees(dt)\n                        \n                    }\n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else {\n            try{\n                axios.get(`/api/user-bawahan/${structure_id}?module_id=${props.module_id}`)\n                .then(response => {\n                    \n                    if(response.data.status ===200) {\n                        var dt = []\n                        response.data.data.map((item,i) => {\n                            \n                                var obj = {\n                                    label:item.full_name+' - '+item.structure,\n                                    value:item._id\n                                }\n                                dt[i] = obj\n                            \n                            return false\n                        })\n\n                        setEmployees(dt)\n                        \n                    }\n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n\n    const notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    \n\n    function onChangeToUserID (evt)  {\n       setToUserId (evt)\n    }\n\n   async function handleSubmit () {\n        \n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n\n        var body = {\n            letter_in_id: _id,\n            disposition:editor.innerHTML,\n            created_by: payload.userId,\n            from_user_id : from_user_id,\n            to_user_id : to_user_id,\n            module_id : props.module_id\n        }\n        \n        \n                   // body.created_by = payload.userId\n        try { \n            await axios.post(`/api/sism-letter-in-disposition`,body)\n             .then(response => {\n                 \n                if (response.data.status ===200) {\n                    notify('SUCCESS','Submitted!')\n                    insertLog('Insert New Disposition', module_id)\n                     \n                    closeFormDisposition ()\n                }else{\n                    notify('ERROR','Failed Processing data')\n                }\n                     \n               \n             })\n        } catch (error) {\n            notify('ERROR',error)\n        }\n         \n    }\n\n    function closeFormDisposition () {\n        props.closeFormDisposition(false)\n    }\n\n\n\n        return(\n            <div >\n                 <ToastContainer />\n                <Grid className=\" box  md-cell md-cell--12\">\n                    <Cell size={12}  style={{padding:'2.5%', borderRadius:'10px'}}>\n                      \n                        <h2 className=\"md-cell md-cell--12\">\n                            Write Disposition\n                        </h2> \n                        <div className=\"summernote\">\n                            {/* This is for text editor Summernote */}\n                        </div>\n                        <br />\n                        <SelectField\n                            id=\"select-field-2\"\n                            placeholder=\"Disposition To\"\n                            menuItems={employees}\n                            anchor = {{\n                                x : MenuButtonColumn.HorizontalAnchors.CENTER,\n                                y: MenuButtonColumn.VerticalAnchors.TOP\n                            }}\n                            onChange={onChangeToUserID}\n                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                        \n                        />\n                        <br />\n                        <Button primary raised onClick={handleSubmit} >Submit </Button>\n                        <Button  raised onClick={closeFormDisposition} >Cancel</Button>\n                    \n                    </Cell>\n              \n               </Grid>\n               <ToastContainer />\n            </div>\n        )\n    }\n","import React,{Component,Fragment, useState, useEffect} from 'react' \nimport { Grid,Cell,SelectField,Button,MenuButtonColumn, Card } from 'react-md'; \nimport axios from 'axios'\nimport $ from 'jquery'\nimport qs from 'query-string'\n//import '../../../styles.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport  { insertLog } from '../../../../log/InsertLog'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst clients=[]\nvar  data = new FormData()\n\nexport default function FormDisposition (props) {\n \n const [_id, setId]  = useState('')\n const [role_id, setRoleId]  = useState('')\n const [role, setRole]  = useState(props['role'])\n const [structure_id, setStuctureId]  = useState('')\n const [module_id, setModuleId]  = useState('')\n const [formdata, setFormdata]  = useState([])\n const [clients, setClients]  = useState([])\n const [file_url, setFileUrl]  = useState([])\n const [employees, setEmployees]  = useState([])\n const [to_user_id, setToUserId]  = useState('')\n const [from_user_id, setFromUserId]  = useState(payload.userId)\n const [disposition, setDisposition]  = useState('')\n const [created_by, setCreatedBy]  = useState(payload.userId)\n\n\n   \n    useEffect(() => {\n     \n\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        setId(parsed.ticket_id)\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            setId(parsed.id)\n        }\n\n      \n        initialFecth()\n       \n\n    },[] )\n\n   \n\n    async function initialFecth() {\n        var moduleName = window.location.href.split('/')\n        try {\n            axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        setModuleId(item._id)\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        \n\n        try{\n             axios.get(`/api/user/${payload.userId}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                     \n                            console.log(item.structure_id)\n                            setStuctureId(item.structure_id)\n                            loadEmployees(item.structure_id)\n                       \n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n       \n        \n    }\n\n    function loadEmployees(structure_id) {\n\n        if (role.includes('admin')) {\n            try{\n                axios.get(`/api/user_employees?module_id=${props.module_id}`)\n                .then(response => {\n                    \n                    if(response.data.status ===200) {\n                        var dt = []\n                        response.data.data.map((item,i) => {\n                            \n                                var obj = {\n                                    label:item.full_name+' - '+item.structure,\n                                    value:item._id\n                                }\n                                dt[i] = obj\n                            \n                            return false\n                        })\n\n                        setEmployees(dt)\n                        \n                    }\n                })\n            }catch(error){\n                console.log(error)\n            }\n        }else {\n            try{\n                axios.get(`/api/user-bawahan/${structure_id}?module_id=${props.module_id}`)\n                .then(response => {\n                    \n                    if(response.data.status ===200) {\n                        var dt = []\n                        response.data.data.map((item,i) => {\n                            \n                                var obj = {\n                                    label:item.full_name+' - '+item.structure,\n                                    value:item._id\n                                }\n                                dt[i] = obj\n                            \n                            return false\n                        })\n\n                        setEmployees(dt)\n                        \n                    }\n                })\n            }catch(error){\n                console.log(error)\n            }\n        }\n    }\n\n    const notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    \n\n    function onChangeToUserID (evt)  {\n       setToUserId (evt)\n    }\n\n   async function handleSubmit () {\n        \n\n\n        var body = {\n            letter_in_id: _id,\n            disposition:'',\n            created_by: payload.userId,\n            from_user_id : from_user_id,\n            to_user_id : to_user_id,\n            module_id : props.module_id\n        }\n        \n        \n                   // body.created_by = payload.userId\n        try { \n            await axios.post(`/api/sism-letter-in-disposition`,body)\n             .then(response => {\n                 \n                if (response.data.status ===200) {\n                    notify('SUCCESS','Submitted!')\n                    insertLog('Insert New Disposition', module_id)\n                     \n                    closeFormDisposition ()\n                }else{\n                    notify('ERROR','Failed Processing data')\n                }\n                     \n               \n             })\n        } catch (error) {\n            notify('ERROR',error)\n        }\n         \n    }\n\n    function closeFormDisposition () {\n        props.closeFormDisposition(false)\n    }\n\n\n\n        return(\n            <div >\n                 <ToastContainer />\n                <Grid className=\" box  md-cell md-cell--12\">\n                    <Cell size={12}  style={{padding:'2.5%', borderRadius:'10px'}}>\n                      \n                        <h2 className=\"md-cell md-cell--12\">\n                            Forward\n                        </h2> \n                        \n                        <SelectField\n                            id=\"select-field-2\"\n                            placeholder=\"Forward To\"\n                            menuItems={employees}\n                            anchor = {{\n                                x : MenuButtonColumn.HorizontalAnchors.CENTER,\n                                y: MenuButtonColumn.VerticalAnchors.TOP\n                            }}\n                            onChange={onChangeToUserID}\n                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                        \n                        />\n                        <br />\n                        <Button primary raised onClick={handleSubmit} >Submit </Button>\n                        <Button  raised onClick={closeFormDisposition} >Cancel</Button>\n                    \n                    </Cell>\n              \n               </Grid>\n               <ToastContainer />\n            </div>\n        )\n    }\n","import React, { Component, Fragment, useState, useEffect, useRef } from 'react'\nimport ReactDOMServer from \"react-dom/server\";\nimport { Link } from 'react-router-dom'\nimport { Grid, Toolbar, Button, Cell, Card, Avatar, IconSeparator, Chip } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\n//import  jsZIP from 'jzip'\nimport ReactToPrint from 'react-to-print'\n\nimport * as FileSaver from 'file-saver';\nimport * as JsZIP from 'jszip';\nimport * as JsZIPUtils from 'jszip-utils';\nimport FormDisposition from './FormDisposition'\nimport FormForward from './FormForward'\n\nimport { Session } from 'bc-react-session'\nconst { payload } = Session.get()\n\nexport default function Detail(props) {\n\n    const [role_id, setRoleId] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [role, setRole] = useState('')\n    const [letter_number, setLetterNumber] = useState('')\n    const [created_by, setCreatedBy] = useState(payload.userId)\n    const [module_id, setModuleId] = useState('')\n    const [role_create, setRoleCreate] = useState(null)\n    const [role_read, setRoleRead] = useState(null)\n    const [role_update, setRoleUpdate] = useState(null)\n    const [role_delete, setRoleDelete] = useState(null)\n    const [_id, setId] = useState('')\n    const [data, setData] = useState([])\n    const [file_url, setFileUrl] = useState([])\n    const [tags, setTags] = useState([])\n    const [replies, setReplies] = useState([])\n    const [sender, setSender] = useState([])\n    const [disposition, setDisposition] = useState([])\n    const [handled_by_user_id, setHandledByUserId] = useState('')\n    const [isFormDisposition, setIsFormDisposition] = useState(false)\n    let componentRef = useRef(null);\n\n    useEffect(() => {\n\n\n\n        const parsed = qs.parse(window.location.search)\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            setId(parsed.id)\n        }\n\n        var moduleName = window.location.href.split('/')\n        try {\n            axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        setModuleId(item._id)\n                        try {\n                            axios.get(`/api/user-role/${item._id}/${payload.userId}`)\n                                .then(response => {\n\n                                    if (response.data.status === 200 && response.data.data.length > 0) {\n                                        setRole(response.data.data[0].role)\n                                        setRoleId(response.data.data[0].role_id)\n                                        loadROleControl(response.data.data[0].role_id)\n                                        initialFetch(parsed.id, response.data.data[0].role)\n                                    }\n\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n\n\n\n\n\n\n    }, [])\n\n    async function loadROleControl(role_id) {\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/sism/letter-in', role_id: role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                setRoleRead(true)\n                            }\n                            if (item.type_control === 'create') {\n                                setRoleCreate(true)\n                            }\n                            if (item.type_control === 'update') {\n                                setRoleUpdate(true)\n                            }\n                            if (item.type_control === 'delete') {\n                                setRoleDelete(true)\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    async function initialFetch(_id, role) {\n\n\n        if (!role.includes('Customer')) {\n            loadLetterIn(_id)\n            loadLetterInFile(_id)\n            loadLetterInTag(_id)\n            loadLetterInSender(_id)\n            loadLetterInDisposition(_id)\n            loadLetterOutReplies(_id)\n        } else {\n            loadLetterOut(_id)\n            loadLetterOutFile(_id)\n        }\n\n\n    }\n\n    function loadLetterIn(_id) {\n\n\n\n        try {\n            axios.get(`/api/sism-letter_in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setData(response.data.data)\n                        setLetterNumber(response.data.data[0].letter_number)\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }\n\n    function loadLetterOut(_id) {\n        try {\n            axios.get(`/api/sism-letter_out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setData(response.data.data)\n                        setLetterNumber(response.data.data[0].letter_number)\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterOutReplies(_id) {\n        try {\n            axios.get(`/api/letter_out_replies/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setReplies(response.data.data)\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n\n    function loadLetterInFile(_id) {\n        try {\n            axios.get(`/api/sism-letter-in-file-by-letter-in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setFileUrl(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    function loadLetterOutFile(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-file-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setFileUrl(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    function loadLetterInTag(_id) {\n        try {\n            axios.get(`/api/sism-letter-in-tag-by-letter-in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setTags(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterInSender(_id) {\n        try {\n            axios.get(`/api/sism-letter-in-sender-by-letter-in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setSender(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterInDisposition(_id) {\n\n        try {\n            axios.get(`/api/sism-letter-in-disposition-by-letter-in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setDisposition(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }\n\n    function closeFormDisposition(act) {\n        setIsFormDisposition(act)\n        //initialFetch()\n    }\n\n\n\n    function prinfFileAttachment() {\n        var zip = new JsZIP();\n\n        let count = 0\n        file_url.map((url, i) => {\n            JsZIPUtils.getBinaryContent(url.file_url, function (err, data) {\n                if (err) {\n                    throw err\n                }\n                var filename = url.file_url.replace(/.*\\//g, \"\");\n                zip.file(filename, data, { binary: true })\n                count++\n                if (count == file_url.length) {\n                    zip.generateAsync({ type: 'blob' }).then(function (content) {\n                        FileSaver.saveAs(content, `file-surat-${letter_number}.zip`)\n                    })\n                }\n\n            })\n        })\n\n    }\n\n\n\n    return (\n        <div>\n\n            <Fragment>\n                <Grid className=\"grid-example\">\n                    <Toolbar\n                        title={<b>{\"Detail #\" + letter_number}</b>}\n                        nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a>}\n                    />\n                </Grid>\n                {data.map((item, i) => (\n                    <Grid key={i}>\n                        <Cell size={12}>\n                            <Card style={{ minHeight: '77vh', padding: '2.5vw', borderRadius: '10px' }}>\n\n                                <div className=\"media\">\n                                    <div className=\"media-left\">\n                                        <p><b>{dateformat(item.letter_date, 'dd mmm yyyy')}</b></p>\n                                        <p><b>{item.accepted_time}</b></p>\n                                    </div>\n                                    <div className=\"media-content\">\n                                        <div className=\"content\">\n                                            <div className=\"columns\" style={{ justifyContent: 'space-between', paddingLeft: '10px' }}>\n                                                <div className=\"level-item\" >\n                                                    <p>[Incoming Letter]</p>\n                                                </div>\n                                                <div className=\"level-item\" style={{ alignItems: 'end' }}>\n                                                    {!role.includes('Customer') && role_create ? (\n                                                        <Link to={`/sism/letter-out/form?letter_in_id=${item._id}`} >\n                                                            <button className=\"button  is-primary\" style={{ borderRadius: '5px' }}>\n                                                                <i className=\"fa fa-share\"></i> &nbsp; Reply\n                                                            </button>\n                                                        </Link>\n                                                    ) : ''}\n\n                                                    &nbsp;\n                                                    <ReactToPrint\n                                                        trigger={() => <button className=\"button  is-info\" style={{ borderRadius: '5px' }}\n\n                                                        >\n                                                            <i className=\"fa fa-print\"></i> &nbsp; Print\n                                                    </button>}\n                                                        content={() => componentRef}\n                                                    />\n                                                    <div style={{ display: \"none\" }}>\n                                                        <Printable\n                                                            ref={el => (componentRef = el)}\n                                                            role={role}\n                                                            data={data}\n                                                            disposition={disposition}\n                                                            sender={sender}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <p><h4><b>{item.subject}</b></h4></p>\n                                            <p><b>From:</b></p>\n                                            {(() => {\n                                                if (role.includes('Customer')) {\n                                                    return (<Fragment>\n                                                        <Chip label={(\n                                                            <IconSeparator label={'PT MSO Purwokerto'} iconBefore>\n                                                                <Avatar>{'PT MSO Purwokerto'.charAt(0)}</Avatar>\n                                                            </IconSeparator>\n                                                        )} style={{\n                                                            margin: '3px',\n                                                            paddingLeft: '20px',\n                                                            paddingTop: '8px',\n                                                            paddingRight: '8px',\n                                                            paddingBottom: '8px',\n                                                            fontSize: '9pt'\n                                                        }}></Chip>\n                                                        <p>&nbsp;</p>\n                                                    </Fragment>\n                                                    )\n                                                } else return (\n                                                    sender.map((snd, i_snd) => (\n                                                        <Fragment>\n                                                            <Chip label={(\n                                                                <IconSeparator label={snd.client_name === null ? snd.sender : snd.client_name} iconBefore>\n                                                                    <Avatar>{snd.client_code === null ? snd.sender.charAt(0) : snd.client_code}</Avatar>\n                                                                </IconSeparator>\n                                                            )} style={{\n                                                                margin: '3px',\n                                                                paddingLeft: '20px',\n                                                                paddingTop: '8px',\n                                                                paddingRight: '8px',\n                                                                paddingBottom: '8px',\n                                                                fontSize: '9pt'\n                                                            }}></Chip>\n\n                                                            <p>&nbsp;</p>\n                                                        </Fragment>\n\n                                                    ))\n                                                )\n                                            })()}\n                                            {item.message === '' || item.message === null ? '' : (\n                                                <div className=\"notification is-light\">\n                                                    <div dangerouslySetInnerHTML={{ __html: item.message }} />\n                                                </div>\n                                            )}\n\n                                            {file_url.length > 0 ? (\n                                                <Fragment>\n                                                    <div className=\"level\" style={{ justifyContent: 'space-between' }}>\n                                                        <div >\n                                                            <p><b>Attachments:</b></p>\n                                                        </div>\n                                                        <div >\n                                                            <button className=\"button  is-info\" style={{ borderRadius: '5px' }}\n                                                                onClick={prinfFileAttachment}\n                                                            >\n                                                                <i className=\"fa fa-download\"></i> &nbsp; Download\n                                                            </button>\n                                                        </div>\n                                                    </div>\n\n                                                    {\n                                                        file_url.map((file, i_file) => {\n                                                            var splited_fie_url = file.file_url.split('.')\n                                                            var extension_file = splited_fie_url[splited_fie_url.length - 1]\n\n                                                            if (extension_file === 'png' || extension_file === 'jpg' || extension_file === 'jpeg') {\n                                                                return (\n                                                                    <img src={file.file_url} alt=\"file_image\" style={{ width: '75%' }} />\n                                                                )\n                                                            } else {\n                                                                return <iframe src={file.file_url} frameBorder=\"0\" style={{ width: '100%', height: '75vh' }}></iframe>\n\n                                                            }\n\n                                                        }\n\n                                                        )\n                                                    }\n\n                                                    <br />\n                                                </Fragment>\n                                            ) : ''}\n                                            <br />\n                                            {tags.length > 0 ? (\n                                                <Fragment>\n                                                    <p><b>Tags:</b></p>\n                                                    {tags.map((tag, i_tag) => (\n                                                        <Fragment key={i_tag}>\n                                                            <Chip className=\"state-chip\" label={tag.tag} />&nbsp;\n                                                        </Fragment>\n                                                    ))}\n\n                                                    <br />\n                                                </Fragment>\n                                            ) : ''}\n                                            <br />\n                                            {replies.length > 0 ? (\n                                                <Fragment>\n                                                    <p><b>Replies Letter:</b></p>\n                                                    {replies.map((item_reply, i_reply) => (\n                                                        <Fragment key={i_reply}>\n                                                            <span className=\"tag\" style={{ margin: '5px', fontSize: '12pt' }}><Link to={`/sism/letter-out/detail?id=${item_reply._id}`} ><b>{item_reply.letter_number + ' - ' + item_reply.subject}</b></Link></span> <br />\n                                                        </Fragment>\n                                                    ))}\n\n                                                    <br />\n                                                </Fragment>\n                                            ) : ''}\n\n\n                                            {(() => {\n                                                if (!role.includes('Customer')) {\n                                                    return (\n                                                        <Fragment>\n                                                            {disposition.length > 0 ? (\n                                                                <Fragment>\n                                                                    <p><b>Disposition:</b></p>\n                                                                    {disposition.map((item, i) => (\n                                                                        <div className=\"notification is-light\" style={{ borderRadius: '10px' }}>\n                                                                            <div className=\"media\">\n                                                                                <div className=\"media-left\">\n                                                                                    {item.avatar_url !== null ? (\n                                                                                        <Avatar src={item.avatar_url}></Avatar>\n                                                                                    ) : (\n                                                                                            <Avatar>{item.full_name.charAt(0)}</Avatar>\n                                                                                        )}\n                                                                                </div>\n                                                                                <div className=\"media-content\">\n                                                                                    <div className=\"content\">\n                                                                                        <p><b>{item.full_name} - {item.structure} </b></p>\n                                                                                        <p style={{ fontSize: '8pt' }}><i>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</i></p>\n                                                                                        <div dangerouslySetInnerHTML={{ __html: item.disposition }} />\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    ))}\n                                                                </Fragment>\n                                                            ) : ''}\n\n                                                            {(() => {\n                                                                //if ((role.includes('Direktur') || role.includes('Admin') || role.includes('Superadmin'))) {\n                                                                    if (role.includes('Direktur Utama') && disposition.length < 1) {\n                                                                        return (\n                                                                            isFormDisposition ? (\n                                                                                <FormDisposition\n                                                                                    role={role}\n                                                                                    active={isFormDisposition}\n                                                                                    module_id={module_id}\n                                                                                    _id={_id}\n                                                                                    closeFormDisposition={(act) => closeFormDisposition(act)}\n                                                                                />\n                                                                            ) : (\n                                                                                    <button className=\"button is-info \" onClick={() => setIsFormDisposition(true)} >\n                                                                                        <i className=\"fa fa-pencil\"></i> &nbsp; Write Disposition\n                                                                                    </button>\n                                                                                )\n                                                                        )\n                                                                    }\n                                                                    \n                                                                    if (item.handled_by_user_id === created_by) {\n                                                                        if (role.includes('Direktur') && disposition.length < 2 ) {\n                                                                            return (\n                                                                                isFormDisposition ? (\n                                                                                    <FormDisposition\n                                                                                        role={role}\n                                                                                        active={isFormDisposition}\n                                                                                        module_id={module_id}\n                                                                                        _id={_id}\n                                                                                        closeFormDisposition={(act) => closeFormDisposition(act)}\n                                                                                    />\n                                                                                ) : (\n                                                                                        <button className=\"button is-info \" onClick={() => setIsFormDisposition(true)} >\n                                                                                            <i className=\"fa fa-pencil\"></i> &nbsp; Write Disposition\n                                                                                        </button>\n                                                                                    )\n                                                                            )\n                                                                        } else if (role.includes('Ka Div') && disposition.length < 3  ) {\n                                                                            return (\n                                                                                isFormDisposition ? (\n                                                                                    <FormForward\n                                                                                        role={role}\n                                                                                        active={isFormDisposition}\n                                                                                        module_id={module_id}\n                                                                                        _id={_id}\n                                                                                        closeFormDisposition={(act) => closeFormDisposition(act)}\n                                                                                    />\n                                                                                ) : (\n                                                                                        <button className=\"button is-info \" onClick={() => setIsFormDisposition(true)} >\n                                                                                            <i className=\"fa fa-arrow-right\"></i> &nbsp; Forward\n                                                                                        </button>\n                                                                                    )\n                                                                            )\n                                                                        }\n                                                                        \n                                                                    }\n\n\n                                                               // }\n                                                            })()}\n                                                        </Fragment>\n                                                    )\n                                                }\n                                            })()}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </Card>\n                        </Cell>\n                    </Grid>\n                ))}\n            </Fragment>\n\n\n\n\n        </div>\n    )\n}\n\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const styleTable = {\n            tg: { borderCollapse: 'collapse', borderSpacing: 0 },\n            tgTd: {\n                fontFamily: 'Arial, sans-serif', fontSize: '14px', padding: '10px 5px', borderStyle: 'solid', borderWidth: '1px', overflow: 'hidden', wordBreak: 'normal',\n                borderColor: 'black'\n            },\n            tgTh: {\n                fontFamily: 'Arial, sans-serif', fontSize: '14px', fontWeight: 'normal', padding: '10px 5px',\n                borderStyle: 'solid', borderWidth: '1px', overflow: 'hidden', wordBreak: 'normal', borderColor: 'black'\n            },\n            tgZv4m: { borderColor: '#ffffff', textAlign: 'left', verticalAlign: 'top' }\n        }\n        return (\n            <div style={{ padding: '20px' }}>\n                {this.props.data.map((item, i) => (\n                    <Fragment>\n                        <div className=\"level\">\n                            <div className=\"level-item\" style={{ textAlign: 'center' }}>\n                                <p style={{ fontWeight: 'bold', textAlign: 'center', textDecoration: 'underline' }}>LEMBAR DISPOSISI MASUK</p>\n                            </div>\n                        </div>\n\n                        <br />\n\n                        <table border={0}>\n                            <tbody>\n                                <tr>\n                                    <td width={'15%'}>Surat Dari</td><td>:</td>\n                                    <td>\n                                        {!this.props.role.includes('Customer') ? this.props.sender.map((sender, i_sender) => (\n\n                                            <span>{sender.client_name === null ? sender.sender : sender.client_name}</span>\n\n                                        )) : 'PT MSO Purwokerto'}\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width={'15%'}>Nomor Surat</td><td>:</td><td>{item.letter_number} </td>\n                                    {!this.props.role.includes('Customer') ? (<td rowSpan={5} style={{ width: '10%', border: '1px' }}>Paraf Adm. Umum</td>) : ''}\n\n                                </tr>\n                                <tr><td width={'15%'}>Tanggal Surat</td><td>:</td><td colSpan={2}>{dateformat(item.letter_date, 'dd/mm/yyyy')}</td></tr>\n                                <tr><td width={'15%'}>Diterima Tanggal</td><td>:</td><td colSpan={2}>{dateformat(item.letter_date, 'dd/mm/yyyy')}</td></tr>\n                                <tr><td width={'15%'}>Jam</td><td>:</td><td colSpan={2}>{item.accepted_time} </td></tr>\n                                <tr><td width={'15%'}>Nomor Agenda</td><td>:</td><td colSpan={2}></td></tr>\n                                <tr><td width={'15%'}>Sifat</td><td>:</td><td></td><td></td></tr>\n                                <tr><td width={'15%'}>Perihal</td><td>:</td><td>{item.subject} </td><td></td></tr>\n                                <tr><td width={'15%'}>Isi Pesan</td><td>:</td><td>{\n                                    <div dangerouslySetInnerHTML={{ __html: item.message }} />\n                                }</td>\n                                    <td></td>\n                                </tr>\n                                {!this.props.role.includes('Customer') ? this.props.disposition.map((disposition, i_disposition) => (\n                                    <tr style={{ minHeight: '15vh', border: '1px solid #000' }}>\n                                        <td width={'15%'}>Disposisi&nbsp; {disposition.structure}</td>\n                                        <td>:</td>\n                                        <td>\n                                            <p><b>{disposition.full_name}</b></p>\n                                            <p>{dateformat(disposition.created_at, 'dd/mm/yyyy, HH:MM')}</p>\n                                            {<div dangerouslySetInnerHTML={{ __html: disposition.disposition }} />}\n                                        </td>\n                                        <td></td>\n                                    </tr>\n                                )) : ''}\n                            </tbody>\n\n                        </table>\n                        {!this.props.role.includes('Customer') ? (\n                            <Fragment>\n                                <div className=\"columns\" style={{ marginTop: '10vh' }}>\n                                    <div className=\"column is-8\" >\n\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n                                        <table border={1} cellPadding={8}>\n                                            <tr>\n                                                <td style={{ minWidth: '100px' }}>Paraf Dirut</td>\n                                            </tr>\n                                            <tr>\n                                                <td style={{ height: '10vh' }}></td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n                                        <table border={1} cellPadding={8}>\n                                            <tr >\n                                                <td style={{ minWidth: '100px' }}  >Paraf DirOps</td>\n                                            </tr>\n                                            <tr>\n                                                <td style={{ height: '10vh' }}></td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n                                        <table border={1} cellPadding={8}>\n                                            <tr >\n                                                <td style={{ minWidth: '100px' }}>Paraf Spv</td>\n                                            </tr>\n                                            <tr>\n                                                <td style={{ height: '10vh' }}></td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n\n                                    </div>\n                                </div>\n                            </Fragment>\n                        ) : ''}\n\n\n                    </Fragment>\n\n                ))}\n\n            </div>\n        )\n    }\n}\n","import Detail from './Detail.jsx'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-in/detail',\n        exact: true,\n        component: Detail,\n    },\n    name: 'Detail',\n}","import DetailUnApprove from './DetailUnApprove'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-in/detail-unapprove',\n        exact: true,\n        component: DetailUnApprove,\n    },\n    name: 'DetailUnApprove',\n}","import React,{Component, Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid,Toolbar,Button, Cell,Card} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nexport default class Detail extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            _id : '',\n            data:[],\n            file_url:[],\n            handled_by:'',\n            to_division:'',\n            letter_number_original:''\n        }\n    }\n\n    async componentDidMount() {\n\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.ticket_id})\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            this.setState({_id:parsed.id})\n        }\n        console.log(this.state._id)\n        try{\n            await axios.get(`/api/sism-letter_in-unapprove/${parsed.id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data,letter_number_original:response.data.data[0].letter_number_original})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        try{\n            await axios.get(`/api/sism-letter-in-file-by-letter-in/${parsed.id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({file_url:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.state.data.map( async (item,i) => {\n            try{\n                 axios.get(`/api/letter_out_replies/${parsed.id}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                       item.replies = response.data.data \n                    }\n                })\n            }catch(e){\n                console.log(e)\n            } \n            \n           \n\n            \n            \n        })\n\n        try{\n           await axios.get(`/api/sism-letter_in_to_division-id/${parsed.id}`)\n           .then(response => {\n               if (response.data.status === 200 ) {\n                   var structure = '' \n                   response.data.data.map((tv,i_tv) => {\n                       structure+=tv.structure+', '\n                       return false\n                   })\n                  this.state.to_division = structure\n               }\n           })\n       }catch(e){\n           console.log(e)\n       } \n\n       try{\n        await axios.get(`/api/letter_in_handled_by_user/${parsed.id}`)\n       .then(response => {\n           if (response.data.status === 200 ) {\n               var full_name = '' \n               response.data.data.map((tv,i_tv) => {\n                   full_name+=tv.full_name+', '\n                   return false\n               })\n              this.state.handled_by = full_name\n           }\n       })\n   }catch(e){\n       console.log(e)\n   } \n\n    console.log(this.state.to_division)\n    console.log(this.state.handled_by)\n       \n        \n    }\n\n    render(){\n        const data = this.state.data\n        return(\n            <div>\n               \n                <Fragment>\n                 <Grid className=\"grid-example\">\n                     <Toolbar \n                        title={<b>{\"Detail #\"+this.state.letter_number_original}</b>}\n                        nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                {data.map((item,i) => (\n                <Grid>\n                        <Cell size={12}>\n                            <Card style={{minHeight:'77vh', padding:'2.5vw'}}>\n                            <Grid>\n                                <Cell size={12}>\n                                    \n                                <table className=\"table is-striped is-bordered\">\n                                    <tbody>\n                                        <tr>\n                                            <td colSpan={2}>\n                                                <h5>Information</h5>\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Letter Date</td><td>{dateformat(item.date_in,'dd mmm yyyy')}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Letter No.</td><td>{item.letter_number_original}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Subject</td><td>{item.subject}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>From BPR/Client/Other</td><td>{item.sender_name !== '' ? item.sender_name : item.client_name}</td>\n                                        </tr>\n                                        <tr>\n                                           <td>To Division</td><td>{item.to_division}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Accepted at</td><td>{dateformat(item.date_taken,'dd mmm yyyy')} {item.accepted_time}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Disposition from Dirut</td><td>{item.disposition_1}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Disposition from Dirops</td><td>{item.disposition_2}</td>\n                                        </tr>\n                                        <tr>\n                                           <td>Handled By</td><td>{item.full_name}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Status</td><td><span className={'tag '+item.label_color}>{item.status}</span> </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Replies</td>\n                                            <td>{ item['replies'] !== null  && item.replies !== undefined  ? (\n                                                <Fragment>\n                                                    {\n                                                \n                                                    item.replies.map((reply,i_reply) => (\n                                                        <p>{reply.letter_number}</p>\n\n                                                    ))\n                                                    }\n                                                </Fragment>\n                                            ):'-'}\n                                            </td>\n                                        </tr>\n                                        <tr>\n                                            <td colSpan={2}>\n                                                <h5>Files</h5>\n                                                {\n                                                    this.state.file_url.map((file,i_file) => {\n                                                        var splited_fie_url = file.file_url.split('.')\n                                                        var extension_file = splited_fie_url[splited_fie_url.length-1]\n                                                        console.log(extension_file)\n                                                        if (extension_file ==='png' || extension_file ==='jpg' || extension_file ==='jpeg' ) {\n                                                            return(\n                                                                <img src={file.file_url} alt=\"file_image\" style={{width:'75%'}}/>\n                                                            )\n                                                        }else {\n                                                            return  <iframe src={file.file_url} frameborder=\"0\" style={{width:'100%',height:'75vh'}}></iframe>\n                                                            \n                                                        }\n                                                    \n                                                    }\n                                                        \n                                                    )\n                                                }\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </Cell>\n                           \n                            </Grid>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                     ))}\n                    </Fragment>    \n                \n             \n               \n            </div>\n        )\n    }\n}","import React, { Component, Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Cell, Card, TextField, Autocomplete, FontIcon, Chip, DatePicker, MenuButtonColumn, FileUpload, Button, SelectField, TimePicker, Toolbar, Checkbox } from 'react-md'\nimport qs, { parse } from 'query-string'\nimport axios from 'axios'\nimport dateformat from \"dateformat\";\nimport $ from 'jquery/dist/jquery.js'\n\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport { insertLog } from '../../../../log/InsertLog'\n\nimport { Session } from 'bc-react-session'\nconst { payload } = Session.get()\n\n\nvar _formData = new FormData()\n\nexport default function Form(props) {\n    const [isLoading, setIsLoading] = useState(null)\n    const [module_id, setModuleId] = useState('')\n    const [role, setRole] = useState('')\n    const [role_id, setRoleId] = useState('')\n    const [toasts, setToasts] = useState('')\n    const [tagInputKey, setTagInputKey] = useState('')\n    const [_id, setId] = useState('')\n    const [key, setKey] = useState('')\n    const [clients, setClients] = useState([])\n    const [status, setStatus] = useState([])\n    const [status_id, setStatusId] = useState(0)\n    const [employees, setEmployees] = useState([])\n    const [formdata, setFormdata] = useState([])\n    const [isCustomer, setIsCustomer] = useState(false)\n    const [isNotCustomer, setIsNotCustomer] = useState(false)\n    const [client_id, setClientId] = useState('')\n    const [sender, setSender] = useState('')\n    const [letter_date, setLetterDate] = useState(new Date())\n    const [accepted_time, setAcceptedTime] = useState('')\n    const [message, setMessage] = useState('')\n    const [subject, setSubject] = useState('')\n    const [letter_number, setLetterNumber] = useState('')\n    const [tagsInput, setTagsInput] = useState([])\n    const [tags, setTags] = useState([])\n    const [created_by, setCreatedBy] = useState(payload.userId)\n    const [file_url, setFileUrl] = useState([])\n\n    useEffect(() => {\n\n        \n\n        const parsed = qs.parse(window.location.search)\n\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            setId(parsed.id)\n        }\n\n        var moduleName = window.location.href.split('/')\n        try {\n            axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        setModuleId(item._id)\n                        try {\n                            axios.get(`/api/user-role/${item._id}/${payload.userId}`)\n                                .then(response => {\n\n                                    if (response.data.status === 200) {\n                                        setRole(response.data.data[0].role)\n                                        setRoleId(response.data.data[0].role_id)\n                                        initialFetch(parsed.id, response.data.data[0].role)\n                                    }\n\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        $('.summernote').summernote({\n            placeholder: 'Message',\n            height: '20vh'\n        })\n\n\n    }, [])\n\n\n\n    async function initialFetch(_id, role) {\n\n        if (!role.includes('Customer')) {\n\n            loadCLients()\n            loadTags()\n        } else {\n            loadDataCustomer()\n        }\n\n        if (_id !=='' && _id !== null && _id !==undefined) {\n            loadLetterIn(_id)\n            loadLetterInSender(_id,role)\n            loadLetterInTag(_id)\n            loadLetterInFile(_id)\n            setMessage(message)\n        }\n\n\n    }\n\n    function loadLetterIn(_id) {\n        $('.summernote').summernote({\n            placeholder: 'Message',\n            height: '20vh'\n        })\n\n        try {\n            axios.get(`/api/sism-letter_in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0 ) {\n                        setCreatedBy(response.data.data[0].created_by)\n                        setLetterNumber(response.data.data[0].letter_number)\n                        setLetterDate(dateformat(response.data.data[0].letter_date,'m/dd/yyyy'))\n                        setSubject(response.data.data[0].subject)\n                        loadMessage(response.data.data[0].message)\n                        var acceptedTime = response.data.data[0].accepted_time.toLocaleString().split(':')\n                      \n                       setAcceptedTime((acceptedTime[0]+':'+acceptedTime[1]).replace(':','.'))\n                      \n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n       \n        var editor = window.document.getElementsByClassName('note-editable')[0]\n       // editor.innerHTML = (message)\n\n    }\n\n    function loadMessage(msg){\n        setMessage(msg)\n        console.log(message)\n        var editor = document.getElementsByClassName('note-editable')[0]\n       \n        $('.summernote').summernote('code',msg)\n    }\n\n    function loadLetterInSender(_id, role) {\n        if (!role.includes('Customer')) {\n            try {\n                axios.get(`/api/sism-letter-in-sender-by-letter-in/${_id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                           \n                                setClientId(item.sender)\n                           \n                                setSender(item.sender)\n                         \n                            \n                           \n                                return false\n                            })\n                            console.log(dt)\n                            \n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n    }\n\n    function loadLetterInTag(_id) {\n        try {\n            axios.get(`/api/sism-letter-in-tag-by-letter-in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            const obj = {\n                                label: item.tag,\n                                value: item.tag_id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        setTagsInput(dt)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterInFile(_id) {\n        try {\n            axios.get(`/api/sism-letter-in-file-by-letter-in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                \n                                dt[i] = item.file_url.replace('/sism/files/','')\n                                return false\n                            })\n                            setFileUrl(dt)\n                        }\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadDataCustomer() {\n\n        try {\n            axios.get(`/api/user/${created_by}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        setClientId(response.data.data[0].client_id)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    function loadCLients() {\n\n        try {\n            axios.get(`/api/clients`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            const obj = {\n                                label: item.client_code + ' - ' + item.client_name,\n                                value: item._id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        setClients(dt)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }\n\n    function loadTags() {\n        if (!role.includes('Customer')) {\n            try {\n                axios.get(`/api/sism-tags`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                const obj = {\n                                    label: item.tag,\n                                    value: item._id\n                                }\n                                dt[i] = obj\n                                return false\n                            })\n                            setTags(dt)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    const notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    function changeLetterDate(val) {\n        setLetterDate(val)\n    }\n\n    function changeAcceptedTime(val,evt) {\n        console.log(val)\n        console.log(evt)\n        setAcceptedTime(val)\n    }\n\n    function changeLetterNumber(val) {\n        setLetterNumber(val)\n    }\n\n    function changeSubjcet(val) {\n        setSubject(val)\n    }\n\n    function onChangeClientId(val) {\n        setSender('')\n        var index = clients.findIndex(x => x.value === val);\n        if (index === 0) {\n            setIsNotCustomer(true)\n        } else {\n            setSender('')\n            setIsNotCustomer(false)\n            setClientId(val)\n        }\n    }\n    function changeSender(val) {\n        setSender(val)\n    }\n\n    function handleLoadFile(uploadedFile, uploadedData) {\n        var fileUrl = [...file_url, (uploadedFile.name)]\n        var formData = [...formdata, (uploadedFile)]\n        setFileUrl(fileUrl)\n        setFormdata(formData)\n    }\n\n    function deleteFile(file) {\n        console.log(file)\n        console.log(file_url)\n        const result = formdata.filter(({ name }) => !name.includes(file))\n        var fileUrl = file_url\n        console.log()\n        var index = fileUrl.indexOf(file);\n\n        if (index > -1) {\n            fileUrl.splice(index, 1);\n        }\n\n        setFileUrl(result)\n    }\n\n    function inputTag(evt, evt2) {\n\n\n        var _key = key + evt.key\n        setKey(_key)\n\n        console.log(key)\n        if (evt.keyCode === 13) {\n            var dt = {\n                label: key,\n                value: ''\n            }\n            setKey('')\n            var _tagsInput = [...tagsInput, dt]\n            setTagsInput(_tagsInput)\n\n\n            evt = ''\n            var inputAutoComplete = document.getElementById('select-field-tags')\n            inputAutoComplete.value = ''\n        }\n\n    }\n\n    function startSearching() {\n        // this.setState({ searching: true });\n    };\n\n    function stopSearching() {\n        //this.setState({ searching: false });\n    };\n\n    function clearSearch() {\n        setTagInputKey('');\n    };\n\n    function handleChange(value) {\n        setTagInputKey(value);\n    };\n\n    function handleKeyDown(e) {\n\n        if (e.key === 'Enter') {\n            addTag(tagInputKey)\n            setTagInputKey('')\n        }\n    };\n\n    function handleAutocomplete(value) {\n\n        if (tagInputKey === value) {\n            return;\n\n        }\n\n        addTag(value);\n    };\n\n    function addTag(val) {\n        var index = tags.findIndex(p => p.value == val)\n        if (index < 0) {\n            var dt = {\n                label: val,\n                value: ''\n            }\n            var _tags = [...tagsInput, dt]\n        } else {\n            var _tags = [...tagsInput, tags[index]]\n        }\n\n        setTagsInput(_tags)\n        console.log(tagsInput)\n    }\n\n\n\n\n\n    function deleteTag(val) {\n\n        var result = tagsInput.filter(({ label }) => !label.includes(val))\n        setTagsInput(result)\n    }\n\n    async function handleSubmit() {\n        var editor = window.document.getElementsByClassName('note-editable')[0]\n        const body = {\n            subject: subject,\n            created_by: created_by,\n            file_url: file_url,\n            module_id: module_id,\n            message: editor.innerHTML,\n            letter_number: letter_number\n        }\n        if (role.includes('Customer')) {\n            body['handled_by_user_id'] = ''\n            body['sender'] = client_id\n            body['letter_date'] = dateformat(new Date(), 'yyyy-mm-dd')\n            body['accepted_time'] = dateformat(new Date(), 'HH:MM:ss')\n            body['tags'] = []\n            body['status_id'] = status_id\n        } else {\n            body['sender'] = client_id !== '' ? client_id : sender\n            body['handled_by_user_id'] = ''\n            body['letter_date'] = letter_date\n            body['accepted_time'] = accepted_time\n            body['tags'] = tagsInput\n            body['status_id'] = status_id\n        }\n\n        if (_id !=='' && _id !== null && _id !==undefined) {\n            try {\n                await axios.put(`/api/sism-letter_in/${_id}`, body)\n                    .then(response => {\n                        console.log(response)\n                        if (response.data.status === 200) {\n                            if (file_url.length > 0) {\n                                const _formData = new FormData()\n                                formdata.map((item, i) => {\n                                    _formData.append('file', item)\n                                })\n                                console.log(_formData)\n                                try {\n                                    axios.post('/upload-file-sism',\n                                        _formData)\n                                        .then((response) => {\n                                            if (response.data.success) {\n                                                console.log('succes upload')\n                                            } else {\n    \n                                            }\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n    \n                            notify('SUCCESS', 'Letter Submitted')\n                            if (!role.includes('Customer')) {\n                                insertLog('Insert New Incoming Letter', module_id)\n                            } else {\n                                insertLog('Insert New Outgoing Letter', module_id)\n                            }\n    \n    \n                            window.history.go(-1)\n    \n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }else {\n            try {\n                await axios.post(`/api/sism-letter_in/`, body)\n                    .then(response => {\n                        console.log(response)\n                        if (response.data.status === 200) {\n                            if (file_url.length > 0) {\n                                const _formData = new FormData()\n                                formdata.map((item, i) => {\n                                    _formData.append('file', item)\n                                })\n                                console.log(_formData)\n                                try {\n                                    axios.post('/upload-file-sism',\n                                        _formData)\n                                        .then((response) => {\n                                            if (response.data.success) {\n                                                console.log('succes upload')\n                                            } else {\n\n                                            }\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n\n                            notify('SUCCESS', 'Letter Submitted')\n                            if (!role.includes('Customer')) {\n                                insertLog('Insert New Incoming Letter', module_id)\n                            } else {\n                                insertLog('Insert New Outgoing Letter', module_id)\n                            }\n\n\n                            window.history.go(-1)\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n\n    return (\n        <div>\n           \n            <ToastContainer />\n            <Grid className=\"grid-example\">\n                <Toolbar\n                    title={role.includes('Customer') ? <b>New Letter</b> : <b>Form Incoming Letter</b>}\n                    nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a>}\n                />\n            </Grid>\n            <Grid className=\"grid-example\">\n                <Cell size={12}>\n                    <Card style={{ padding: '2.5vw', borderRadius: 8.0 }}>\n                        {role.includes('Customer') ? (\n                            <TextField\n                                icon={<FontIcon>how_to_reg</FontIcon>}\n                                disabled\n                                placeholder=\"To\"\n                                label=\"To\"\n                                value={'PT MSO Purwokerto'}\n                                inputClassName=\"txt_subject\"\n                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                            />\n                        ) : ''}\n                        <TextField\n                            icon={<i className='fa fa-list-ol' />}\n                            placeholder=\"Letter No\"\n                            label=\"Letter No\"\n                            onChange={changeLetterNumber}\n                            value={letter_number}\n                            inputClassName=\"txt_subject\"\n                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                        />\n                        <TextField\n                            icon={<i className='fa fa-align-left' />}\n                            placeholder=\"Subject\"\n                            label=\"Subject\"\n                            onChange={changeSubjcet}\n                            value={subject}\n                            inputClassName=\"txt_subject\"\n                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                        />\n                        {\n                            (() => {\n                                if (!role.includes('Customer')) {\n                                    return (\n                                        <Fragment>\n                                            <DatePicker\n                                                leftIcon=\"fa fa-calendar\"\n                                                onChange={changeLetterDate}\n                                                value={letter_date}\n                                                placeholder=\"Date Letter\"\n                                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                                style={{ marginTop: 20 }}\n                                            />\n                                            <TimePicker\n                                                leftIcon=\"fa fa-calendar\"\n                                                onChange={changeAcceptedTime}\n                                                value={accepted_time}\n                                                placeholder=\"Accepted Time \"\n                                                locales=\"da-DK\"\n                                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                            />\n                                            <SelectField\n\n                                                //dropdownIcon= {<FontIcon>how_to_reg</FontIcon>}\n                                                id=\"select-field-2\"\n                                                placeholder=\"Select BPR/Client\"\n                                                menuItems={clients}\n                                                anchor={{\n                                                    x: MenuButtonColumn.HorizontalAnchors.CENTER,\n                                                    y: MenuButtonColumn.VerticalAnchors.TOP\n                                                }}\n                                                onChange={onChangeClientId}\n                                                value={sender === null ? client_id : sender}\n                                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n\n                                            />\n                                            {isNotCustomer ? (\n                                                <TextField\n                                                    icon={<FontIcon>how_to_reg</FontIcon>}\n                                                    placeholder=\"Sender Name\"\n                                                    label=\"Sender Name\"\n                                                    onChange={changeSender}\n                                                    value={sender}\n                                                    inputClassName=\"txt_subject\"\n                                                    className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                                    style={{ marginBottom: 20 }}\n                                                />\n                                            ) : ''\n                                            }\n\n\n                                            <div className=\"summernote\" style={{ marginTop: 20 }} >\n                                                { ' ' }\n                                                \n                                            </div>\n                                            <br />\n                                            {file_url.map((item, i) => (\n                                                <div>\n                                                    <Chip className=\"state-chip\" label={item} removable onClick={() => deleteFile(item)} /><br />\n                                                </div>\n                                            ))}\n                                            <br />\n                                            <FileUpload\n                                                id=\"multiple-file-upload\"\n                                                multiple\n                                                onLoad={handleLoadFile}\n                                                style={{ backgroundColor: '#359ce6' }}\n                                                name=\"multipart-file-upload\"\n                                                label=\"Select files\"\n                                            />\n                                            <br />\n                                            <br />\n                                            {tagsInput.map((item, i) => (\n                                                <Fragment>\n                                                    <Chip className=\"state-chip\" label={item.label} removable onClick={() => deleteTag(item.label)} />&nbsp;\n                                                </Fragment>\n                                            ))}\n                                            <Autocomplete\n\n                                                id=\"select-field-tags\"\n                                                label=\"Tags\"\n                                                autoComplete=\"on\"\n                                                dataLabel=\"label\"\n                                                clearOnAutocomplete\n                                                dataValue=\"value\"\n                                                data={tags}\n                                                filter={Autocomplete.fuzzyFilter}\n                                                // onKeyDown={inputTag}\n                                                value={tagInputKey}\n                                                onFocus={startSearching}\n                                                onChange={handleChange}\n                                                onKeyDown={handleKeyDown}\n                                                onAutocomplete={handleAutocomplete}\n                                                className=\"md-cell md-cell--4-tablet md-cell--12\"\n\n                                            />\n                                            <br />\n\n                                        </Fragment>\n                                    )\n                                } else {\n                                    return (\n                                        <Fragment>\n                                            <div className=\"summernote\">\n                                                { ' ' }\n                                            </div>\n                                            <br />\n                                            {file_url.map((item, i) => (\n                                                <div>\n                                                    <Chip className=\"state-chip\" label={item} removable onClick={() => deleteFile(item)} /><br />\n                                                </div>\n                                            ))}\n                                            <br />\n                                            <FileUpload\n                                                id=\"multiple-file-upload\"\n                                                multiple\n                                                onLoad={handleLoadFile}\n                                                style={{ backgroundColor: '#359ce6' }}\n                                                name=\"multipart-file-upload\"\n                                                label=\"Select files\"\n                                            />\n                                            <br />\n                                            <br />\n                                        </Fragment>\n                                    )\n                                }\n                            })()\n                        }\n\n\n                        <Button primary raised onClick={handleSubmit} >Submit</Button>\n                        <Button raised onClick={() => window.history.go(-1)}  >Cancel</Button>\n\n                    </Card>\n\n                </Cell>\n\n            </Grid>\n        </div>\n    )\n}\n\n\n","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-in/form',\n        exact: true,\n        component: Form,\n    },\n    name: 'Form',\n}","import FormEdit from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-in/form/:id',\n        exact: true,\n        component: FormEdit,\n    },\n    name: 'FormEdit',\n}","import React, { Fragment, Component, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, TextField, Button, DialogContainer, DatePicker, Snackbar, SelectField, Avatar, Cell, MenuButton, List, ListItem, Card } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport io from 'socket.io-client'\nimport { socket_address } from '../../../../components/socket-address'\nimport ReactToPrint from 'react-to-print'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class LetterOut extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            isLoading: null,\n            module_id: '',\n            role: '',\n            role_id: '',\n            data: [],\n            dataToExport: [],\n            dataToExportPDF: [],\n            total_data: 0,\n            unapproved_letter_in: [],\n            modules: [],\n            key: '',\n            toasts: '',\n            _id: '',\n            isFilter: false,\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            created_by: payload.userId,\n            date_from: '',\n            date_to: '',\n            clients: [],\n            client_id: '',\n            list_contain: 'letter-out-all',\n            role_create: false,\n            role_update: false,\n            role_read: false,\n            role_delete: false,\n            currentPage: 1,\n            displayPerPage: 50\n        }\n        const socket = io(socket_address) //SERVER MSO\n\n        socket.on('LETTER_OUT_ADDED', (data) => {\n            this.fetchData()\n        })\n    }\n\n\n    componentDidMount = () => {\n\n        this.fetchData()\n\n    }\n\n    fetchData = async () => {\n        this.setState({ isLoading: true })\n        var moduleName = window.location.href.split('/')\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        this.setState({ module_id: item._id })\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${this.state.module_id}/${this.state.created_by}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: (response.data.data[0].role) })\n                        this.setState({ role_id: response.data.data[0].role_id })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: window.location.pathname, role_id: this.state.role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                this.setState({ role_read: true })\n                            }\n                            if (item.type_control === 'create') {\n                                this.setState({ role_create: true })\n                            }\n                            if (item.type_control === 'update') {\n                                this.setState({ role_update: true })\n                            }\n                            if (item.type_control === 'delete') {\n                                this.setState({ role_delete: true })\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n\n        if (this.state.role.includes('Customer')) {\n\n            try {\n                await axios.get(`/api/user/${this.state.created_by}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.state.client_id = response.data.data[0].client_id\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                await axios.get(`/api/sism-letters_in-total?client_id=${this.state.client_id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                await axios.get(`/api/sism-letters_in?client_id=${this.state.client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                            this.setState({ isLoading: false })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n\n        } else {\n\n            this.loadClients()\n\n            try {\n                await axios.get(`/api/sism-letters_out-total`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                axios.get(`/api/sism-letters_out?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                            this.setState({ isLoading: false })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    loadClients = async () => {\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (item.client_code > 0) {\n                                var obj = {\n                                    label: item.client_code + '-' + item.client_name,\n                                    value: item.client_name\n                                }\n                                dt[i] = obj\n                            }\n\n                            return false\n                        })\n                        this.setState({ clients: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    search = async (evt) => {\n        this.setState({ key: evt })\n        var filterString = `&date_from=${this.state.date_from}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n        if (this.state.role.includes('Customer')) {\n\n            try {\n                await axios.get(`/api/sism-letters_in-total?currentPage=${0}&displayPerPage=${0}&key=${evt}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n            try {\n                axios.get(`/api/sism-letters_in?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                            this.setState({ isLoading: false })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n\n            try {\n                axios.get(`/api/sism-letters_out-total?key=${evt}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ total_data: response.data.data[0].total })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n            try {\n                axios.get(`/api/sism-letters_out?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                            this.setState({ isLoading: false })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        this.setState({ currentPage: 1 })\n        console.log(this.state.total_data)\n    }\n\n    setDelete = (id) => {\n        this.setState({ _id: id })\n        this.setState({ dialogDeleteVisible: true })\n    }\n\n    deleteLetter = async () => {\n\n        if (this.state.role.includes('Customer')) {\n            try {\n                await axios.delete(`/api/sism-letter_in/${this.state._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.notify('SUCCESS', response.data.message)\n                            // fetchData()\n                            this.setState({ _id: '' })\n                            this.setState({ dialogDeleteVisible: false })\n                            this.fetchData()\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            try {\n                await axios.delete(`/api/sism-letter_out/${this.state._id}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.notify('SUCCESS', response.data.message)\n                            // fetchData()\n                            this.setState({ _id: '' })\n                            this.setState({ dialogDeleteVisible: false })\n                            this.fetchData()\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n    }\n\n    notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    setActivePage = (i) => {\n\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        // window.scrollTo(0,  tableData.current.offsetTop)\n\n\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n        this.setState({ isLoading: true })\n\n\n        var filterString = `&date_from=${this.state.date_from}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n\n        if (this.state.role.includes('Customer')) {\n\n\n            try {\n                await axios.get(`/api/sism-letters_in?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                            this.setState({ isLoading: false })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n\n            try {\n                await axios.get(`/api/sism-letters_out?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                            this.setState({ isLoading: false })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n    }\n\n    exportXLS = async () => {\n        var dataToExport = []\n        var filterString = `&date_from=${this.state.date_from}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n\n        if (this.state.role.includes('Customer')) {\n\n\n            try {\n                await axios.get(`/api/sism-letters_in?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map(async (item, i) => {\n                                var obj = {}\n                                obj['No'] = (i + 1)\n                                obj['Letter Number'] = item.letter_number\n                                obj['Subject'] = item.subject\n                                obj['To'] = 'PT MSO Purwokerto'\n                                obj['Date'] = dateformat(item.letter_date, 'dd mmm yyyy')\n                                dt.push(obj)\n                                return false\n                            })\n\n                            dataToExport = dt\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n\n            try {\n                await axios.get(`/api/sism-letters_out?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map(async (item, i) => {\n                                var obj = {}\n                                obj['No'] = (i + 1)\n                                obj['Letter Number'] = item.letter_number\n                                obj['Subject'] = item.subject\n                                obj['To'] = ''\n                                if (item.client_name !== null && item.client_name !== '' && item.client_name !== undefined) {\n                                    obj['To'] += item.client_name\n                                }\n                                obj['To'] += ','\n                                if (item.client_name_non_bpr !== null && item.client_name_non_bpr !== '' && item.client_name_non_bpr !== undefined) {\n                                    obj['To'] += item.client_name_non_bpr\n                                }\n\n                                obj['Date'] = dateformat(item.letter_date, 'dd mmm yyyy')\n                                dt.push(obj)\n                                return false\n                            })\n\n                            dataToExport = dt\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All Outgoing Letter  per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    beforeGetContent = async () => {\n        var filterString = `&date_from=${this.state.date_from}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n\n        if (this.state.role.includes('Customer')) {\n\n\n            try {\n                await axios.get(`/api/sism-letters_in?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ dataToExportPDF: response.data.data })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n\n            try {\n                await axios.get(`/api/sism-letters_out?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ dataToExportPDF: response.data.data })\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    onChangeClientId = (val) => {\n        this.setState({ client_id: val })\n    }\n    onChangeFromDate = (val) => {\n        this.setState({ date_from: val })\n    }\n    onChangeToDate = (val) => {\n        this.setState({ date_to: val })\n    }\n\n    filter = async () => {\n        this.setState({ isLoading: true })\n\n        var evt = this.state.key\n\n\n        if (this.state.role.includes('Customer')) {\n            if (this.state.date_from === '' && this.state.date_from === '') {\n                var filterString = `&date_from=${this.state.date_from}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n                try {\n                    await axios.get(`/api/sism-letters_in-total?currentPage=${0}&displayPerPage=${0}&key=${evt}${filterString}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n\n                try {\n                    axios.get(`/api/sism-letters_in?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}${filterString}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                                this.setState({ isLoading: false })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            } else {\n                this.fetchData()\n            }\n        } else {\n            if (this.state.date_from === '' && this.state.date_from === '') {\n                var filterString = `&date_from=${this.state.date_from}&date_to=${(this.state.date_to)}&client_id=${this.state.client_id}`\n                try {\n                    axios.get(`/api/sism-letters_out-total?key=${evt}${filterString}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ total_data: response.data.data[0].total })\n\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n                try {\n                    axios.get(`/api/sism-letters_out?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}${filterString}`)\n                        .then(response => {\n                            if (response.data.status === 200) {\n                                this.setState({ data: response.data.data })\n                                this.setState({ isLoading: false })\n                            }\n                        })\n                } catch (e) {\n                    console.log(e)\n                }\n            } else {\n                this.fetchData()\n            }\n\n        }\n\n\n        this.setState({ currentPage: 1 })\n\n    }\n\n    resetFilter = (val) => {\n        if (this.state.role.includes('Customer')) {\n            this.setState({ date_from: '', date_to: '' })\n        } else {\n            this.setState({ client_id: '', date_from: '', date_to: '' })\n        }\n\n\n    }\n\n    setTabList = (act) => {\n        if (act === 'create') {\n            this.setState({ contain: act })\n        } else {\n            this.setState({ list_contain: act })\n        }\n\n    }\n\n    LetterOutAll = () => {\n        const columns = !this.state.role.includes('Customer') ?\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: '', width: '5%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'To', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n            :\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'To', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n\n        const pages = []\n\n        const m = this.state.currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (this.state.currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        return (\n            <Fragment>\n                <Grid className=\"grid-example\">\n                    <Cell size={6} ></Cell>\n                    <Cell size={4} >\n                        <TextField\n                            icon={<i className=\"fa fa-search\" />}\n                            value={this.state.key}\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                    <Cell size={2} style={{ alignItems: 'right' }} >\n                        <button className=\"button is-small is-link\" onClick={() => this.setState({ isFilter: !this.state.isFilter })} style={{ borderRadius: '4px' }}><i className=\"fa fa-filter\"></i>&nbsp; <b>Filter</b></button>\n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                            }, {\n                                primaryText: (<ReactToPrint\n                                    onBeforeGetContent={this.beforeGetContent}\n                                    trigger={() => <p>PDF</p>}\n                                    content={() => this.componentRef}\n                                />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\" style={{ borderRadius: '4px' }} >\n                                <i className=\"fa fa-print\"></i>\n                                &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                role={this.state.role}\n                                data={this.state.dataToExportPDF}\n                            />\n                        </div>\n                    </Cell>\n                </Grid>\n                {this.state.isFilter ? (\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ padding: '10px', borderRadius: '8px', overflowX: 'scroll' }} >\n                                <h4>Filter</h4>\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"From Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.onChangeFromDate}\n                                    value={this.state.date_from}\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"To Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--12\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.onChangeToDate}\n                                    value={this.state.date_to}\n                                />\n                                {!this.state.role.includes('Customer') ? (\n                                    <SelectField\n                                        leftIcon={\"view_list\"}\n                                        label=\"Select BPR/Client\"\n                                        fullWidth\n                                        menuItems={this.state.clients}\n                                        onChange={this.onChangeClientId}\n                                        value={this.state.client_id}\n                                    />\n                                ) : ''}\n                                <br />\n                                <Button raised primary onClick={this.filter}>Apply</Button>\n                                <Button flat onClick={this.resetFilter} >Reset</Button>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                ) : ''}\n                <Grid className=\"grid-example\">\n                    <Cell size={12}>\n                        <Card style={{ padding: '10px', borderRadius: '8px' }} >\n                            <table className=\"table  is-striped\">\n                                <thead>\n                                    <tr>\n                                        {\n                                            columns.map((col, i_col) => (\n                                                <th>{col.label}</th>\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.state.data.map((item, i) => {\n                                        if (this.state.role.includes('Customer')) {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}><Avatar>{'PT MSO Purwokerto'.charAt(0)}</Avatar></td>\n                                                    <td  ><Link to={`/sism/letter-out/detail?id=${item._id}`}><b>{item.letter_number}</b></Link></td>\n                                                    <td  ><Link to={`/sism/letter-out/detail?id=${item._id}`}><b>{item.subject}</b></Link></td>\n                                                    <td width={'20%'}>\n                                                        PT MSO Purwokerto\n                                                </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                    {this.state.role_delete && this.state.role_update ? (\n                                                        <td>\n                                                            <LetterOutMenu id={item._id} setUpdate={(id) => this.setUpdate(id)} setDelete={(id) => this.setDelete(id)} />\n                                                        </td>\n                                                    ) : ''}\n                                                </tr>\n                                            )\n                                        } else {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}><Avatar>{item.client_code === null ? '-' : item.client_code}</Avatar></td>\n                                                    <td  ><Link to={`/sism/letter-out/detail?id=${item._id}`}><b>{item.letter_number}</b></Link></td>\n                                                    <td>{item.total_approved > 0  ?  (<span className=\"tag is-success\" style={{padding:'10px'}} ><i className=\"fa fa-check\"></i> &nbsp; APPROVED</span>)  :''}</td>\n                                                    <td  ><Link to={`/sism/letter-out/detail?id=${item._id}`}><b>{item.subject}</b></Link></td>\n                                                    <td width={'20%'}>\n                                                        {item.client_name === null ? '' : item.client_name} , {item.client_name_non_bpr === null ? '' : item.client_name_non_bpr}\n                                                    </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                    {this.state.role_delete && this.state.role_update ? (\n                                                        <td>\n                                                            <LetterOutMenu id={item._id} setUpdate={(id) => this.setUpdate(id)} setDelete={(id) => this.setDelete(id)} />\n                                                        </td>\n                                                    ) : ''}\n                                                </tr>\n                                            )\n                                        }\n                                    })}\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                </Grid>\n\n                <Grid className=\"grid-example\" >\n                    <Cell >\n                        {pages.length > 0 ? (\n                            <div className=\"container\">\n                                <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ) : (\n                                            <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                        )\n                                ))}\n                                <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                            </div>\n\n                        ) : ''}\n                    </Cell>\n                </Grid>\n            </Fragment>\n        )\n    }\n\n    render() {\n\n\n        const tabList = [\n\n\n            { color: '#348066', action: 'letter-out-all', icon: 'fa fa-envelope-open', tooltip: (<b>All &nbsp; ({this.state.total_data})</b>) },\n        ]\n\n        const componentRef = ''\n\n        if (this.state.isLoading) {\n            return (\n                <div className=\"notification\">\n                    <p>Loading data ...</p>\n                </div>\n            )\n        } else\n            return (\n                <div>\n                    {this.state.role_create ? (\n                        <Link to='/sism/letter-out/form'><Button style={{\n                            position: 'fixed',\n                            right: '10px',\n                            bottom: '20px',\n                            float: 'bottom'\n                        }} secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button></Link>\n                    ) : ''}\n\n                    <Grid className=\"grid-example\">\n                        <Cell size={6}>\n                            <h2 className=\"md-cell md-cell--12\">\n                                Outgoing Letters\n                        </h2>\n                        </Cell>\n                        <Cell size={6}>\n\n                        </Cell>\n                    </Grid>\n                    <div className=\"tabs\" style={{ border: 'none' }}>\n                        <ul>\n                            {tabList.map((item, i) => {\n                                if (this.state.list_contain === item.action) {\n                                    return (<li\n                                        style={{ borderBottom: 'solid 3px ' + item.color, backgroundColor: '#c7d6eb', padding: '10px 5px 0 0 ', borderTopRightRadius: '8px', borderTopLeftRadius: '8px' }} >\n                                        <a onClick={() => this.setTabList(item.action)} ><i className={item.icon} ></i>&nbsp;{item.tooltip} </a>\n\n                                    </li>\n                                    )\n                                } else {\n                                    return (<li\n                                        style={{ borderBottom: 'solid 3px ' + item.color, padding: '10px 5px 0 0 ', }} >\n                                        <a onClick={() => this.setTabList(item.action)} ><i className={item.icon} ></i>&nbsp; {item.tooltip} </a>\n\n                                    </li>\n                                    )\n                                }\n\n                            })}\n                        </ul>\n                    </div>\n                    {(() => {\n                        switch (this.state.list_contain) {\n                            case 'letter-out-all': return <this.LetterOutAll />\n                            default: return ''\n                        }\n                    })()}\n\n                    <Snackbar\n                        id=\"example-snackbar\"\n                        toasts={this.state.toasts}\n                        autohideTimeout={300}\n                    />\n                    <DialogContainer\n                        width={'600px'}\n                        id=\"simple-action-dialog\"\n                        visible={this.state.dialogDeleteVisible}\n                        onHide={() => !this.state.dialogDeleteVisible}\n                        actions={[<Button raised primary onClick={this.deleteLetter} >YES</Button>, <Button onClick={() => this.setState({ dialogDeleteVisible: false })} >NO</Button>]}\n                        title=\"Confirmation\"\n                    >\n                        <p>Are you sure delete this item?</p>\n                    </DialogContainer>\n                </div>\n\n            )\n    }\n}\n\n\nclass LetterOutMenu extends Component {\n    state = {\n\n    }\n\n    setUpdate = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render() {\n        const { is_reply_required } = this.props\n        var menuItems = []\n        if (is_reply_required) {\n            menuItems = [\n                <ListItem key={1} primaryText={<Link to={`/sism/letter-out/form?id=${this.props.id}`} >Edit &nbsp;<i className='fa fa-pencil' /> </Link>} style={{ backgroundColor: 'lightblue' }} />,\n                <ListItem key={2} primaryText='Delete' rightIcon={(<i className='fa fa-trash' />)} style={{ top: 0, backgroundColor: 'pink', marginTop: '0em' }} onClick={() =>\n                    this.setDelete(this.props.id)} />,\n                <ListItem key={2} primaryText={<Link to={`/sism/letter-out/form?letter_in_id=${this.props.id}`} >Reply &nbsp;<i className='fa fa-share' /> </Link>} style={{ top: 0, backgroundColor: 'lightgreen', marginTop: '0em' }} />\n            ]\n        } else {\n            menuItems = [\n                <ListItem key={1} primaryText={<Link to={`/sism/letter-out/form?id=${this.props.id}`} >Edit &nbsp;<i className='fa fa-pencil' /> </Link>} style={{ backgroundColor: 'lightblue' }} />,\n                <ListItem key={2} primaryText='Delete' rightIcon={(<i className='fa fa-trash' />)} style={{ top: 0, backgroundColor: 'pink', marginTop: '0em' }} onClick={() =>\n                    this.setDelete(this.props.id)} />\n            ]\n        }\n\n        return (\n            <MenuButton id='kebabmenu' icon menuItems={menuItems}\n                listInline centered\n                listStyle={{ textDecoration: 'none', listStyle: 'none', justifyItems: 'center' }}\n\n\n            > more_vert</MenuButton>\n        )\n    }\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            role: this.props.role\n        }\n    }\n    render() {\n        const columns = !this.state.role.includes('Customer') ?\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'To', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n            :\n            [\n\n                { label: '', width: '5%' },\n                { label: 'Letter No', width: '15%' },\n                { label: 'Subject', width: '15%' },\n                { label: 'To', width: '15%' },\n                { label: 'Date', width: '10%' },\n                { label: '', width: '2%' }\n            ]\n\n\n        return (\n            <div style={{ padding: '2.5%' }}>\n                <Grid className=\"grid-example\">\n                    <Cell size={6}>\n                        <h2 className=\"md-cell md-cell--12\">\n                            Outgoing Letters\n                         </h2>\n                        <p>per {dateformat(new Date(), 'dd mmm yyyy, HH:MM')}</p>\n                    </Cell>\n                    <Cell size={6}>\n\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={12}>\n                        <Card style={{ padding: '10px', borderRadius: '8px' }} >\n                            <table className=\"table  is-striped\" style={{ fontSize: '9pt' }}>\n                                <thead>\n                                    <tr>\n                                        {\n                                            columns.map((col, i_col) => (\n                                                <th>{col.label}</th>\n                                            ))\n                                        }\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {this.props.data.map((item, i) => {\n                                        if (this.state.role.includes('Customer')) {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}>{i + 1}</td>\n                                                    <td  >{item.letter_number}</td>\n                                                    <td  >{item.subject}</td>\n                                                    <td width={'20%'}>\n                                                        PT MSO Purwokerto\n                                    </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                </tr>\n                                            )\n                                        } else {\n                                            return (\n                                                <tr>\n                                                    <td width={'5%'}>{i + 1}</td>\n                                                    <td  >{item.letter_number}</td>\n                                                    <td  >{item.subject}</td>\n                                                    <td width={'20%'}>\n                                                        {item.client_name === null ? '' : item.client_name} , {item.client_name_non_bpr === null ? '' : item.client_name_non_bpr}\n                                                    </td>\n                                                    <td width={'12%'} >{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                </tr>\n                                            )\n                                        }\n                                    })}\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                </Grid>\n            </div>\n\n        )\n    }\n}","import LetterOut from './LetterOut'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-out',\n        exact: true,\n        component: LetterOut,\n    },\n    name: 'LetterOut',\n}","import React,{Component,Fragment, useState, useEffect} from 'react' \nimport { Grid,Cell,SelectField,Button,MenuButtonColumn } from 'react-md'; \nimport axios from 'axios'\nimport $ from 'jquery'\nimport qs from 'query-string'\n import * as summernote from 'summernote/dist/summernote-lite'\n//import '../../../styles.scss'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nvar dt = []\nconst clients=[]\nvar  data = new FormData()\n\nexport default function FormDisposition (props) {\n \n const [_id, setId]  = useState('')\n const [structure_id, setStuctureId]  = useState('')\n const [formdata, setFormdata]  = useState([])\n const [clients, setClients]  = useState([])\n const [file_url, setFileUrl]  = useState([])\n const [employees, setEmployees]  = useState([])\n const [to_user_id, setToUserId]  = useState('')\n const [from_user_id, setFromUserId]  = useState(payload.userId)\n const [disposition, setDisposition]  = useState('')\n const [created_by, setCreatedBy]  = useState(payload.userId)\n\n\n   \n    useEffect(() => {\n        $('.summernote').summernote({\n            placeholder:'Add Rejection Note',\n            height:'20vh'\n        })\n\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        setId(parsed.ticket_id)\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            setId(parsed.id)\n        }\n\n      \n        initialFecth()\n       \n\n    },[] )\n\n   \n\n    async function initialFecth() {\n\n\n        try{\n             axios.get(`/api/user/${payload.userId}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                     \n                            console.log(item.structure_id)\n                           \n                       \n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        \n        \n        \n    }\n\n    \n\n    const notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    \n\n    function onChangeToUserID (evt)  {\n       setToUserId (evt)\n    }\n\n   async function handleSubmit () {\n        \n        var editor  = window.document.getElementsByClassName('note-editable')[0]\n\n        var body = {\n            letter_out_id: _id,\n            note: '<span class=\"tag is-danger\" style=\"padding:10px\" ><i class=\"fa fa-minus-circle\"></i> &nbsp; REJECTED</span> <br /><br />' + editor.innerHTML,\n            created_by: payload.userId,\n            reviewed_by_user_id : created_by,\n            is_approved : 0,\n            module_id : props.module_id\n        }\n        \n        \n                   // body.created_by = payload.userId\n        try { \n            await axios.post(`/api/sism-letter-out-approval`,body)\n             .then(response => {\n                 \n                if (response.data.status ===200) {\n                    notify('SUCCESS','You Rejected!')\n                   \n                    closeFormRejectApproval ()\n                    successRejectApproval ()\n                }else{\n                    notify('ERROR','Failed Processing data')\n                }\n                     \n               \n             })\n        } catch (error) {\n            notify('ERROR',error)\n        }\n         \n    }\n\n    function closeFormRejectApproval () {\n        props.closeFormRejectApproval(false)\n    }\n\n    function successRejectApproval () {\n        props.successRejectApproval(_id)\n    }\n\n\n\n        return(\n            <div >\n                 <ToastContainer />\n                <Grid className=\" box  md-cell md-cell--12\">\n\n                        <h2 className=\"md-cell md-cell--12\">\n                            Reject  Outgoing Letter\n                        </h2> \n\n                   \n                \n                  <Cell size={12} >\n\n                    <div className=\"summernote\">\n                        {/* This is for text editor Summernote */}\n                    </div>\n                    <br />\n                    \n                    <br />\n                    <Button primary raised onClick={handleSubmit} >Reject </Button>\n                    <Button  raised onClick={closeFormRejectApproval} >Cancel</Button>\n               </Cell>\n              \n               </Grid>\n               <ToastContainer />\n            </div>\n        )\n    }\n","import React, { Component, Fragment, useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Toolbar, Button, Cell, Card, Avatar, IconSeparator, DialogContainer, Chip } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport ReactToPrint from 'react-to-print'\nimport FormRejectApproval from './FormRejectApproval'\nimport * as FileSaver from 'file-saver';\nimport * as JsZIP from 'jszip';\nimport * as JsZIPUtils from 'jszip-utils';\nimport { Session } from 'bc-react-session'\nconst { payload } = Session.get()\n\nexport default function Detail(props) {\n\n    const [role_id, setRoleId] = useState('')\n    const [isLoading, setIsLoading] = useState(true)\n    const [role, setRole] = useState('')\n    const [role_create, setRoleCreate] = useState(null)\n    const [role_read, setRoleRead] = useState(null)\n    const [role_update, setRoleUpdate] = useState(null)\n    const [role_delete, setRoleDelete] = useState(null)\n    const [letter_number, setLetterNumber] = useState('')\n    const [created_by, setCreatedBy] = useState(payload.userId)\n    const [module_id, setModuleId] = useState('')\n    const [letter_in_number, setLetterInNumber] = useState('')\n    const [letter_in_subject, setLetterInSubject] = useState('')\n    const [_id, setId] = useState('')\n    const [letter_created_by, setLetterCreatedBy] = useState('')\n    const [data, setData] = useState([])\n    const [file_url, setFileUrl] = useState([])\n    const [tags, setTags] = useState([])\n    const [approval, setApproval] = useState([])\n    const [isApproved, setIsApproved] = useState(0)\n    const [recipient, setRecipient] = useState([])\n    const [handled_by_user_id, setHandledByUserId] = useState('')\n    const [isConfirmApproval, setIsConfirmApproval] = useState(false)\n    const [isRejectApproval, setIsRejectApproval] = useState(false)\n    let componentRef = useRef(null);\n\n    useEffect(() => {\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            setId(parsed.id)\n        }\n\n\n        var moduleName = window.location.href.split('/')\n        try {\n            axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        setModuleId(item._id)\n                        try {\n                            axios.get(`/api/user-role/${item._id}/${payload.userId}`)\n                                .then(response => {\n\n                                    if (response.data.status === 200 && response.data.data.length > 0) {\n                                        setRole(response.data.data[0].role)\n                                        setRoleId(response.data.data[0].role_id)\n                                        loadROleControl(response.data.data[0].role_id)\n                                        initialFetch(parsed.id, response.data.data[0].role)\n                                    }\n\n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n\n\n    }, [])\n\n    async function loadROleControl(role_id) {\n        try {\n            await axios.post(`/api/role-control-by-link-role-id`, { link: '/sism/letter-out' , role_id: role_id })\n                .then(response => {\n\n                    if (response.data.status === 200) {\n\n                        response.data.data.map((item, i) => {\n                            if (item.type_control === 'read') {\n                                setRoleRead(true)\n                            }\n                            if (item.type_control === 'create') {\n                                setRoleCreate(true)\n                            }\n                            if (item.type_control === 'update') {\n                                setRoleUpdate(true)\n                            }\n                            if (item.type_control === 'delete') {\n                                setRoleDelete(true)\n                            }\n\n                        })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // useEffect(() => {\n\n\n\n    // }, [_id,role_id])\n\n    async function initialFetch(_id, role) {\n\n\n\n        console.log(_id)\n\n\n\n\n        if (!role.includes('Customer')) {\n            loadLetterOut(_id)\n            loadLetterOutFile(_id)\n            loadLetterOutTag(_id)\n            loadLetterOutRecipient(_id)\n            loadLetterOutApproval(_id)\n\n            // loadIsApproved()\n\n        } else {\n            loadLetterIn(_id)\n            loadLetterInFile(_id)\n        }\n\n\n\n\n    }\n\n    function loadIsApproved() {\n        approval.map((item, i) => {\n            if (item.is_approved === 1) {\n                setIsApproved(isApproved + 1)\n            }\n        })\n\n        console.log(isApproved)\n\n    }\n\n    function loadLetterOut(_id) {\n        try {\n            axios.get(`/api/sism-letter_out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setData(response.data.data)\n\n                        setLetterNumber(response.data.data[0].letter_number)\n                        loadLetterInPrevious(response.data.data[0].letter_in_id)\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterIn(_id) {\n        try {\n            axios.get(`/api/sism-letter_in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setData(response.data.data)\n\n                        setLetterNumber(response.data.data[0].letter_number)\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterInPrevious(letter_in_id) {\n        try {\n            axios.get(`/api/sism-letter_in/${letter_in_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n\n                        setLetterInNumber(response.data.data[0].letter_number)\n                        setLetterInSubject(response.data.data[0].subject)\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }\n\n\n\n\n\n\n    function loadLetterOutFile(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-file-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setFileUrl(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterInFile(_id) {\n        try {\n            axios.get(`/api/sism-letter-in-file-by-letter-in/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setFileUrl(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterOutTag(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-tag-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setTags(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterOutRecipient(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-recipient-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setRecipient(response.data.data)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterOutApproval(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-approval-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        setApproval(response.data.data)\n                        response.data.data.map((item, i) => {\n                            if (item.is_approved === 1) {\n                                setIsApproved(isApproved + 1)\n                            }\n                        })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n\n    const notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    async function approve() {\n\n\n        var body = {\n            letter_out_id: _id,\n            note: '<span class=\"tag is-success\" style=\"padding:10px\" ><i class=\"fa fa-check\"></i> &nbsp; APPROVE</span>',\n            is_approved: 1,\n            created_by: payload.userId,\n            reviewed_by_user_id: created_by,\n            letter_created_by: letter_created_by,\n            module_id: module_id\n\n        }\n\n\n        // body.created_by = payload.userId\n        try {\n            await axios.post(`/api/sism-letter-out-approval`, body)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        notify('SUCCESS', 'You Approved this!')\n                        setIsConfirmApproval(false)\n                        loadLetterOutApproval(_id)\n                    } else {\n                        notify('ERROR', 'Failed Processing')\n                    }\n\n\n                })\n        } catch (error) {\n            notify('ERROR', error)\n        }\n    }\n\n    function closeFormRejectApproval(act) {\n        setIsRejectApproval(act)\n    }\n\n    function successRejectApproval(_id) {\n        loadLetterOutApproval(_id)\n    }\n\n\n    function prinfFileAttachment() {\n        var zip = new JsZIP();\n\n        let count = 0\n        file_url.map((url, i) => {\n            JsZIPUtils.getBinaryContent(url.file_url, function (err, data) {\n                if (err) {\n                    throw err\n                }\n                var filename = url.file_url.replace(/.*\\//g, \"\");\n                zip.file(filename, data, { binary: true })\n                count++\n                if (count == file_url.length) {\n                    zip.generateAsync({ type: 'blob' }).then(function (content) {\n                        FileSaver.saveAs(content, `file-surat-${letter_number}.zip`)\n                    })\n                }\n\n            })\n        })\n\n    }\n\n\n    return (\n        <div>\n            <ToastContainer />\n            <Fragment>\n                <Grid className=\"grid-example\">\n                    <Toolbar\n                        title={<b>{\"Detail #\" + letter_number}</b>}\n                        nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a>}\n                    />\n                </Grid>\n                {data.map((item, i) => (\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ minHeight: '77vh', padding: '2.5vw', borderRadius: '10px' }}>\n\n                                <div className=\"media\">\n                                    <div className=\"media-left\">\n                                        <p><b>{dateformat(item.letter_date, 'dd mmm yyyy')}</b></p>\n                                        <p><b>{item.sent_time}</b></p>\n                                    </div>\n                                    <div className=\"media-content\">\n                                        <div className=\"content\">\n\n                                            <div className=\"columns\" style={{ justifyContent: 'space-between', paddingLeft: '10px' }}>\n                                                <div className=\"level-item\" >\n                                                    <p>[Outgoing Letter]</p>\n                                                </div>\n                                                <div className=\"level-item\" style={{ alignItems: 'end' }}>\n                                                    <ReactToPrint\n                                                        trigger={() => <button className=\"button  is-info\" style={{ borderRadius: '5px' }}\n\n                                                        >\n                                                            <i className=\"fa fa-print\"></i> &nbsp; Print\n                                                    </button>}\n                                                        content={() => componentRef}\n                                                    />\n                                                    <div style={{ display: \"none\" }}>\n                                                        <Printable\n                                                            ref={el => (componentRef = el)}\n                                                            role={role}\n                                                            data={data}\n                                                            approval={approval}\n                                                            recipient={recipient}\n                                                        />\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <p><h4><b>{item.subject}</b></h4></p>\n                                            <p><b>To:</b></p>\n                                            {role.includes('Customer') ? (\n                                                <Fragment>\n                                                    <Chip label={(\n                                                        <IconSeparator label={'PT MSO Purwokerto'} iconBefore>\n                                                            <Avatar>{'PT MSO Purwokerto'.charAt(0)}</Avatar>\n                                                        </IconSeparator>\n                                                    )} style={{\n                                                        margin: '3px',\n                                                        paddingLeft: '20px',\n                                                        paddingTop: '8px',\n                                                        paddingRight: '8px',\n                                                        paddingBottom: '8px',\n                                                        fontSize: '9pt'\n                                                    }}></Chip>\n\n                                                    <p>&nbsp;</p>\n                                                </Fragment>\n                                            ) : (\n                                                    <Fragment>\n                                                        {recipient.map((snd, i_snd) => (\n                                                            <Fragment >\n                                                                <Chip label={(\n                                                                    <IconSeparator style={{\n                                                                        marginRight: '10px',\n                                                                        padding: '3px',\n                                                                        fontSize: '9pt'\n                                                                    }} label={snd.client_name === null ? snd.recipient : snd.client_name} iconBefore style={{ marginBottom: 10 }}>\n                                                                        <Avatar style={{ marginRight: '15px' }}>{snd.client_code === null ? snd.recipient.charAt(0) : snd.client_code}</Avatar>\n                                                                    </IconSeparator>\n                                                                )} style={{\n                                                                    margin: '3px',\n                                                                    paddingLeft: '20px',\n                                                                    paddingTop: '8px',\n                                                                    paddingRight: '8px',\n                                                                    paddingBottom: '8px',\n                                                                    fontSize: '9pt'\n                                                                }}>\n\n                                                                </Chip>\n                                                            &nbsp;\n                                                            </Fragment>\n\n\n                                                        ))}\n                                                        <p>&nbsp;</p>\n                                                    </Fragment>\n                                                )}\n\n                                            {item.message === '' || item.message === null ? '' : (\n                                                <div className=\"notification is-light\">\n                                                    <div dangerouslySetInnerHTML={{ __html: item.message }} />\n                                                </div>\n                                            )}\n\n                                            {file_url.length > 0 ? (\n                                                <Fragment>\n                                                    <div className=\"level\" style={{ justifyContent: 'space-between' }}>\n                                                        <div >\n                                                            <p><b>Attachments:</b></p>\n                                                        </div>\n                                                        <div >\n                                                            <button className=\"button  is-info\" style={{ borderRadius: '5px' }}\n                                                                onClick={prinfFileAttachment}\n                                                            >\n                                                                <i className=\"fa fa-download\"></i> &nbsp; Download\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                    {\n                                                        file_url.map((file, i_file) => {\n                                                            var splited_fie_url = file.file_url.split('.')\n                                                            var extension_file = splited_fie_url[splited_fie_url.length - 1]\n                                                            console.log(extension_file)\n                                                            if (extension_file === 'png' || extension_file === 'jpg' || extension_file === 'jpeg') {\n                                                                return (\n                                                                    <img src={file.file_url} alt=\"file_image\" style={{ width: '75%' }} />\n                                                                )\n                                                            } else {\n                                                                return <iframe src={file.file_url} frameborder=\"0\" style={{ width: '100%', height: '75vh' }}></iframe>\n\n                                                            }\n\n                                                        }\n\n                                                        )\n                                                    }\n                                                    <br />\n                                                </Fragment>\n                                            ) : ''}\n\n\n                                            {tags.length > 0 ? (\n                                                <Fragment>\n                                                    <p><b>Tags:</b></p>\n                                                    {tags.map((item, i) => (\n                                                        <Fragment>\n                                                            <Chip className=\"state-chip\" label={item.tag} />&nbsp;\n                                                        </Fragment>\n                                                    ))}\n\n                                                    <br />\n                                                </Fragment>\n                                            ) : ''}\n                                            <br />\n                                            {item.letter_in_id !== '' && !role.includes('Customer') ? (\n                                                <Fragment>\n                                                    <p><b>Incoming Letter:</b></p>\n                                                    <span className=\"tag\" style={{ margin: '5px', fontSize: '12pt' }}><Link to={`/sism/letter-in/detail?id=${item.letter_in_id}`} ><b>{letter_in_number + ' - ' + letter_in_subject}</b></Link></span> <br />\n                                                </Fragment>\n                                            ) : ''}\n                                            <br />\n                                            {(() => {\n                                                if (!role.includes('Customer')) {\n                                                    return (\n                                                        <Fragment>\n                                                            {approval.length > 0 ? (\n                                                                <Fragment>\n                                                                    <p><b>Approval:</b></p>\n                                                                    {approval.map((item, i) => (\n                                                                        <div className=\"notification is-light\" style={{ borderRadius: '10px' }}>\n                                                                            <div className=\"media\">\n                                                                                <div className=\"media-left\">\n                                                                                    {item.avatar_url !== null ? (\n                                                                                        <Avatar src={item.avatar_url}></Avatar>\n                                                                                    ) : (\n                                                                                            <Avatar>{item.full_name.charAt(0)}</Avatar>\n                                                                                        )}\n                                                                                </div>\n                                                                                <div className=\"media-content\">\n                                                                                    <div className=\"content\">\n                                                                                        <p><b>{item.full_name} - {item.structure} </b></p>\n                                                                                        <p style={{ fontSize: '8pt' }}><i>{dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</i></p>\n                                                                                        <div dangerouslySetInnerHTML={{ __html: item.note }} />\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    ))}\n                                                                </Fragment>\n                                                            ) : ''}\n\n                                                            {(isApproved <= 0) ? (role.includes('Admin') || role.includes('admin') || role.includes('Direktur Utama')) ? (\n                                                                <Fragment>\n                                                                    <p><b>Select Action:</b></p>\n                                                                    {isRejectApproval ? (\n                                                                        <FormRejectApproval module_id={module_id} _id={_id} closeFormRejectApproval={(act) => closeFormRejectApproval(act)} successRejectApproval={(id) => successRejectApproval(id)} />\n                                                                    ) : (\n                                                                            <Fragment>\n                                                                                <Button primary raised onClick={() => setIsConfirmApproval(true)} >APPROVE </Button>\n                                                                                    &nbsp;\n                                                                                <Button raised style={{ backgroundColor: 'pink' }} onClick={() => setIsRejectApproval(true)}  >REJECT</Button>\n                                                                            </Fragment>\n                                                                        )}\n                                                                </Fragment>\n                                                            ) : '' : ''}\n\n                                                        </Fragment>\n                                                    )\n                                                }\n                                            })()}\n\n                                        </div>\n                                    </div>\n                                </div>\n\n\n                            </Card>\n                        </Cell>\n                    </Grid>\n                ))}\n            </Fragment>\n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={isConfirmApproval}\n                onHide={() => setIsConfirmApproval(false)}\n                actions={[<Button raised primary onClick={approve} >YES</Button>, <Button onClick={() => setIsConfirmApproval(false)} >NO</Button>]}\n                title=\"Confirmation\"\n            >\n                <p>Are you sure to proceed?</p>\n            </DialogContainer>\n\n\n        </div>\n    )\n}\n\nclass Printable extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const styleTable = {\n            tg: { borderCollapse: 'collapse', borderSpacing: 0 },\n            tgTd: {\n                fontFamily: 'Arial, sans-serif', fontSize: '14px', padding: '10px 5px', borderStyle: 'solid', borderWidth: '1px', overflow: 'hidden', wordBreak: 'normal',\n                borderColor: 'black'\n            },\n            tgTh: {\n                fontFamily: 'Arial, sans-serif', fontSize: '14px', fontWeight: 'normal', padding: '10px 5px',\n                borderStyle: 'solid', borderWidth: '1px', overflow: 'hidden', wordBreak: 'normal', borderColor: 'black'\n            },\n            tgZv4m: { borderColor: '#ffffff', textAlign: 'left', verticalAlign: 'top' }\n        }\n        return (\n            <div style={{ padding: '20px' }}>\n                {this.props.data.map((item, i) => (\n                    <Fragment>\n                        <div className=\"level\">\n                            <div className=\"level-item\" style={{ textAlign: 'center' }}>\n                                <p style={{ fontWeight: 'bold', textAlign: 'center', textDecoration: 'underline' }}>LEMBAR SURAT KELUAR</p>\n                            </div>\n                        </div>\n\n                        <br />\n\n                        <table border={0}>\n                            <tr><td width={'15%'}>Surat Kpd</td><td>:</td>\n                                <td>\n                                    {!this.props.role.includes('Customer') ? this.props.recipient.map((recipient, i_sender) => (\n                                        <Fragment>\n                                            <span>{recipient.client_name === null ? recipient.recipient : recipient.client_name}</span>,&nbsp;\n                                        </Fragment>\n\n                                    )) : 'PT MSO Purwokerto' }\n                                </td>\n                            </tr>\n                            <tr>\n                                <td width={'15%'}>Nomor Surat</td><td>:</td><td>{item.letter_number} </td>\n                                {!this.props.role.includes('Customer') ?  (<td rowSpan={5} style={{ width: '10%', border: '1px' }}>Paraf Adm. Umum</td>) : '' }\n                                \n                            </tr>\n                            <tr><td width={'15%'}>Tanggal Surat</td><td>:</td><td colSpan={2}>{dateformat(item.letter_date, 'dd/mm/yyyy')}</td></tr>\n                            <tr><td width={'15%'}>Dikirim Tanggal</td><td>:</td><td colSpan={2}>{dateformat(item.letter_date, 'dd/mm/yyyy')}</td></tr>\n                            <tr><td width={'15%'}>Jam</td><td>:</td><td colSpan={2}>{item.accepted_time} </td></tr>\n                            <tr><td width={'15%'}>Nomor Agenda</td><td>:</td><td colSpan={2}></td></tr>\n                            <tr><td width={'15%'}>Sifat</td><td>:</td><td></td></tr>\n                            <tr><td width={'15%'}>Perihal</td><td>:</td><td>{item.subject} </td></tr>\n                            <tr><td width={'15%'}>Isi Pesan</td><td>:</td><td>{\n                                <div dangerouslySetInnerHTML={{ __html: item.message }} />\n                            }</td>\n                            </tr>\n\n                        </table>\n                        {!this.props.role.includes('Customer') ? (\n                            <Fragment>\n                                <div className=\"columns\" style={{ marginTop: '20vh' }}>\n                                    <div className=\"column is-8\" >\n\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n                                        <table border={1} cellPadding={8}>\n                                            <tr>\n                                                <td style={{ minWidth: '100px' }}>Paraf Dirut</td>\n                                            </tr>\n                                            <tr>\n                                                <td style={{ height: '10vh' }}></td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n                                        <table border={1} cellPadding={8}>\n                                            <tr >\n                                                <td style={{ minWidth: '100px' }}  >Paraf DirOps</td>\n                                            </tr>\n                                            <tr>\n                                                <td style={{ height: '10vh' }}></td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n                                        <table border={1} cellPadding={8}>\n                                            <tr >\n                                                <td style={{ minWidth: '100px' }}>Paraf Spv</td>\n                                            </tr>\n                                            <tr>\n                                                <td style={{ height: '10vh' }}></td>\n                                            </tr>\n                                        </table>\n                                    </div>\n                                    <div className=\"column is-1\" style={{ border: '1px', padding: '10px' }}>\n\n                                    </div>\n                                </div>\n                            </Fragment>\n                        ) : ''}\n\n\n                    </Fragment>\n\n                ))}\n\n            </div>\n        )\n    }\n}\n\n","import Detail from './Detail.jsx'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-out/detail',\n        exact: true,\n        component: Detail,\n    },\n    name: 'Detail',\n}","import React, { Component, Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Cell, Card, TextField, Autocomplete, SelectionControl, Chip, DatePicker, MenuButtonColumn, FileUpload, Button, SelectField, TimePicker, Toolbar, Checkbox, Paper } from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\nimport dateformat from \"dateformat\"\nimport $ from 'jquery/dist/jquery.js'\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { insertLog } from '../../../../log/InsertLog'\n\nimport { Session } from 'bc-react-session'\nconst { payload } = Session.get()\n\n\nvar _formData = new FormData()\n\nexport default function Form(props) {\n    const [isLoading, setIsLoading] = useState(null)\n    const [module_id, setModuleId] = useState('')\n    const [role, setRole] = useState('')\n    const [role_id, setRoleId] = useState('')\n    const [toasts, setToasts] = useState('')\n    const [_id, setId] = useState('')\n    const [tagInputKey, setTagInputKey] = useState('')\n    const [recipientInputKey, setRecipientInputKey] = useState('')\n    const [letter_in_id, setLetterInId] = useState('')\n    const [letter_in_number, setLetterInNumber] = useState('')\n    const [letter_in_subject, setLetterInSubject] = useState('')\n    const [key, setKey] = useState('')\n    const [key2, setKey2] = useState('')\n    const [clients, setClients] = useState([])\n    const [status, setStatus] = useState([])\n    const [status_id, setStatusId] = useState(0)\n    const [recipients, setRecipients] = useState([])\n    const [formdata, setFormdata] = useState([])\n    const [isCustomer, setIsCustomer] = useState(false)\n    const [isNotCustomer, setIsNotCustomer] = useState(false)\n    const [client_id, setClientId] = useState('')\n    const [sender, setSender] = useState('')\n    const [letter_date, setLetterDate] = useState(new Date())\n    const [accepted_time, setAcceptedTime] = useState('')\n    const [message, setMessage] = useState('')\n    const [subject, setSubject] = useState('')\n    const [letter_number, setLetterNumber] = useState('')\n    const [letter_numberLetterIn, setLetterNumberLetterIn] = useState('')\n    const [tagsInput, setTagsInput] = useState([])\n    const [tags, setTags] = useState([])\n    const [recipientInput, setRecipientInput] = useState([])\n    const [created_by, setCreatedBy] = useState(payload.userId)\n    const [file_url, setFileUrl] = useState([])\n\n    useEffect(() => {\n\n        $('.summernote').summernote({\n            placeholder: 'Message',\n            height: '20vh'\n        })\n\n        const parsed = qs.parse(window.location.search)\n       \n\n        if (parsed.id !== undefined && parsed.id !== null && parsed.id !== '') {\n            setId(parsed.id)\n        }\n\n        if (parsed.letter_in_id !== undefined && parsed.letter_in_id !== null && parsed.letter_in_id !== '') {\n            setLetterInId(parsed.letter_in_id)\n            loadLetterIn(parsed.letter_in_id)\n            loadLetterInSender(parsed.letter_in_id)\n        }\n\n        var moduleName = window.location.href.split('/')\n        try {\n            axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        setModuleId(item._id)\n                        try {\n                            axios.get(`/api/user-role/${item._id}/${payload.userId}`)\n                                .then(response => {\n                \n                                    if (response.data.status === 200) {\n                                        setRole(response.data.data[0].role)\n                                        setRoleId(response.data.data[0].role_id)\n                                       \n                                    }\n                \n                                })\n                        } catch (error) {\n                            console.log(error)\n                        }\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n\n        initialFetch(parsed.id)\n\n\n    }, [])\n\n  \n\n    async function initialFetch(_id) {\n        \n\n        \n        console.log(_id)\n\n       \n\n        if (_id !=='' && _id !== null && _id !==undefined) {\n            loadLetterOut(_id)\n            loadLetterOutRecipient(_id)\n            loadLetterOutTag(_id)\n            loadLetterOutFile(_id)\n        }\n\n        loadDataCustomer()\n        loadCLients()\n        loadTags()\n\n    }\n\n    function loadLetterOut(_id) {\n        try {\n            axios.get(`/api/sism-letter_out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0 ) {\n                        setCreatedBy(response.data.data[0].created_by)\n                        setLetterNumber(response.data.data[0].letter_number)\n                        setLetterDate(response.data.data[0].letter_date)\n                        setSubject(response.data.data[0].subject)\n                        setMessage(response.data.data[0].message)\n                        $('.summernote').summernote('code',response.data.data[0].message)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        console.log(message)\n        var editor = window.document.getElementsByClassName('note-editable')[0]\n        editor.innerHTML = (message)\n\n    }\n\n    function loadLetterIn(letter_in_id) {\n        try {\n            axios.get(`/api/sism-letter_in/${letter_in_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0 ) {\n                       \n                        setLetterInNumber(response.data.data[0].letter_number)\n                        setLetterInSubject(response.data.data[0].subject)\n                        \n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n       \n\n    }\n\n    function loadLetterInSender(letter_in_id) {\n        try {\n            axios.get(`/api/sism-letter-in-sender-by-letter-in/${letter_in_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            const obj = {\n                                label: item.client_name === null ? item.sender : item.client_code+' - '+item.client_name,\n                                value: item.sender\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        setRecipientInput(dt)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterOutRecipient(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-recipient-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            const obj = {\n                                label: item.client_name === null ? item.recipient : item.client_code+' - '+item.client_name,\n                                value: item.recipient\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        setRecipientInput(dt)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterOutTag(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-tag-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            const obj = {\n                                label: item.tag,\n                                value: item.tag_id\n                            }\n                            dt[i] = obj\n                            return false\n                        })\n                        setTagsInput(dt)\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    function loadLetterOutFile(_id) {\n        try {\n            axios.get(`/api/sism-letter-out-file-by-letter-out/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                \n                                dt[i] = item.file_url.replace('/sism/files/','')\n                                return false\n                            })\n                            setFileUrl(dt)\n                        }\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n\n    function loadDataCustomer() {\n        if (role.includes('Customer')) {\n            try {\n                axios.get(`/api/user/${created_by}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            setClientId(response.data.data[0].client_id)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    function loadCLients() {\n        if (client_id === '' && !role.includes('Customer')) {\n            try {\n                axios.get(`/api/clients`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                const obj = {\n                                    label: item.client_code + ' - ' + item.client_name,\n                                    value: item._id\n                                }\n                                dt[i] = obj\n                                return false\n                            })\n                            setClients(dt)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n\n        }\n    }\n\n    function loadTags() {\n        if (!role.includes('Customer')) {\n            try {\n                axios.get(`/api/sism-tags`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map((item, i) => {\n                                const obj = {\n                                    label: item.tag,\n                                    value: item._id\n                                }\n                                dt[i] = obj\n                                return false\n                            })\n                            setTags(dt)\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    const notify = (type, message) => toast(\n        (message), {\n        type: toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n\n    })\n\n    \n\n    function changeLetterNumber(val) {\n        setLetterNumber(val)\n    }\n\n    function changeSubjcet(val) {\n        setSubject(val)\n    }\n\n    \n\n    function handleLoadFile(uploadedFile, uploadedData) {\n        var fileUrl = [...file_url, (uploadedFile.name)]\n        var formData = [...formdata, (uploadedFile)]\n        setFileUrl(fileUrl)\n        setFormdata(formData)\n    }\n\n    function deleteFile(file) {\n\n        const result = formdata.filter(({ name }) => !name.includes(file))\n        var fileUrl = file_url\n        var index = fileUrl.indexOf(file);\n\n        if (index > -1) {\n            fileUrl.splice(index, 1);\n        }\n\n        setFileUrl(result)\n    }\n\n    function inputTag(evt, evt2) {\n\n\n        var _key = key + evt.key\n        setKey(_key)\n\n        console.log(key)\n        if (evt.keyCode === 13) {\n            var dt = {\n                label: key,\n                value: ''\n            }\n            setKey('')\n            var _tagsInput = [...tagsInput, dt]\n            setTagsInput(_tagsInput)\n\n\n            evt = ''\n            var inputAutoComplete = document.getElementById('select-field-tags')\n            inputAutoComplete.value = ''\n        }\n\n    }\n\n\n\n\n\n    function deleteTag(val) {\n\n        var result = tagsInput.filter(({ label }) => !label.includes(val))\n        setTagsInput(result)\n    }\n\n\n    function handleChange (value) {\n        setTagInputKey(value);\n    };\n\n    function handleKeyDown (e) {\n        \n         if (e.key === 'Enter') {\n            addTag(tagInputKey)\n            setTagInputKey('')\n         }\n    };\n    \n    function  handleAutocomplete (value) {\n        \n        if (tagInputKey === value) {\n            return;\n            \n        }\n    \n        addTag(value);\n    };\n\n    function addTag(val) {\n        var index = tags.findIndex(p => p.value == val)\n        if (index < 0) {\n            var dt = {\n                label : val,\n                value : '' \n            }\n            var _tags = [...tagsInput,dt]\n        }else {\n            var _tags = [...tagsInput,tags[index]]\n        }\n        \n        setTagsInput(_tags)\n        console.log(tagsInput)\n    }\n\n    function handleChangeRecipient (value) {\n        setRecipientInputKey(value);\n    };\n\n    function handleKeyDownRecipient (e) {\n        \n         if (e.key === 'Enter') {\n            addRecipient1(recipientInputKey)\n            setRecipientInputKey('')\n         }\n    };\n    \n    function  handleAutocompleteRecipient (value) {\n        \n        if (tagInputKey === value) {\n            return;\n            \n        }\n    \n        addRecipient1(value);\n    };\n\n    function addRecipient1(val) {\n        var index = clients.findIndex(p => p.value == val)\n        if (index < 0) {\n            var dt = {\n                label : val,\n                value : '' \n            }\n            var _recipients = [...recipientInput,dt]\n        }else {\n            var _recipients = [...recipientInput,clients[index]]\n        }\n\n        setRecipientInput(_recipients)\n        \n    }\n\n    function deleteRecipient(val) {\n\n        var result = recipientInput.filter(({ label }) => !label.includes(val))\n        console.log(result)\n        setRecipientInput(result)\n    }\n\n    \n    async function handleSubmit() {\n        var editor = window.document.getElementsByClassName('note-editable')[0]\n        const body = {\n            subject: subject,\n            created_by: created_by,\n            file_url: file_url,\n            module_id: module_id,\n            letter_in_id: letter_in_id,\n            letter_number: letter_number\n        }\n        if (role.includes('Customer')) {\n            body['handled_by_user_id'] = ''\n            body['sender'] = client_id\n            body['letter_date'] = dateformat(new Date(), 'yyyy-mm-dd')\n            body['accepted_time'] = dateformat(new Date(), 'HH:MM:ss')\n            body['tags'] = []\n           \n            body['status_id'] = status_id\n        } else {\n            body['recipients'] =  recipientInput\n            body['handled_by_user_id'] = ''\n            body['letter_date'] = dateformat(new Date(), 'yyyy-mm-dd')\n            body['sent_time'] = dateformat(new Date(), 'HH:MM:ss')\n            body['tags'] = tagsInput\n            body['status_id'] = status_id\n           \n        }\n        \n        if (_id === '' || _id === null || _id === undefined) {\n            body['message'] = editor.innerHTML\n            try {\n                await axios.post(`/api/sism-letter_out`, body)\n                    .then(response => {\n                        console.log(response)\n                        if (response.data.status === 200) {\n                            if (file_url.length > 0) {\n                                const _formData = new FormData()\n                                formdata.map((item, i) => {\n                                    _formData.append('file', item)\n                                })\n                                console.log(_formData)\n                                try {\n                                    axios.post('/upload-file-sism',\n                                        _formData)\n                                        .then((response) => {\n                                            if (response.data.success) {\n                                                console.log('succes upload')\n                                            } else {\n\n                                            }\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n\n                            notify('SUCCESS', 'Letter Submitted')\n                            insertLog('Insert New Outgoing Letter', module_id)\n                            window.history.go(-1)\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }else {\n            body['message'] = editor.innerHTML\n            try {\n                await axios.put(`/api/sism-letter_out/${_id}`, body)\n                    .then(response => {\n                        console.log(response)\n                        if (response.data.status === 200) {\n                            if (file_url.length > 0) {\n                                const _formData = new FormData()\n                                formdata.map((item, i) => {\n                                    _formData.append('file', item)\n                                })\n                                console.log(_formData)\n                                try {\n                                    axios.post('/upload-file-sism',\n                                        _formData)\n                                        .then((response) => {\n                                            if (response.data.success) {\n                                                console.log('succes upload')\n                                            } else {\n\n                                            }\n                                        })\n                                } catch (error) {\n                                    console.log(error)\n                                }\n                            }\n\n                            notify('SUCCESS', 'Letter Submitted')\n                            insertLog('Insert New Outgoing Letter', module_id)\n                           window.history.go(-1)\n\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n    }\n\n    return (\n        <div>\n            <ToastContainer />\n            <Grid className=\"grid-example\">\n                <Toolbar\n                    title={role.includes('Customer') ? <b>New Letter</b> : <b>New  Outgoing Letter</b>}\n                    nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a>}\n                />\n            </Grid>\n           \n            <Grid className=\"grid-example\">\n                <Cell size={12}>\n                    <Card style={{ padding: '2.5vw', borderRadius: 8.0 }}>\n\n                        {letter_in_id !=='' ? (\n                            <Paper style={{ padding: '2.5vw', borderRadius: 8.0 }} >\n                                <b>IN REPLY TO : <Link to = {`/sism/letter-in/detail?id=${letter_in_id}`} >{letter_in_number } &nbsp; - &nbsp; {letter_in_subject}</Link> </b>\n                            </Paper>\n                        ):''}\n                       \n                        <TextField\n                            icon={<i className='fa fa-list-ol' />}\n                            placeholder=\"Letter No\"\n                            label=\"Letter No\"\n                            onChange={changeLetterNumber}\n                            value={letter_number}\n                            inputClassName=\"txt_subject\"\n                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                        />\n                        <TextField\n                            icon={<i className='fa fa-align-left' />}\n                            placeholder=\"Subject\"\n                            label=\"Subject\"\n                            onChange={changeSubjcet}\n                            value={subject}\n                            inputClassName=\"txt_subject\"\n                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                        />\n                        {\n                            (() => {\n                                if (!role.includes('Customer')) {\n                                    return (\n                                        <Fragment>\n\n                                            {recipientInput.map((item, i) => (\n                                                <Fragment>\n                                                    <Chip className=\"state-chip\" label={item.label} removable onClick={() => deleteRecipient(item.label)} />&nbsp;\n                                                </Fragment>\n                                            ))}\n                                            <Autocomplete\n                                                id=\"select-field-recipients\"\n                                                label=\"Recipients\"\n                                                autoComplete=\"on\"\n                                                dataLabel=\"label\"\n                                                placeholder='Type, then press ENTER'\n                                                clearOnAutocomplete\n                                                dataValue=\"value\"\n                                                data={clients}\n                                                filter={Autocomplete.fuzzyFilter}\n                                                value={recipientInputKey}\n                                                onChange={handleChangeRecipient}\n                                                onKeyDown={handleKeyDownRecipient}\n                                                onAutocomplete={handleAutocompleteRecipient}\n                                                className=\"md-cell md-cell--4-tablet md-cell--12\"\n                                                style={{marginBottom:20}}\n                                            />\n\n                                           \n\n                                            <div className=\"summernote\" style={{ marginTop: 20 }} >\n                                                {/* This is for text editor Summernote */}\n                                                {message}\n                                            </div>\n                                            <br />\n                                            {file_url.map((item, i) => (\n                                                <div>\n                                                    <Chip className=\"state-chip\" label={item} removable onClick={() => deleteFile(item)} /><br />\n                                                </div>\n                                            ))}\n                                            <br />\n                                            <FileUpload\n                                                id=\"multiple-file-upload\"\n                                                multiple\n                                                onLoad={handleLoadFile}\n                                                style={{ backgroundColor: '#359ce6' }}\n                                                name=\"multipart-file-upload\"\n                                                label=\"Select files\"\n                                            />\n                                            <br />\n                                            <br />\n                                            {tagsInput.map((item, i) => (\n                                                <Fragment>\n                                                    <Chip className=\"state-chip\" label={item.label} removable onClick={() => deleteTag(item.label)} />&nbsp;\n                                                </Fragment>\n                                            ))}\n                                            <Autocomplete\n                                                id=\"select-field-tags\"\n                                                label=\"Tags\"\n                                                autoComplete=\"on\"\n                                                dataLabel=\"label\"\n                                                clearOnAutocomplete\n                                                dataValue=\"value\"\n                                                data={tags}\n                                                filter={Autocomplete.fuzzyFilter}\n                                                value={tagInputKey}\n                                                onChange={handleChange}\n                                                onKeyDown={handleKeyDown}\n                                                onAutocomplete={handleAutocomplete}\n                                                //onAutocomplete={this.onChangeTagsInput}\n                                                className=\"md-cell md-cell--4-tablet md-cell--12\"\n\n                                            />\n                                            <br />\n\n                                        </Fragment>\n                                    )\n                                } else {\n                                    return (\n                                        <Fragment>\n                                            <div className=\"summernote\">\n                                                {message}\n                                              \n                                            </div>\n                                            <br />\n                                            {file_url.map((item, i) => (\n                                                <div>\n                                                    <Chip className=\"state-chip\" label={item} removable onClick={() => deleteFile(item)} /><br />\n                                                </div>\n                                            ))}\n                                            <br />\n                                            <FileUpload\n                                                id=\"multiple-file-upload\"\n                                                multiple\n                                                onLoad={handleLoadFile}\n                                                style={{ backgroundColor: '#359ce6' }}\n                                                name=\"multipart-file-upload\"\n                                                label=\"Select files\"\n                                            />\n                                            <br />\n                                            <br />\n                                        </Fragment>\n                                    )\n                                }\n                            })()\n                        }\n\n                        <Button primary raised onClick={handleSubmit} >Submit</Button>\n                        <Button raised onClick={() => window.history.go(-1)}  >Cancel</Button>\n\n                    </Card>\n\n                </Cell>\n\n            </Grid>\n        </div>\n    )\n}\n\n\n","import Form from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-out/form',\n        exact: true,\n        component: Form,\n    },\n    name: 'Form',\n}","import FormEdit from './Form.jsx'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-out/form/:id',\n        exact: true,\n        component: FormEdit,\n    },\n    name: 'FormEdit',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, TextField, Card, CardText, DialogContainer, SelectField, Snackbar, Cell } from 'react-md'\nimport axios from 'axios'\nimport qs from 'query-string'\nimport 'bulma-extensions/bulma-steps/dist/css/bulma-steps.min.css'\nimport { Session } from 'bc-react-session'\nimport dateformat from 'dateformat'\nconst { payload } = Session.get()\n\nexport default class Tracking extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            _id: '',\n            data: [],\n            replies: [],\n            dispositions: [],\n            dialogVisible: false,\n            key: '',\n            clicked: false,\n            created_by: payload.userId\n        }\n    }\n    async componentDidMount() {\n        this.setState({ clicked: [] })\n        const parsed = qs.parse(window.location.search)\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            this.setState({ key: parsed.key })\n        }\n\n\n        if (parsed.key === '') {\n            this.state.data = []\n\n        } else {\n            try {\n                await axios.get(`/api/sism-letters_in?key=${parsed.key}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            var clicked = []\n                            response.data.data.map((item, i) => {\n                                item.clicked = false\n                                item.replies = []\n                                item.dispositions = []\n                                try {\n                                    axios.get(`/api/letter_out_replies/${item._id}`)\n                                        .then(response_replies => {\n                                            if (response_replies.data.status === 200 && response_replies.data.data.length > 0) {\n                                                item.replies = response_replies.data.data\n                                            }\n                                        })\n                                } catch (e) {\n                                    console.log(e)\n                                }\n\n                                try {\n                                    axios.get(`/api/sism-letter-in-disposition-by-letter-in/${item._id}`)\n                                        .then(response_disposition => {\n\n                                            if (response_disposition.data.status === 200 && response_disposition.data.data.length > 0) {\n                                                item.dispositions = (response_disposition.data.data)\n                                            }\n                                        })\n                                } catch (e) {\n                                    console.log(e)\n                                }\n                            })\n\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n        //  console.log(this.state.data)\n\n        // this.setState({ clicked: !this.state.clicked })\n\n\n\n    }\n\n    // componentDidUpdate = (prevProps, prevState) => {\n    //     if (prevState.key !== this.state.clicked) {\n    //         console.log('data state changed')\n    //         console.log(prevState.key)\n    //         console.log(this.state.key)\n    //         this.componentDidMount()\n    //     }\n    // }\n\n    loadLetterOutReplies = (_id) => {\n        try {\n            axios.get(`/api/letter_out_replies/${_id}`)\n                .then(response => {\n                    if (response.data.status === 200 && response.data.data.length > 0) {\n                        this.setState({\n                            replies: response.data.data\n                        })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    onChangeKey = (evt) => {\n        this.setState({ key: evt })\n    }\n\n    searchLetterIn = async (evt) => {\n        if (evt.keyCode === 13) {\n\n            window.location.href = `/sism/tracking?key=${this.state.key}`\n\n\n        }\n\n    }\n\n    showDetail = (i) => {\n\n        var clicked = this.state.data[i].clicked\n        this.state.data[i].clicked = !clicked\n        this.setState({clicked:!this.state.clicked})\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Tracking\n                    </h2>\n                    <Cell size={12}>\n\n                        <TextField\n                            placeholder=\"Enter Keyword ... (Letter No, Subject, BPR .. )\"\n                            fullWidth\n                            className=\"md-cell md-cell--4-tablet md-cell--12\"\n                            onChange={this.onChangeKey}\n                            onKeyUp={this.searchLetterIn}\n                        />\n\n                    </Cell>\n                    <Cell size={12}>\n\n                        {this.state.data.length > 0 ? (\n\n                            <Card style={{ padding: '2.5%', borderRadius: '10px' }}>\n                                <h3>Results</h3>\n\n                                <table className=\"table is-striped is-small is-bordered\">\n                                    <thead>\n                                        <tr>\n                                            <th width={'20%'}>Letter No</th>\n                                            <th width={'45%'}>Subject</th>\n                                            <th width={'35%'}>Current Progress</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.data.map((item, i) => (\n                                            <tr>\n                                                <td>\n                                                    <Link to={`/sism/letter-in/detail?id=${item._id}`} ><b>{item.letter_number}</b></Link>\n                                                    <p>{item.client_name === null ? item.sender : item.client_name}</p>\n                                                </td>\n                                                <td><Link to={`/sism/letter-in/detail?id=${item._id}`} ><b>{item.subject}</b></Link></td>\n                                                <td>\n\n                                                    <ul>\n                                                        <li style={{\n                                                            color: 'green'\n                                                        }}>Created at &nbsp; {dateformat(item.created_at, 'dd mmm yyyy, HH:MM')}</li>\n                                                        {item.clicked === true ?\n                                                            (\n                                                                <Fragment>\n                                                                    {item.dispositions !== undefined && item.dispositions.length > 0 ? item.dispositions.map((disposition) => (\n                                                                        <li style={{\n                                                                            color: 'blue'\n                                                                        }}>Dispoisition from <b>{disposition.full_name}</b> to <b>{disposition.full_name_to}</b> : <div dangerouslySetInnerHTML={{ __html: disposition.disposition }} /> </li>\n                                                                    )) : ''}\n                                                                    {item.replies !== undefined && item.replies.length > 0 ? item.replies.map((reply) => (\n                                                                        <li style={{\n                                                                            color: 'orange'\n                                                                        }}><b>{reply.full_name}</b> replied at {dateformat(reply.created_at, 'dd/mmm/yyyy, HH:MM')} : <Link to={`/sism/letter-out/detail?id=${reply._id}`} ><b>{reply.subject}</b></Link></li>\n                                                                    )) : ''}\n                                                                </Fragment>\n                                                            ) : ''}\n                                                    </ul>\n                                                    <button onClick={() => this.showDetail(i)} style={{ marginLeft: '10px' }} >{item.clicked ? 'Close' : 'Detail'}</button>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            </Card>\n\n                        ) : (\n                                <Card style={{ padding: '2.5%', borderRadius: '10px' }}>\n                                    <h3>Results</h3>\n                                    <div className=\"notification\">\n                                        <p>No Result ... </p>\n                                    </div>\n                                </Card>\n                            )\n                        }\n                    </Cell>\n\n                </Grid>\n\n            </div>\n\n        )\n    }\n}","import Tracking from './Tracking'\n\nexport default {\n    routeProps: {\n        path: '/sism/tracking',\n        exact: true,\n        component: Tracking,\n    },\n    name: 'Tracking',\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, TextField, Card, Cell } from 'react-md'\nimport axios from 'axios'\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Archives extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            key: '',\n            _id: '',\n            data: [],\n\n            dialogVisible: false,\n\n            created_by: payload.userId\n        }\n    }\n    async componentDidMount() {\n\n        try {\n            await axios.get(`/api/clients-total-letter`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n    searchClient = async (evt) => {\n        this.setState({ key: evt })\n        try {\n            await axios.get(`/api/clients-total-letter?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }\n\n\n\n    render() {\n\n        return (\n            <div>\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Archives\n                                </h2>\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <Cell size={12}>\n\n                        <div className=\"columns\" style={{\n                            justifyContent: 'space-between',\n                            alignItems: 'center'\n\n                        }}>\n                            <Cell size={6}>\n\n                            </Cell>\n                            <Cell size={6}>\n                                <TextField\n                                    icon={<i className=\"fa fa-search\" />}\n                                    placeholder=\"Search ...\"\n                                    fullWidth\n                                    value={this.state.key}\n                                    onChange={this.searchClient}\n                                />\n\n                            </Cell>\n                        </div>\n                    </Cell>\n\n\n\n                    <Cell size={12}>\n                        <Card style={{ padding: '2.5%', borderRadius: '10px' }}>\n                            <h5>All BPR/Clients</h5>\n                            {this.state.data.length > 0 ? (\n                                <table className=\"table is-striped\">\n                                    <thead>\n                                        <tr style={{ fontSize: '8pt' }}>\n                                            <td>BPR /Client</td>\n                                            <td>Total Incoming Letters</td>\n                                            <td>Total Sent Letters</td>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {this.state.data.map((item, i) => (\n                                            <tr>\n                                                <td>{item.client_name.includes('Lainnya ') ? (\n                                                    <Link to={`/sism/archives/detail?client_id=others`} ><b><i className=\"fa fa-folder-o\"></i> &nbsp; {item.client_code + ' - ' + item.client_name}</b></Link>\n                                                ) : (\n                                                        <Link to={`/sism/archives/detail?client_id=${item._id}`} ><b><i className=\"fa fa-folder-o\"></i> &nbsp; {item.client_code + ' - ' + item.client_name}</b></Link>\n                                                    )}</td>\n                                                <td>{item.total_letter_in}</td>\n                                                <td>{item.client_name.includes('Lainnya ') ? item.total_letter_out_lainnya : item.total_letter_out}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            ) : (\n                                    <div className=\"notification\">\n                                        <p>No data showed ... </p>\n                                    </div>\n                                )\n                            }\n                        </Card>\n                    </Cell>\n\n                </Grid>\n\n            </div>\n\n        )\n    }\n}","import Archives from './Archives'\n\nexport default {\n    routeProps: {\n        path: '/sism/archives',\n        exact: true,\n        component: Archives,\n    },\n    name: 'Archives',\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, TextField, Button, DatePicker, SelectField, Snackbar, Cell, MenuButton, ListItem, Card } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class LetterIn extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            _id: '',\n            data: [],\n            showFilter: false,\n            unapproved_letter_in: 0,\n            created_by: payload.userId,\n            clients: [],\n            key: '',\n            date_from: '',\n            date_to: '',\n            status_id: '',\n            client_id: '',\n\n        }\n    }\n    async componentDidMount() {\n\n        try {\n            await axios.get(`/api/sism-letters_in`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/sism-letters_in-not-approved`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ unapproved_letter_in: response.data.data.length })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n\n                            var obj = {\n                                label: item.client_code + ' - ' + item.client_name,\n                                value: item._id\n                            }\n                            dt[i] = obj\n\n\n                            return false\n                        })\n\n                        this.setState({ clients: dt })\n\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/sism-status`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n\n                            var obj = {\n                                label: (<span className={'tag ' + item.label_color}>{item.status}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n\n\n                            return false\n                        })\n\n                        this.setState({ status: dt })\n\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n\n\n\n    changeKey = async (evt) => {\n        this.setState({ key: evt })\n\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}&status_id=${this.state.status_id}`\n\n\n        if (evt !== '') {\n            try {\n                await axios.get(`/api/sism-letters_in?key=${evt}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            try {\n                await axios.get(`/api/sism-letters_in`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n    }\n\n    changeClientId = (val) => {\n        this.setState({ client_id: val })\n    }\n    changeStatusId = (val) => {\n        this.setState({ status_id: val })\n    }\n    changeDateFrom = (val) => {\n        this.setState({ date_from: val })\n    }\n    changeDateTo = (val) => {\n        this.setState({ date_to: val })\n    }\n\n    filter = async () => {\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}&status_id=${this.state.status_id}`\n        try {\n            await axios.get(`/api/sism-letters_in?key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    resetFilter = () => {\n        this.setState({\n            date_to: '',\n            date_from: '',\n            client_id: '',\n            status_id: '',\n            date_to: '',\n        })\n    }\n\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' },\n        { label: 'Date', width: '10%' },\n        { label: 'Letter No', width: '15%' },\n        { label: 'From', width: '15%' },\n        { label: 'Subject', width: '15%' },\n\n        { label: 'To Division' },\n        { label: 'Handled By' },\n       \n        ]\n\n        return (\n            <div>\n                <Grid>\n                    <Cell size={8}>\n\n\n                        <button onClick={() => this.setState({ showFilter: !this.state.showFilter })} className=\"button  is-small is-info\">\n                            <i className=\"fa fa-filter\"></i>&nbsp;Filter\n                        </button>\n                        &nbsp;\n                        <ReactToPrint\n                            trigger={() => <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                            </button>}\n                            content={() => this.componentRef}\n                        />\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.data}\n                            />\n\n                        </div>\n                    </Cell>\n                    <Cell size={4}>\n                        <TextField\n                            className=\"md-cell md-cell--12\"\n                            placeholder=\"Search ... \"\n                            onChange={this.changeKey}\n                        />\n                    </Cell>\n                </Grid>\n                {this.state.showFilter ? (\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{padding:'10px', borderRadius:'10px'}}>\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"From Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.changeDateFrom}\n                                    value={this.state.date_from}\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-landscape\"\n                                    label=\"To Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.changeDateTo}\n                                    value={this.state.date_to}\n                                />\n                                <SelectField\n\n                                    leftIcon={\"view_list\"}\n                                    label=\"Select BPR/Client \"\n                                    className=\"md-cell md-cell--12-tablet md-cell--8\"\n                                    menuItems={this.state.clients}\n                                    onChange={this.changeClientId}\n                                    value={this.state.client_id}\n                                />\n                                \n                                <br />\n                                <button className=\"button is-primary is-small\" onClick={this.filter}><i className=\"fa fa-filter\" />&nbsp;Apply</button>\n                                &nbsp;\n                                <button className=\"button  is-small\" onClick={this.resetFilter}>< i className=\"fa fa-refresh\" />&nbsp;Reset</button>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                ) : ''}\n\n                <Grid className=\"grid-example\" style={{ overflowX: 'scroll' }}>\n                    <Cell size={12}>\n                        {\n                            this.state.data.length > 0 ? (\n\n                                <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                                    <thead>\n                                        {columns.map((item, i) => (\n                                            <th width={item.width} key={i}>{item.label}</th>\n                                        ))}\n                                    </thead>\n                                    <tbody>\n                                        {this.state.data.map((item, i) => (\n                                            <tr key={i}>\n                                                <td>{i + 1}</td>\n                                                <td>{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                <td>{item.is_reply_required ? <i className=\"fa fa-warning\" style={{ color: 'orange' }} ></i> : ''}&nbsp;<Link to={`/sism/letter-in/detail?id=${item._id}`} /*onClick={() => this.showDetail(item._id)}*/ ><b>{item.letter_number}</b></Link> </td>\n                                                <td><Link to={`/sism/letter-in/detail?id=${item._id}`} /*onClick={() => this.showDetail(item._id)}*/ ><b>{item.subject}</b></Link></td>\n                                                <td>{item.client_name !== '' ? item.client_name : item.sender}</td>\n                                                \n                                                <td>{item.to_division}</td>\n                                                <td>{item.full_name}</td>\n                                               \n\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            ) : (\n                                    <div className=\"notification is-fullwidth\">\n                                        <p>No data showed ...</p>\n                                    </div>\n                                )\n                        }\n                    </Cell>\n                </Grid>\n\n            </div>\n\n        )\n    }\n}\n\nclass Printable extends Component {\n    render() {\n        const columns = [{ label: 'No', width: '2%' },\n        { label: 'Date', width: '10%' },\n        { label: 'Letter No', width: '15%' },\n        { label: 'From', width: '15%' },\n        { label: 'Subject', width: '15%' },\n\n        { label: 'To Division' },\n        { label: 'Handled By' },\n        { label: 'Status', width: '10%' },\n        ]\n        return (\n            <div>\n                <h4>Incoming Letters</h4>\n                <Grid className=\"grid-example\" style={{ overflowX: 'scroll' }}>\n                    <Cell size={12}>\n                        {\n                            this.props.data.length > 0 ? (\n\n                                <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                                    <thead>\n                                        {columns.map((item, i) => (\n                                            <th width={item.width} key={i}>{item.label}</th>\n                                        ))}\n                                    </thead>\n                                    <tbody>\n                                        {this.props.data.map((item, i) => (\n                                            <tr key={i}>\n                                                <td>{i + 1}</td>\n                                                <td>{dateformat(item.date_in, 'dd mmm yyyy')}</td>\n                                                <td>{item.is_reply_required ? <i className=\"fa fa-warning\" style={{ color: 'orange' }} ></i> : ''}&nbsp;<Link to={`/sism/letter-in/detail?id=${item._id}`} /*onClick={() => this.showDetail(item._id)}*/ ><b>{item.letter_number_original}</b></Link> </td>\n                                                <td>{item.sender_name !== '' ? item.sender_name : item.client_name}</td>\n                                                <td>{item.subject}</td>\n\n                                                <td>{item.to_division}</td>\n                                                <td>{item.handled_by}</td>\n                                                <td><span className={\"tag \" + item.label_color}>{item.status}</span></td>\n\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            ) : (\n                                    <div className=\"notification is-fullwidth\">\n                                        <p>No data showed ...</p>\n                                    </div>\n                                )\n                        }\n                    </Cell>\n                </Grid>\n\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, TextField, Button, DatePicker, SelectField, Card,  Cell } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport ReactToPrint from 'react-to-print'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class LetterOut extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            client_id: '',\n            _id: '',\n            data: [],\n            showFilter: false,\n            created_by: payload.userId,\n            clients: [],\n            key: '',\n            date_from: '',\n            date_to: '',\n            status_id: '',\n            client_id: '',\n\n        }\n    }\n    async componentDidMount() {\n\n\n\n        try {\n            await axios.get(`/api/sism-letters_out`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/clients`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n\n                            var obj = {\n                                label: item.client_code + ' - ' + item.client_name,\n                                value: item._id\n                            }\n                            dt[i] = obj\n\n\n                            return false\n                        })\n\n                        this.setState({ clients: dt })\n\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n        try {\n            await axios.get(`/api/sism-status`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n\n                            var obj = {\n                                label: (<span className={'tag ' + item.label_color}>{item.status}</span>),\n                                value: item._id\n                            }\n                            dt[i] = obj\n\n\n                            return false\n                        })\n\n                        this.setState({ status: dt })\n\n                    }\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n\n    changeKey = async (evt) => {\n        this.setState({ key: evt })\n\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}&status_id=${this.state.status_id}`\n\n\n        if (evt !== '') {\n            try {\n                await axios.get(`/api/sism-letters_out?key=${evt}${filterString}`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        } else {\n            try {\n                await axios.get(`/api/sism-letters_out`)\n                    .then(response => {\n                        if (response.data.status === 200) {\n                            this.setState({ data: response.data.data })\n                        }\n                    })\n            } catch (e) {\n                console.log(e)\n            }\n        }\n\n    }\n\n    changeClientId = (val) => {\n        this.setState({ client_id: val })\n    }\n    changeStatusId = (val) => {\n        this.setState({ status_id: val })\n    }\n    changeDateFrom = (val) => {\n        this.setState({ date_from: val })\n    }\n    changeDateTo = (val) => {\n        this.setState({ date_to: val })\n    }\n\n    filter = async () => {\n        var filterString = ''\n        filterString = `&date_from=${this.state.date_from}&date_to=${this.state.date_to}&client_id=${this.state.client_id}&status_id=${this.state.status_id}`\n        try {\n            await axios.get(`/api/sism-letters_out?key=${this.state.key}${filterString}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    resetFilter = () => {\n        this.setState({\n            date_to: '',\n            date_from: '',\n            client_id: '',\n            status_id: '',\n            date_to: '',\n        })\n    }\n\n\n\n\n    render() {\n        const columns = [{ label: 'No', width: '2%' },\n        { label: 'Date', width: '8%' },\n        { label: 'Letter No', width: '8%' }, \n        { label: 'Subject', width: '13%' }, \n        { label: 'BPR/Client Name', width: '10%' }, { label: 'Issued By', width: '35%' }, { label: 'Handled By' },\n        { label: 'Status', width: '10%' },\n        { label: '', width: '2%' }]\n\n        return (\n            <div>\n                <Grid>\n                    <Cell size={8}>\n                        <button onClick={() => this.setState({ showFilter: !this.state.showFilter })} className=\"button  is-small is-info\">\n                            <i className=\"fa fa-filter\"></i>&nbsp;Filter\n                        </button>\n                        &nbsp;\n                        <ReactToPrint\n                            trigger={() => <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                                    &nbsp;<b>Print</b>\n                            </button>}\n                            content={() => this.componentRef}\n                        />\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.data}\n                            />\n\n                        </div>\n                    </Cell>\n                    <Cell size={4}>\n                        <TextField\n                            className=\"md-cell md-cell--12\"\n                            placeholder=\"Search ... \"\n                            onChange={this.changeKey}\n                        />\n                    </Cell>\n                </Grid>\n                {this.state.showFilter ? (\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{padding:'10px', borderRadius:'10px'}}>\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-portrait\"\n                                    label=\"From Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.changeDateFrom}\n                                    value={this.state.date_from}\n                                />\n                                <DatePicker\n                                    fullWidth\n                                    id=\"appointment-date-landscape\"\n                                    label=\"To Date\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--6\"\n                                    displayMode=\"landscape\"\n                                    onChange={this.changeDateTo}\n                                    value={this.state.date_to}\n                                />\n                                <SelectField\n\n                                    leftIcon={\"view_list\"}\n                                    label=\"Select BPR/Client \"\n                                    className=\"md-cell md-cell--12-tablet md-cell--8\"\n                                    menuItems={this.state.clients}\n                                    onChange={this.changeClientId}\n                                    value={this.state.client_id}\n                                />\n                                <SelectField\n                                    leftIcon={\"view_list\"}\n                                    label=\"Select Status\"\n                                    className=\"md-cell md-cell--12-tablet md-cell--4\"\n                                    menuItems={this.state.status}\n                                    onChange={this.changeStatusId}\n                                    value={this.state.status_id}\n                                />\n                                <br />\n                                <button className=\"button is-primary is-small\" onClick={this.filter}><i className=\"fa fa-filter\" />&nbsp;Apply</button>\n                                &nbsp;\n                                <button className=\"button  is-small\" onClick={this.resetFilter}>< i className=\"fa fa-refresh\" />&nbsp;Reset</button>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                ) : ''}\n\n                <Grid className=\"grid-example\" style={{ overflowX: 'scroll' }}>\n                    <Cell size={12}>\n                        {\n                            this.state.data.length > 0 ? (\n\n                                <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                                    <thead>\n                                        {columns.map((item, i) => (\n                                            <th width={item.width} key={i}>{item.label}</th>\n                                        ))}\n                                    </thead>\n                                    <tbody>\n                                        {this.state.data.map((item, i) => (\n                                            <tr key={i}>\n                                                <td>{i + 1}</td>\n                                                <td>{dateformat(item.letter_date, 'dd mmm yyyy')}</td>\n                                                <td><Link to={`/sism/letter-in/detail?id=${item._id}`} /*onClick={() => this.showDetail(item._id)}*/ ><b>{item.letter_number}</b></Link> </td>\n                                                <td><Link to={`/sism/letter-in/detail?id=${item._id}`} /*onClick={() => this.showDetail(item._id)}*/ ><b>{item.subject}</b></Link></td>\n                                                <td>{item.client_name !== '' ? item.client_name : item.recipient}</td>\n                                                <td>{item.to_division}</td>\n                                                <td>{item.full_name}</td>\n                                            </tr>\n                                        ))}\n                                    </tbody>\n                                </table>\n                            ) : (\n                                    <div className=\"notification is-fullwidth\">\n                                        <p>No data showed ...</p>\n                                    </div>\n                                )\n                        }\n                    </Cell>\n                </Grid>\n\n            </div>\n\n        )\n    }\n}\n\nclass Printable extends Component {\n    render() {\n        const columns = [{ label: 'No', width: '2%' },\n        { label: 'Date', width: '8%' }, {\n            label: 'Letter No', width: '8%'\n        }, { label: 'BPR/Client Name', width: '10%' }, { label: 'Issued By', width: '35%' }, { label: 'Handled By' },\n        { label: 'Status', width: '10%' },\n        { label: '', width: '2%' }]\n\n\n        return (\n            <div>\n                <h4>Sent Letters</h4>\n                <Grid className=\"grid-example\">\n                    {this.props.data.length > 0 ? (\n                        <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '10pt' }}>\n                            <thead>\n                                {columns.map((item, i) => (\n                                    <th width={item.width} key={i}>{item.label}</th>\n                                ))}\n                            </thead>\n                            <tbody>\n                                {this.props.data.map((item, i) => (\n                                    <tr key={i}>\n                                        <td>{i + 1}</td>\n                                        <td>{dateformat(item.date_letter, 'dd/mmm/yyyy')}</td>\n                                        <td><Link to={`/sism/letter-out/detail?id=${item._id}`} ><b>{item.letter_number}</b></Link></td>\n                                        <td>{item.client_name_non_bpr !== null ? item.client_name_non_bpr : item.client_name}</td>\n                                        <td>{item.structure}</td>\n                                        <td>{item.full_name}</td>\n                                        <td><span className={\"tag \" + item.label_color}>{item.status}</span></td>\n\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : (\n                            <div className=\"notification\">\n                                <p>Data is empty ...</p>\n                            </div>\n                        )}\n                </Grid>\n\n            </div>\n        )\n    }\n}\n","import React,{Component} from 'react'\nimport {Grid,Cell, TextField, Button, DatePicker, SelectField} from 'react-md'\nimport axios from 'axios'\n\nexport default class Filter extends Component {\n\n    state ={\n        letter_in_id : '',\n        clients:[],\n        status:[],\n    }\n\n    async componentDidMount() {\n        try{\n            axios.get(`/api/clients`)\n            .then(response => {\n                if (response.data.status ===200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:item.client_code+' - '+item.client_name,\n                            value: item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n\n                    this.setState({clients:dt})\n                }\n              \n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            axios.get(`/api/sism-status`)\n            .then(response => {\n                if (response.data.status ===200) {\n                    var dt = []\n                    response.data.data.map((item,i) => {\n                        var obj = {\n                            label:(<span className={'tag '+item.label_color}>{ item.status}</span>),\n                            value: item._id\n                        }\n                        dt[i] = obj\n                        return false\n                    })\n\n                    this.setState({status:dt})\n                }\n              \n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <Grid className=\"grid-example\">\n                    <DatePicker\n                        fullWidth\n                        id=\"appointment-date-portrait\"\n                        label=\"From Date\"\n                        className=\"md-cell md-cell--12-tablet md-cell--6\"\n                        displayMode=\"landscape\"\n                    />\n                    <DatePicker\n                        fullWidth\n                        id=\"appointment-date-landscape\"\n                        label=\"To Date\"\n                        className=\"md-cell md-cell--12-tablet md-cell--6\"\n                        displayMode=\"landscape\"\n                    />\n                    <SelectField \n                    \n                        leftIcon={\"view_list\"}\n                        label=\"Select BPR/Client \"\n                        className=\"md-cell md-cell--12-tablet md-cell--8\"\n                        menuItems={this.state.clients}\n                    />\n                    <SelectField \n                        leftIcon={\"view_list\"}\n                        label=\"Select Status\"\n                        className=\"md-cell md-cell--12-tablet md-cell--4\"\n                        menuItems={this.state.status}\n                    />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    <button className=\"button is-primary is-small\"><i className=\"fa fa-filter\"/>&nbsp;Apply</button>\n                    &nbsp;\n                    <button className=\"button  is-small\">< i className=\"fa fa-refresh\" />&nbsp;Reset</button>\n                </Grid>\n            </div>\n            \n        )\n    }\n}\n\n","import React, { Component } from 'react'\nimport { Grid, TextField, Button, DatePicker, SelectField, Cell, FontIcon } from 'react-md'\nimport axios from 'axios'\nimport LetterIn from './LetterIn'\nimport Filter from './Filter'\nimport LetterOut from './LetterOut'\n\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class Report extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            toasts: [],\n            _id: '',\n            data: [],\n            collapsed: true,\n            dialogVisible: false,\n            list_contain: 'letter-in',\n            created_by: payload.userId\n        }\n    }\n    async componentDidMount() {\n        this.setState({ list_contain: 'letter-in' })\n\n\n    }\n\n    addToast = (text, action = null) => {\n        this.setState((state) => {\n            const toasts = state.toasts.slice();\n            toasts.push({ text });\n            return { toasts };\n        });\n    };\n\n\n\n    setUpdate = (id) => {\n        alert(id)\n    }\n\n    setDelete = (id) => {\n        alert(id)\n    }\n\n    setTabList = (act) => {\n        if (act === 'create') {\n            this.setState({ contain: act })\n        } else {\n            this.setState({ list_contain: act })\n        }\n\n    }\n\n\n    render() {\n        const tabList = [\n            { color: '#348066', action: 'letter-in', icon: 'fa fa-envelope', tooltip: 'Incoming Letters' },\n            { color: 'darkblue', action: 'letter-out', icon: 'fa fa-envelope-o', tooltip: 'Sent Letters' },\n        ]\n\n        const columns = [{ label: 'No', width: '2%' }, { label: 'Module', width: '8%' }, { label: 'Link', width: '10%' }, { label: 'Description', width: '35%' }, { label: '', width: '2%' }]\n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({ dialogVisible: !this.state.dialogVisible })) });\n        ;\n        return (\n\n            <div>\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Report\n                    </h2>\n                </Grid>\n                <div className=\"tabs\" style={{ border: 'none' }}>\n                    <ul>\n                        {tabList.map((item, i) => {\n                            if (this.state.list_contain === item.action) {\n                                return (<li\n                                    style={{ borderBottom: 'solid 3px ' + item.color, backgroundColor: '#c7d6eb', padding: '10px 5px 0 0 ', borderTopRightRadius: '8px', borderTopLeftRadius: '8px' }} >\n                                    <a onClick={() => this.setTabList(item.action)} ><i className={item.icon} ></i>&nbsp;{item.tooltip} </a>\n\n                                </li>\n                                )\n                            } else {\n                                return (<li\n                                    style={{ borderBottom: 'solid 3px ' + item.color, padding: '10px 5px 0 0 ', }} >\n                                    <a onClick={() => this.setTabList(item.action)} ><i className={item.icon} ></i>&nbsp; {item.tooltip} </a>\n\n                                </li>\n                                )\n                            }\n\n                        })}\n                    </ul>\n                </div>\n                {(() => {\n                    switch (this.state.list_contain) {\n                        case 'letter-in': return <LetterIn />\n                        case 'letter-out': return <LetterOut />\n                        default: return <LetterIn />\n                    }\n                })()}\n            </div>\n\n        )\n    }\n}","import Report from './Report'\n\nexport default {\n    routeProps: {\n        path: '/sism/report',\n        exact: true,\n        component: Report,\n    },\n    name: 'Report',\n}","import React,{Component} from 'react'\nimport {MenuButton,ListItem} from 'react-md'\n\nexport default class KebabMenu extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n\n        }\n    }\n    \n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n    const menuItems = [ \n                <ListItem key={1}  primaryText='Edit' rightIcon ={(<i className='fa fa-pencil' />)} style={{backgroundColor:'lightblue'}} onClick={ () => \n                     this.setUpdate(this.props.id)} /> , \n                <ListItem key={2} primaryText='Delete' rightIcon ={(<i className='fa fa-trash' />)} style={{top:0,backgroundColor:'pink',marginTop:'0em'}}  onClick =  {() => \n                    this.setDelete(this.props.id) } /> \n            ]\n    return(\n        <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n        listInline centered\n        listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n      \n      \n        > more_vert</MenuButton>\n    )\n}\n}","import React,{Component} from 'react'\nimport {Grid,TextField, Button,DialogContainer,SelectField,Snackbar, Cell} from 'react-md'\nimport axios from 'axios' \nimport KebabMenu from '../../components/KebabMenu'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class Status extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            status:'',\n            label_color:'',\n            description:'',\n            module_short_name:'',\n            created_by : payload.userId\n        }\n    }\n    async componentDidMount() {\n        \n        try{\n            await axios.get(`/api/sism-status`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({\n            _id:'',\n            dialogVisible:true,\n            status : '',\n            label_color : '',\n            description:'',\n           \n        })\n    }\n\n   \n\n    onChangeStatus = (evt) => {\n        this.setState({status:evt})\n    }\n\n    onChangeLabelColor=  (evt) => {\n        this.setState({label_color:evt})\n    }\n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    setUpdate  = async (id) => {\n        try {\n            await axios.get(`/api/sism-status/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                  response.data.data.map((item,i) => {\n                    this.setState({\n                        _id:id,\n                        dialogVisible:true,\n                        status : item.status,\n                        label_color : item.label_color,\n                        description:item.description,\n                       \n                    })\n                    return false\n                  })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    setDelete = (id) => {\n       this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async() => {\n        try {\n            await axios.delete(`/api/sism-status/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:false,\n                        _id:'',\n                        status : '',\n                        label_color : '',\n                        description:'',\n                       \n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save  = async() => {\n        const body = {\n            status : this.state.status,\n            label_color : this.state.label_color,\n            description : this.state.description,\n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/sism-status`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            _id:'',\n                            status : '',\n                            label_color : '',\n                            description:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.created_by = this.state.created_by\n            try {\n                await axios.put(`/api/sism-status/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:!this.state.dialogVisible,\n                            _id:'',\n                            status : '',\n                            label_color : '',\n                            description:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n        const columns = [{label:'No',width:'2%'},{label:'Status',width:'8%'},{label:'Color',width:'10%'},{label:'Description',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n       ;\n        return(\n            <div>\n                <Button style={{\n                    position:'fixed',\n                    right:'10px',\n                    bottom:'20px',\n                    float:'bottom'\n                }} \n                onClick={this.showForm}\n                secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                 <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                    Status\n                    </h2>\n                    <Cell size={4}>\n                       \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.status}</td>\n                                    <td>{item.label_color}</td>\n                                    <td>{item.description}</td>\n                                   <td>\n                                       <KebabMenu id={item._id} setUpdate={() => this.setUpdate(item._id)}  setDelete={() => this.setDelete(item._id)} />\n                                   </td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogVisible}\n                onHide={() => !this.state.dialogVisible}\n                actions={actions}\n                title=\"Manage Status\"\n                >\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Status\"\n                    placeholder=\"Status\"\n                    value={this.state.status}\n                    onChange={this.onChangeStatus}\n                />\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Label Color\"\n                    placeholder=\"e.g. is-danger OR is-warning OR is-success etc\"\n                    value={this.state.label_color}\n                    onChange={this.onChangeLabelColor}\n                />\n                \n                 <TextField\n                    rows={2}\n                    id=\"simple-action-dialog-field\"\n                    label=\"Description\"\n                    placeholder=\"Description\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                />\n            </DialogContainer>\n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={[\n                   <Button raised primary onClick={this.delete} >YES</Button>,\n                   <Button flat  onClick={() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible})} >NO</Button>,\n                ]\n                }\n                title=\"Confirmation\"\n                >\n                    Are you sure delete this item?\n                </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}","import Status from './Status'\n\nexport default {\n    routeProps: {\n        path: '/sism/status',\n        exact: true,\n        component: Status,\n    },\n    name: 'Status',\n}","import React,{Component} from 'react'\nimport {Grid,TextField, Button,DialogContainer,SelectField,Snackbar, Cell} from 'react-md'\nimport axios from 'axios' \nimport KebabMenu from '../../components/KebabMenu'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class Status extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            method:'',\n            description:'',\n           \n            created_by : payload.userId\n        }\n    }\n    async componentDidMount() {\n        \n        try{\n            await axios.get(`/api/sism-sending_methods`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        });\n    };\n\n    showForm = () => {\n        this.setState({\n            _id:'',\n            dialogVisible:true,\n            status : '',\n            label_color : '',\n            description:'',\n           \n        })\n    }\n\n   \n\n    onChangeMethod = (evt) => {\n        this.setState({method:evt})\n    }\n\n    \n\n    onChangeDescription= (evt) => {\n        this.setState({description:evt})\n    }\n\n    setUpdate  = async (id) => {\n        try {\n            await axios.get(`/api/sism-sending_method/${id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                  response.data.data.map((item,i) => {\n                    this.setState({\n                        _id:id,\n                        dialogVisible:true,\n                        method : item.method,\n                        description:item.description,\n                       \n                    })\n                    return false\n                  })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    setDelete = (id) => {\n       this.setState({_id:id,dialogDeleteVisible:true})\n    }\n\n    delete = async() => {\n        try {\n            await axios.delete(`/api/sism-sending_method/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:false,\n                        _id:'',\n                        method : '',\n                        description:'',\n                       \n                    })\n\n                }else {\n                    this.addToast(response.data.message)\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save  = async() => {\n        const body = {\n            method : this.state.method,\n            description : this.state.description,\n        \n        }\n\n        if (this.state._id === '') {\n            body.created_by = this.state.created_by\n            try {\n                await axios.post(`/api/sism-sending_method`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:false,\n                      \n                            _id:'',\n                            method : '',\n                            description:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else {\n            body.created_by = this.state.created_by\n            try {\n                await axios.put(`/api/sism-sending_method/${this.state._id}`,body)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.addToast(response.data.message)\n                        this.componentDidMount()\n                        this.setState({\n                            dialogVisible:false,\n                            \n                            _id:'',\n                            method : '',\n                            description:'',\n                           \n                        })\n\n                    }else {\n                        this.addToast(response.data.message)\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n    render() \n    {\n        const columns = [{label:'No',width:'2%'},{label:'Method',width:'8%'},{label:'Description',width:'35%'},{label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ secondary: true, children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))});\n       ;\n        return(\n            <div>\n                 <Button style={{\n                    position:'fixed',\n                    right:'10px',\n                    bottom:'20px',\n                    float:'bottom'\n                }} \n                onClick={this.showForm}\n                secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                 <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Sending Methods\n                    </h2>\n                    <Cell size={4}>\n                       \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                        <TextField \n                            placeholder=\"Search ... \"\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\">\n\n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.method}</td>\n                                    <td>{item.description}</td>\n                                   <td>\n                                       <KebabMenu id={item._id} setUpdate={() => this.setUpdate(item._id)}  setDelete={() => this.setDelete(item._id)} />\n                                   </td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n\n                </Grid>\n                <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogVisible}\n                onHide={() => !this.state.dialogVisible}\n                actions={actions}\n                title=\"Manage Sending Method\"\n                >\n                <TextField\n                    id=\"simple-action-dialog-field\"\n                    label=\"Method\"\n                    placeholder=\"Method\"\n                    value={this.state.method}\n                    onChange={this.onChangeMethod}\n                />\n               \n                \n                 <TextField\n                    rows={2}\n                    id=\"simple-action-dialog-field\"\n                    label=\"Description\"\n                    placeholder=\"Description\"\n                    value={this.state.description}\n                    onChange={this.onChangeDescription}\n                />\n            </DialogContainer>\n            <DialogContainer\n                width={'600px'}\n                id=\"simple-action-dialog\"\n                visible={this.state.dialogDeleteVisible}\n                onHide={() => !this.state.dialogDeleteVisible}\n                actions={[\n                   <Button raised primary onClick={this.delete} >YES</Button>,\n                   <Button flat  onClick={() => this.setState({dialogDeleteVisible:!this.state.dialogDeleteVisible})} >NO</Button>,\n                ]\n                }\n                title=\"Confirmation\"\n                >\n                    Are you sure delete this item?\n                </DialogContainer>\n            <Snackbar\n                id=\"example-snackbar\"\n                toasts={this.state.toasts}\n                autohideTimeout={300}\n                />\n            </div>\n           \n        )\n    }\n}","import SendingMethods from './SendingMethods'\n\nexport default {\n    routeProps: {\n        path: '/sism/sending-methods',\n        exact: true,\n        component: SendingMethods,\n    },\n    name: 'SendingMethods',\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Cell, Card, FontIcon, Button, MenuButton, DropdownMenu } from 'react-md'\nimport { Session } from 'bc-react-session'\nimport axios from 'axios'\nconst { payload } = Session.get()\n\nexport default class Dashboard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            menus: [],\n            module_id: '',\n            role: '',\n            role_id: '',\n            user_id: payload.userId\n        }\n    }\n\n    async componentDidMount() {\n        console.log(this.props)\n\n        var moduleName = window.location.href.split('/')\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        this.setState({ module_id: item._id })\n                        return false\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        var role_id = ''\n\n        try {\n            await axios.get(`/api/user-role/${this.state.module_id}/${this.state.user_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: (response.data.data[0].role) })\n                        this.state.role_id = response.data.data[0].role_id\n                        role_id = response.data.data[0].role_id\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/menu-by-module-link-role-id/${moduleName[3]}/${this.state.role_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({ menus: response.data.data })\n                    }\n\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n    }\n\n\n    render() {\n\n        const colors = [\n            '#ebbe8a',\n            '#7bede2',\n            '#bff0a3',\n            '#edc2c2',\n            '#9ec8f7',\n            '#be86f7',\n            '#e693d8'\n        ]\n\n        const xKeys = Object.keys(MenuButton.HorizontalAnchors);\n        const yKeys = Object.keys(MenuButton.VerticalAnchors);\n\n        return (\n            <Grid className='grid-example' >\n                <Cell size={12}>\n                    {this.state.role.includes('Customer') ? (\n                        <Link to={`/sism/letter-in/form`}>\n                            <Button style={{\n                                position: 'fixed',\n                                right: '10px',\n                                bottom: '20px',\n                                float: 'bottom'\n                            }} secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                        </Link>\n                    ) : (\n                        <DropdownMenu\n                        adjusted={false}\n                        raised\n                        primary\n                        menuItems={[\n                            {\n                                leftIcon: <FontIcon>mail</FontIcon>,\n                                primaryText: <Link to={'/sism/letter-in/form'} style={{ textDecoration: 'none' }} >Incoming Letter</Link>\n                            },\n\n                            {\n                                leftIcon: <FontIcon>drafts</FontIcon>,\n                                primaryText: <Link to={'/sism/letter-out/form'} style={{ textDecoration: 'none' }} >Outgoing Letter</Link>\n                            }\n                        ]}\n                        simplifiedMenu={false}\n                        repositionOnScroll={false}\n                        anchor={{\n                            x: DropdownMenu.HorizontalAnchors.RIGHT,\n                            y: DropdownMenu.VerticalAnchors.TOP,\n                        }}\n                    >\n                        <Button style={{\n                            position: 'fixed',\n                            right: '10px',\n                            bottom: '20px',\n                            float: 'bottom'\n                        }} secondary floating iconClassName=\"fa fa-plus\" /*onClick={() => this.addTicket}*/></Button>\n                    </DropdownMenu>\n                    )}\n                    \n\n\n                    <Card style={{ padding: '2.5%', borderRadius: '10px' }} >\n                        <div className=\"columns  is-multiline\" style={{ justifyContent: 'center', }}>\n                            {this.state.menus.map((item, i) => {\n                                if (item.menu !== 'Home') return (\n\n                                    <Link to={item.link} key={i}>\n                                        <Card className='' style={{\n                                            width: 220, height: 120,\n                                            borderRadius: '8px',\n                                            border: '1px solid #999',\n                                            padding: '20px',\n                                            alignItems: 'center',\n                                            marginRight: '5px',\n                                            marginLeft: '5px',\n                                            marginTop: '5px',\n                                        }}>\n                                            <div className=\"columns\">\n                                                <div className=\"column is-6\">\n                                                    <h4 style={{ height: '1.4' }}>{item.menu}</h4> <br />\n                                                </div>\n                                                <div className=\"column is-6\">\n                                                    <FontIcon style={{ fontSize: 64, color: colors[i] }}>{item.icon}</FontIcon>\n                                                </div>\n                                            </div>\n                                        </Card>\n                                    </Link>\n\n                                )\n                            })}\n                        </div>\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import React, { Component, Fragment } from 'react'\nimport {Redirect} from 'react-router-dom'\nimport { Grid, Cell } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport Dashboard from './Dashboard'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\n\nexport default class SISM extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            _id: '',\n            role: '',\n            data: [],\n            contain: '',\n            announcements: [],\n        }\n\n\n\n    }\n\n    async componentDidMount() {\n\n        this.setState({ contain: 'form' })\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        this.setState({ role: response.data.data[0].role })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n        try {\n            await axios.get(`/api/announcements-by-module-id/${module_id}`)\n                .then(response => {\n\n                    if (response.data.status === 200) {\n                        var dt = []\n                        response.data.data.map((item, i) => {\n                            if (dateformat(item.star_date, 'yyyy-mm-dd') <= dateformat(new Date(), 'yyyy-mm-dd') && dateformat(item.end_date, 'yyyy-mm-dd') >= dateformat(new Date(), 'yyyy-mm-dd')) {\n                                var obj = item\n                                dt.push(obj)\n                            }\n\n                            return false\n                        })\n                        this.setState({ announcements: dt })\n                    }\n\n                })\n        } catch (error) {\n            console.log(error)\n        }\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                {(() => {\n                    if (payload.userId === null) {\n                        return (<Redirect to={'/'} />)\n                    } else {\n                        return (\n                            <Grid className=\"grid-example\">\n                                <h2 className=\"md-cell md-cell--12\">\n                                    Hi, {payload.username}  <p>{this.state.role}</p>\n                                </h2>\n                                <Cell size={12}>\n                                    {this.state.announcements.length > 0 ? (\n                                        <Fragment>\n                                            <h4>Announcements</h4>\n                                            {this.state.announcements.map((item, i) => (\n                                                <div className=\"notification is-warning\">\n                                                    <div dangerouslySetInnerHTML={{ __html: item.description }} />\n                                                </div>\n                                            ))}\n                                        </Fragment>\n                                    ) : ''}\n                                </Cell>\n                                <Cell size={12}>\n                                    <Dashboard />\n                                </Cell>\n                            </Grid>\n                        )\n                    }\n                })()}\n\n\n            </div>\n        )\n    }\n}","import SISM from './SISM'\n\nexport default {\n    routeProps: {\n        path: '/sism',\n        exact: true,\n        component: SISM,\n    },\n    name: 'SISM',\n}","import Preferences from '../../../components/Preferences'\n\nexport default {\n    routeProps: {\n        path: '/sism/setting/preferences',\n        exact: true,\n        component: Preferences,\n    },\n    name: 'Preferences',\n}","import Profile from '../../../components/Profile'\n\nexport default {\n    routeProps: {\n        path: '/sism/setting/profile',\n        exact: true,\n        component: Profile,\n    },\n    name: 'Profile',\n}","import ChangePassword from '../../../components/ChangePassword'\n\nexport default {\n    routeProps: {\n        path: '/sism/setting/changepwd',\n        exact: true,\n        component: ChangePassword,\n    },\n    name: 'ChangePassword',\n}","import React,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid,TextField, Button,DialogContainer,Toolbar,Snackbar, Cell,MenuButton,ListItem} from 'react-md'\nimport axios from 'axios' \nimport dateformat from 'dateformat'\nimport {Session} from 'bc-react-session'\n\nconst {payload} = Session.get()\n\nexport default class LetterIn extends Component {\n    constructor(props){\n        super(props)\n        this.state= {\n            toasts: [],\n            _id:'',\n            data:[],\n            modules:[],\n            dialogVisible:false,\n            dialogDeleteVisible:false,\n            module:'',\n            link:'',\n            description:'',\n            module_short_name:'',\n            unapproved_letter_in:0,\n            created_by : payload.userId\n        }\n    }\n    async componentDidMount() {\n        \n       \n\n        try{\n            await axios.get(`/api/sism-letters_in-not-approved`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n       \n    }\n\n    addToast = (text, action=null) => {\n        this.setState((state) => {\n          const toasts = state.toasts.slice();\n          toasts.push({ text });\n          return { toasts };\n        })\n    }\n\n   \n    delete = async () => {\n        \n        try{\n            await axios.delete(`/api/sism-letter_in/${this.state._id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast(response.data.message)\n                    this.componentDidMount()\n                    this.setState({\n                        dialogDeleteVisible:false,\n                        _id:''\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    approveLetter = async (id) => {\n       const body = {\n           is_approved : 1\n       }\n        try{\n            await axios.put(`/api/sism-letter_in-approve/${id}`,body)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    this.addToast('Succes!')\n                    this.componentDidMount()\n                    \n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n   \n\n    searchLetterIn = async (evt) => {\n        if (evt === '' ) {\n            this.state.data = []\n            \n        } else {\n            try{\n                await axios.get(`/api/sism-search_letter_in?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        this.setState({data:response.data.data})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n       \n    }\n\n    render() \n    {\n        const columns = [{label:'No',width:'2%'},\n                    {label:'Letter No',width:'15%'},\n                    {label:'From',width:'15%'},\n                    {label:'Subject',width:'15%'},\n                    {label:'Date',width:'10%'},\n                    {label:'To Division'},\n                    {label:'Handled By'},\n                    {label:'Status',width:'10%'},\n                    {label:'',width:'2%'}] \n        const actions = [];\n        actions.push(<Button raised primary onClick={this.save}>Submit</Button>)\n        actions.push({ children: 'Cancel', onClick: (() => this.setState({dialogVisible:!this.state.dialogVisible}))})\n       \n        return(\n            <div>\n                \n                <Grid className=\"grid-example\">\n                    <Toolbar \n                        title={<b>Request Incoming Letter</b>}\n                        nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                <Grid className=\"grid-example\">  \n                    <Cell size={4}>\n                        \n                    </Cell>\n                    <Cell size={4} offset={4}>\n                       \n\n                        <TextField \n                            placeholder=\"Search ... \"\n                            onChange={this.searchLetterIn}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\" style={{overflowX:'scroll'}}>\n                    <Cell size={12}>\n                    {\n                        this.state.data.length > 0 ? (\n                    \n                    <table className=\"table is-striped is-bordered is-fullwidth\" style={{fontSize:'10pt'}}>\n                        <thead>\n                           {columns.map((item,i) => (\n                               <th width={item.width} key={i}>{item.label}</th>\n                           ))}\n                        </thead>\n                        <tbody>\n                            {this.state.data.map((item,i) => (\n                                <tr key={i}>\n                                    <td>{i+1}</td>\n                                    <td>{item.is_reply_required ? <i className=\"fa fa-warning\" style={{color:'orange'}} ></i> :'' }&nbsp;<Link to={`/sism/letter-in/detail-unapprove?id=${item._id}`} /*onClick={() => this.showDetail(item._id)}*/ ><b>{item.letter_number_original}</b></Link> </td>\n                                    <td>{item.sender_name !=='' ? item.sender_name : item.client_name}</td>\n                                    <td>{item.subject}</td>\n                                    <td>{dateformat(item.date_in,'dd mmm yyyy')}</td>\n                                    <td>{item.to_division}</td>\n                                    <td>{item.handled_by}</td>\n                                    <td><span className={\"tag \"+item.label_color}>{item.status}</span></td>\n                                    <td><LetterInMenu is_reply_required = {item.is_reply_required} id ={item._id} setDelete={(id) => this.setDelete(id)} approveLetter={(id) => this.approveLetter(id)}/></td>\n\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                        ): (\n                            <div className=\"notification is-fullwidth\">\n                                <p>No data showed ...</p>\n                            </div>\n                        )\n                    }\n                    </Cell>\n                </Grid>\n                <Snackbar\n                    id=\"example-snackbar\"\n                    toasts={this.state.toasts}\n                    autohideTimeout={300}\n                    />\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogDeleteVisible}\n                    onHide={() => !this.state.dialogDeleteVisible}\n                    actions={[<Button raised primary onClick={this.delete} >YES</Button>,<Button onClick={() => this.setState({dialogDeleteVisible :false})} >NO</Button>]}\n                    title=\"Confirmation\"\n                    >\n                    <p>Are you sure delete this item?</p>\n                </DialogContainer>\n            </div>\n           \n        )\n    }\n}\n\nclass LetterInMenu extends Component {\n    state = {\n\n    }\n\n    setUpdate  = (id) => {\n        this.props.setUpdate(id)\n    }\n\n    approveLetter = async (id) => {\n        this.props.approveLetter(id)\n    }\n    setDelete = (id) => {\n        this.props.setDelete(id)\n    }\n    render(){\n       const {id} = this.props\n       var menuItems = [ ]\n      \n        menuItems = [ \n            <ListItem key={1} onClick={() => this.approveLetter(this.props.id)} primaryText='Approve' rightIcon={(<i className='fa fa-check' /> )} style={{backgroundColor:'lightblue'}}  /> , \n             \n        ]\n     \n         \n        return(\n            <MenuButton id= 'kebabmenu' icon  menuItems={menuItems} \n            listInline centered\n            listStyle={{textDecoration:'none',listStyle:'none',justifyItems:'center'}}\n        \n        \n            > more_vert</MenuButton>\n        )\n    }\n}","import LetterInUnApproved from './LetterInUnApproved'\n\nexport default {\n    routeProps: {\n        path: '/sism/letter-in-unapproved',\n        exact: true,\n        component: LetterInUnApproved,\n    },\n    name: 'LetterInUnApproved',\n}","import Detail from './Detail'\n\nexport default {\n    routeProps: {\n        path: '/sism/archives/detail',\n        exact: true,\n        component: Detail,\n    },\n    name: 'Detail',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Toolbar, Button, Cell, Card, TextField } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nexport default class Detail extends Component {\n\n    state = {\n        _id: '',\n        keyIncoming :'',\n        keyOutgoing : '',\n        client_name: '',\n        client_id:'',\n        data: [],\n        file_url: [],\n        letter_in: [],\n        letter_out: [],\n        total_data:0,\n        currentPage : 1,\n        displayPerPage : 10,\n        total_dataOutgoing:0,\n        currentPageOutgoing : 1,\n        displayPerPageOutgoing : 10\n    }\n\n    async componentDidMount() {\n\n        const parsed = qs.parse(window.location.search)\n\n        this.setState({ _id: parsed.client_id })\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            this.setState({ client_id: parsed.client_id })\n        }\n        console.log(parsed.client_id)\n        try {\n            await axios.get(`/api/client/${parsed.client_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        response.data.data.map((item, i) => {\n                            this.setState({\n                                client_name: item.client_name\n                            })\n                            return false\n                        })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/sism-letters_in-total?client_id=${parsed.client_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            total_data: response.data.data[0].total\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/sism-letters_in?client_id=${parsed.client_id}&currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            letter_in: response.data.data\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/sism-letters_out-total?client_id=${parsed.client_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            total_dataOutgoing: response.data.data[0].total\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/sism-letters_out?client_id=${parsed.client_id}&currentPage=${this.state.currentPageOutgoing}&displayPerPage=${this.state.displayPerPageOutgoing}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            letter_out: response.data.data\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n    }\n\n    searchIncoming=async(evt) => {\n        this.setState({keyIncoming : evt, currentPage : 1})\n        try {\n            await axios.get(`/api/sism-letters_in-total?client_id=${this.state.client_id}&key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            total_data: response.data.data[0].total\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        try {\n            await axios.get(`/api/sism-letters_in?client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            letter_in: response.data.data\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    searchOutgoing=async(evt) => {\n        this.setState({keyOutgoing : evt, currentPageOutgoing : 1})\n        try {\n            await axios.get(`/api/sism-letters_out-total?client_id=${this.state.client_id}&key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            total_dataOutgoing: response.data.data[0].total\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        try {\n            await axios.get(`/api/sism-letters_out?client_id=${this.state.client_id}&currentPage=${1}&displayPerPage=${this.state.displayPerPageOutgoing}&key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            letter_out: response.data.data\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    setActivePageIncoming = (i) => {\n\n        this.setState({ currentPage: (i) })\n        this.loadDataByPageIncoming(i)\n        // window.scrollTo(0,  tableData.current.offsetTop)\n\n\n    }\n    isActiveIncoming = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEndIncoming = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: (endPage) })\n        this.loadDataByPageIncoming(endPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageStartIncoming = () => {\n        this.setState({ currentPage: (1) })\n        this.loadDataByPageIncoming(1)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n    }\n\n    setPageNextIncoming() {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: (nextPage) })\n        this.loadDataByPageIncoming(nextPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPagePreviousIncoming() {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: (prevPage) })\n        this.loadDataByPageIncoming(prevPage)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    loadDataByPageIncoming = async(i) => {\n        try {\n            await axios.get(`/api/sism-letters_in?client_id=${this.state.client_id}&currentPage=${i}&displayPerPage=${this.state.displayPerPageOutgoing}&key=${this.state.keyIncoming}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            letter_in: response.data.data\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n\n    setActivePageOutgoing = (i) => {\n\n        this.setState({ currentPageOutgoing: (i) })\n        this.loadDataByPageOutgoing(i)\n        // window.scrollTo(0,  tableData.current.offsetTop)\n\n\n    }\n    isActiveOutgoing = (i) => {\n        if (i === this.state.currentPageOutgoing) {\n            return true\n        }\n    }\n\n    setPageEndOutgoing = () => {\n        var endPage = Math.ceil(this.state.total_dataOutgoing / this.state.currentPageOutgoing)\n        this.setState({ currentPageOutgoing: (endPage) })\n        this.loadDataByPageOutgoing(endPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPageStartOutgoing = () => {\n        this.setState({ currentPageOutgoing: (1) })\n        this.loadDataByPageOutgoing(1)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n    }\n\n    setPageNextOutgoing() {\n        var i = this.state.currentPageOutgoing\n        const endPage = Math.ceil(this.state.total_dataOutgoing / this.state.displayPerPageOutgoing)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPageOutgoing: (nextPage) })\n        this.loadDataByPageOutgoing(nextPage)\n        // window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    setPagePreviousOutgoing() {\n        var i = this.state.currentPageOutgoing\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPageOutgoing: (prevPage) })\n        this.loadDataByPageOutgoing(prevPage)\n        //  window.scrollTo(0, tableData.current.offsetTop)\n\n\n    }\n\n    loadDataByPageOutgoing = async(i) => {\n        try {\n            await axios.get(`/api/sism-letters_out?client_id=${this.state.client_id}&currentPage=${i}&displayPerPage=${this.state.displayPerPageOutgoing}&key=${this.state.keyOutgoing}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n\n                        this.setState({\n                            letter_out: response.data.data\n                        })\n\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n\n\n\n    render() {\n\n        const pages = []\n\n        const m = this.state.currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (this.state.currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n\n        const pagesOutgoing = []\n\n        const mOutgoing = this.state.currentPageOutgoing + 2\n        const endPageOutgoing = Math.ceil(this.state.total_dataOutgoing / this.state.displayPerPageOutgoing)\n        const nOutgoing = mOutgoing > endPageOutgoing ? endPageOutgoing : mOutgoing\n\n        for (var i = (this.state.currentPageOutgoing - 3); i <= nOutgoing; i++) {\n\n            pagesOutgoing[i - 1] = i\n        }\n\n        return (\n            <div>\n\n                <Fragment>\n                    <Grid className=\"grid-example\">\n                        <Toolbar\n                            title={<b>{\"Detail \" + this.state.client_name}</b>}\n                            nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a>}\n                        />\n                    </Grid>\n                    <Grid>\n                        <Cell size={12}>\n                            <Card style={{ borderRadius: '10px' }}>\n                                <Grid>\n                                    <Cell size={6} style={{ padding: '2.5vw', border: '1px solid grey', borderRadius: '10px' }}>\n                                        <div className=\"columns\" style={{\n                                            justifyContent:'space-between',\n                                            alignItems:'center'\n                                        }}>\n                                            <Cell size={6}>\n                                                <h4>\n                                                    Incoming Letter\n                                                </h4>\n                                            </Cell>\n                                            <Cell size={6}>\n                                                <TextField\n                                                    icon={<i className=\"fa fa-search\" />}\n                                                    value={this.state.keyIncoming}\n                                                    placeholder=\"Search ... \"\n                                                    onChange={this.searchIncoming}\n                                                />\n                                            </Cell>\n                                        </div>\n                                        \n                                        <table className=\"table is-small is-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <td>No</td>\n                                                    <td>Date Letter</td>\n                                                    <td>Letter No</td>\n                                                    <td>Subject</td>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.letter_in.length > 0 ? (\n                                                    <Fragment>\n                                                        {this.state.letter_in.map((item, i) => (\n                                                            <tr>\n                                                                <td>{i + 1}</td>\n                                                                <td>{dateformat(item.letter_date, 'dd/mmm/yyyy')}</td>\n                                                                <td><Link to={`/sism/letter-in/detail?id=${item._id}`}><b>{item.letter_number}</b></Link></td>\n                                                                <td><Link to={`/sism/letter-in/detail?id=${item._id}`}><b>{item.subject}</b></Link></td>\n                                                            </tr>\n                                                        ))}\n                                                    </Fragment>\n                                                ) : (\n                                                        <tr>\n                                                            <td colSpan={4}>\n                                                                <div className=\"notification\">\n                                                                    <p>Data is empty ...</p>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n\n                                                    )}\n                                            </tbody>\n                                        </table>\n                                        <Grid className=\"grid-example\" >\n                                            <Cell size={12}>\n                                                {pages.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStartIncoming} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePreviousIncoming}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pages.map((page) => (\n                                                            this.isActiveIncoming(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePageIncoming(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePageIncoming(page)}><b>{page}</b></button>\n                                                                )\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNextIncoming}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEndIncoming}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n                                            </Cell>\n                                        </Grid>\n                    \n                                    </Cell>\n                                    <Cell size={6} style={{ padding: '2.5vw', border: '1px solid grey', borderRadius: '10px' }} >\n                                        <div className=\"columns\" style={{\n                                            justifyContent:'space-between',\n                                            alignItems:'center'\n                                        }}>\n                                            <Cell size={6}>\n                                                <h4>\n                                                    Outgoing Letter\n                                                </h4>\n                                            </Cell>\n                                            <Cell size={6}>\n                                                <TextField\n                                                    icon={<i className=\"fa fa-search\" />}\n                                                    value={this.state.keyOutgoing}\n                                                    placeholder=\"Search ... \"\n                                                    onChange={this.searchOutgoing}\n                                                />\n                                            </Cell>\n                                        </div>\n                                        <table className=\"table is-small is-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <td>No</td>\n                                                    <td>Date Letter</td>\n                                                    <td>Letter No</td>\n                                                    <td>Subject</td>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.state.letter_out.length > 0 ? (\n                                                    <Fragment>\n                                                        {this.state.letter_out.map((item, i) => (\n                                                            <tr>\n                                                                <td>{i + 1}</td>\n                                                                <td>{dateformat(item.letter_date, 'dd/mmm/yyyy')}</td>\n                                                                <td><Link to={`/sism/letter-out/detail?id=${item._id}`}><b>{item.letter_number}</b></Link></td>\n                                                                <td><Link to={`/sism/letter-out/detail?id=${item._id}`}><b>{item.subject}</b></Link></td>\n                                                            </tr>\n                                                        ))}\n                                                    </Fragment>\n                                                ) : (\n                                                        <tr>\n                                                            <td colSpan={4}>\n                                                                <div className=\"notification\">\n                                                                    <p>Data is empty ...</p>\n                                                                </div>\n                                                            </td>\n                                                        </tr>\n\n                                                    )}\n                                            </tbody>\n                                        </table>\n\n                                        <Grid className=\"grid-example\" >\n                                            <Cell size={12}>\n                                                {pagesOutgoing.length > 0 ? (\n                                                    <div className=\"container\">\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageStartOutgoing} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPagePreviousOutgoing}><i className=\"fa fa-angle-left\"></i></button>\n                                                        {pagesOutgoing.map((page) => (\n                                                            this.isActiveOutgoing(page) ? (\n                                                                <button className=\"button is-small is-primary\" onClick={() => this.setActivePageOutgoing(page)}><b>{page}</b></button>\n                                                            ) : (\n                                                                    <button className=\"button is-small \" onClick={() => this.setActivePageOutgoing(page)}><b>{page}</b></button>\n                                                                )\n                                                        ))}\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageNextOutgoing}><i className=\"fa fa-angle-right\"></i></button>\n                                                        <button className=\"button is-small is-info\" onClick={this.setPageEndOutgoing}><i className=\"fa fa-angle-double-right\"></i></button>\n                                                    </div>\n\n                                                ) : ''}\n                                            </Cell>\n                                        </Grid>\n\n                                    </Cell>\n                                </Grid>\n                            </Card>\n                        </Cell>\n                    </Grid>\n                </Fragment>\n            </div>\n        )\n    }\n}","import Detail from './Detail.jsx'\n\nexport default {\n    routeProps: {\n        path: '/sism/tracking/detail',\n        exact: true,\n        component: Detail,\n    },\n    name: 'Detail',\n}","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Toolbar, Button, Cell, Card } from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport qs from 'query-string'\nexport default class Detail extends Component {\n\n    state = {\n        _id: '',\n        data: [],\n        file_url: [],\n    }\n\n    async componentDidMount() {\n\n        const parsed = qs.parse(window.location.search)\n\n        this.setState({ _id: parsed.letter_in_id })\n\n        if (parsed !== undefined && parsed !== null && parsed !== '') {\n            this.setState({ _id: parsed.id })\n        }\n        console.log(this.state._id)\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Detail</h1>\n                <Fragment>\n                    <Grid className=\"grid-example\">\n                        <Toolbar\n                            title={<b>{\"Detail \"}</b>}\n                            nav={<a onClick={() => window.history.go(-1)}><Button icon >arrow_back</Button></a>}\n                        />\n                    </Grid>\n                </Fragment>\n            </div>\n        )\n    }\n}\n","import React, { Component, useEffect } from 'react'\nimport {\n    Card,MenuButton,\n    Grid, Button, Cell, TextField,\n    \n} from 'react-md'\nimport axios from 'axios'\nimport { insertLog } from '../../../../log/InsertLog'\nimport { Session } from 'bc-react-session'\nimport ReactToPrint from 'react-to-print';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx'\nimport dateformat from 'dateformat'\nconst { payload } = Session.get()\n\nexport default class Logs extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            data: [],\n            dataToExportPDF:[],\n            dataToExport:[],\n            toasts: [],\n            module_id: '',\n            total_data: 0,\n            _id: '',\n            isLoading: true,\n            dialogVisible: false,\n            dialogDeleteVisible: false,\n            category: '',\n            description: '',\n            created_by: payload.userId,\n            key: '',\n            asc: 1,\n            currentPage: 1,\n            displayPerPage: 25,\n        }\n\n        this.tableData = React.createRef();\n      \n\n        //this.addLog = this.addLog.bind(this)\n    }\n\n    async componentDidMount() {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n                .then(response => {\n\n                    response.data.data.map((item, i) => {\n                        module_id = item._id\n                        this.setState({ module_id: module_id })\n                    })\n                })\n        } catch (error) {\n            console.error('Data Not Loaded ', error)\n        }\n\n        try {\n            await axios.get(`/api/logs-by-module-id-total/${module_id}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        try {\n            await axios.get(`/api/logs-by-module-id/${module_id}?currentPage=${this.state.currentPage}&displayPerPage=${this.state.displayPerPage}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        insertLog('Access Logs Page', module_id)\n       \n    }\n\n    \n    search = async (val) => {\n        this.setState({\n            key: val\n        })\n        try {\n            await axios.get(`/api/logs-by-module-id-total/${this.state.module_id}?key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ total_data: response.data.data[0].total })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${1}&displayPerPage=${this.state.displayPerPage}&key=${val}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n\n        this.setState({\n            key: val, currentPage: 1\n        })\n    }\n\n    setSorting = (key) => {\n        this.setState({ asc: (this.state.asc * (-1)) })\n        var data = this.state.data\n        this.sortArray(data, key, this.state.asc)\n        this.setState({ data: data })\n    }\n\n    sortArray = (array, property, direction) => {\n        direction = direction || 1;\n        array.sort(function compare(a, b) {\n            let comparison = 0;\n            if (a[property] > b[property]) {\n                comparison = 1 * direction;\n            } else if (a[property] < b[property]) {\n                comparison = -1 * direction;\n            }\n            return comparison;\n        });\n        return array; // Chainable\n    }\n\n    setActivePage = (i) => {\n        console.log(i)\n        this.setState({ currentPage: i })\n        this.loadDataByPage(i)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n    isActive = (i) => {\n        if (i === this.state.currentPage) {\n            return true\n        }\n    }\n\n    setPageEnd = () => {\n        var endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        this.setState({ currentPage: endPage })\n        this.loadDataByPage(endPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageStart = () => {\n        this.setState({ currentPage: 1 })\n        this.loadDataByPage(1)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPageNext = () => {\n        var i = this.state.currentPage\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        var nextPage = i + 1 > endPage ? endPage : (i + 1)\n        this.setState({ currentPage: nextPage })\n        this.loadDataByPage(nextPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    setPagePrevious = () => {\n        var i = this.state.currentPage\n        var prevPage = (i - 1) < 1 ? 1 : (i - 1)\n        this.setState({ currentPage: prevPage })\n        this.loadDataByPage(prevPage)\n        window.scrollTo(0, this.tableData.current.offsetTop)\n    }\n\n    loadDataByPage = async (i) => {\n\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${i}&displayPerPage=${this.state.displayPerPage}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ data: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: i\n        })\n    }\n\n    beforeGetContent = async () => {\n        \n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({ dataToExportPDF: response.data.data, isLoading: false })\n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    exportXLS = async () => { \n        var dataToExport = []\n        try {\n            await axios.get(`/api/logs-by-module-id/${this.state.module_id}?currentPage=${0}&displayPerPage=${0}&key=${this.state.key}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        if (response.data.status === 200) {\n                            var dt = []\n                            response.data.data.map(async (item, i) => {\n                                var obj = {}\n                                obj['NO'] = i + 1\n                                obj['Time'] = dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')\n                                obj['User'] = item.full_name !== null ? item.full_name : item.client_name\n                                obj['Activity'] = item.log\n                                obj['IP'] = item.from_ip\n                                obj['UserAgent'] = item.user_agent\n                                \n                                dt.push(obj)\n    \n                                return false\n                            })\n                            dataToExport = dt\n                            this.setState({ dataToExport: dataToExport })\n                        }\n    \n\n                    }\n                })\n        } catch (e) {\n            console.log(e)\n        }\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8'\n        const fileExtension = '.xlsx'\n        var fileName = ''\n\n        fileName = `All Logs SISM  per ${dateformat(new Date(), 'dd-mm-yyyy')}`\n\n        const ws = XLSX.utils.json_to_sheet(dataToExport);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension)\n\n    }\n\n    render() {\n\n        const actions = [];\n\n        const action_delete = [];\n        action_delete.push(<Button raised primary onClick={this.delete}>YES</Button>)\n        action_delete.push({ children: 'NO', onClick: (() => this.setState({ dialogDeleteVisible: !this.state.dialogDeleteVisible })) });\n\n        const pages = []\n        const currentPage = this.state.currentPage\n        const m = currentPage + 2\n        const endPage = Math.ceil(this.state.total_data / this.state.displayPerPage)\n        const n = m > endPage ? endPage : m\n\n        for (var i = (currentPage - 3); i <= n; i++) {\n\n            pages[i - 1] = i\n        }\n        const limitBottom = ((this.state.currentPage - 1) * this.state.displayPerPage)\n        const limitTop = (limitBottom + this.state.displayPerPage) - 1\n\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Time', width: '8%' },\n            { label: 'User', width: '8%' },\n            { label: 'Activity', width: '32%' },\n            { label: 'IP', width: '10%' },\n            { label: 'User Agent', width: '30%' }\n\n        ]\n\n        return (\n\n            <div style={{ marginBottom: '8%' }}>\n\n                <Grid className=\"grid-example\">\n                    <h2 className=\"md-cell md-cell--12\">\n                        Logs\n                    </h2>\n                    <Cell size={7}>\n\n                    </Cell>\n                    <Cell size={1}>\n                        \n                        <MenuButton\n                            id=\"menu-button-2\"\n                            style={{ listStyle: 'none' }}\n                            menuItems={[{\n                                primaryText: <p onClick={this.exportXLS}>XLS</p>,\n                            }, {\n                                primaryText:\n                                    // <a href={socket_address+`/api/ccs-tickets-print`} target='_blank' style={{textDecoration:'none'}}>PDF</a>\n                                    (<ReactToPrint\n                                        onBeforeGetContent={this.beforeGetContent}\n                                        trigger={() => <p>PDF</p>}\n                                        content={() => this.componentRef}\n                                    />),\n                            }]}\n\n                            centered\n                            anchor={{\n                                x: MenuButton.HorizontalAnchors.CENTER,\n                                y: MenuButton.VerticalAnchors.CENTER,\n                            }}\n                        >\n                            <button className=\"button is-small is-primary\">\n                                <i className=\"fa fa-print\"></i>\n                    &nbsp;<b>Print</b>\n                            </button>\n                        </MenuButton>\n                        <div style={{ display: \"none\" }}>\n                            <Printable\n                                ref={el => (this.componentRef = el)}\n                                data={this.state.dataToExportPDF}\n                                role={this.props.role}\n                            />\n                        </div>\n                    </Cell>\n                    <Cell size={4}>\n                        <TextField\n                            placeholder=\"Search ... \"\n                            onChange={this.search}\n                        />\n                    </Cell>\n                </Grid>\n                <Grid className=\"grid-example\" style={{ height: '80vh', marginBottom: '3%' }} ref={this.tableData} >\n                    \n                    <Cell size={12}>\n                        <Card style={{padding:'10px', borderRadius:'10px'}} >\n                            <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '9pt', overflowY: 'scroll' }}>\n                                <thead>\n                                    {columns.map((item, i) => (\n                                        <th width={item.width} key={i}>{item.label}</th>\n                                    ))}\n                                </thead>\n                                <tbody>\n                                    {this.state.data.length > 0 ? this.state.data.map((item, i) => (\n\n\n                                        <tr key={i}>\n                                            <td>{i + 1}</td>\n                                            <td>{dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')}</td>\n                                            <td>{item.full_name !== null ? item.full_name : item.client_name}</td>\n                                            <td>{item.log}</td>\n                                            <td>{item.from_ip}</td>\n                                            <td>{item.user_agent}</td>\n                                        </tr>\n\n                                    )) : (\n                                            <tr>\n                                                <td colSpan={6}>\n                                                    <div className=\"notification\">\n                                                        <p>Data is empty</p>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        )}\n\n\n                                </tbody>\n                            </table>\n                        </Card>\n                    </Cell>\n                    <Cell size={8}>\n\n                    </Cell>\n                    <Cell size={4} style={{ alignItems: 'right' }}>\n                        {pages.length > 0 ? (\n                            <div className=\"container\">\n                                <button className=\"button is-small is-info\" onClick={this.setPageStart} ><i className=\"fa fa-angle-double-left\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPagePrevious}><i className=\"fa fa-angle-left\"></i></button>\n                                {pages.map((page) => (\n                                    this.isActive(page) ? (\n                                        <button className=\"button is-small is-primary\" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                    ) : (\n                                            <button className=\"button is-small \" onClick={() => this.setActivePage(page)}><b>{page}</b></button>\n                                        )\n\n                                ))}\n                                <button className=\"button is-small is-info\" onClick={this.setPageNext}><i className=\"fa fa-angle-right\"></i></button>\n                                <button className=\"button is-small is-info\" onClick={this.setPageEnd}><i className=\"fa fa-angle-double-right\"></i></button>\n                            </div>\n\n                        ) : ''}\n                    </Cell>\n                </Grid>\n\n            </div>\n        )\n    }\n}\n\nclass Printable extends Component {\n\n    constructor(props){\n        super(props)\n    }\n\n    render(){\n\n        const columns = [\n            { label: 'No', width: '2%' },\n            { label: 'Time', width: '8%' },\n            { label: 'User', width: '8%' },\n            { label: 'Activity', width: '32%' },\n            { label: 'IP', width: '10%' },\n            { label: 'User Agent', width: '30%' }\n\n        ]\n\n        return (\n            <Grid className=\"grid-example\" style={{ height: '80vh', marginBottom: '3%' }} ref={this.tableData} >\n                    \n                <Cell size={12}>\n                    <Card style={{padding:'10px', borderRadius:'10px'}} >\n                        <table className=\"table is-striped is-bordered is-fullwidth\" style={{ fontSize: '9pt', overflowY: 'scroll' }}>\n                            <thead>\n                                {columns.map((item, i) => (\n                                    <th width={item.width} key={i}>{item.label}</th>\n                                ))}\n                            </thead>\n                            <tbody>\n                                {this.props.data.length > 0 ? this.props.data.map((item, i) => (\n\n\n                                    <tr key={i}>\n                                        <td>{i + 1}</td>\n                                        <td>{dateformat(item.timestamp, 'dd/mm/yyyy, HH:MM:ss')}</td>\n                                        <td>{item.full_name !== null ? item.full_name : item.client_name}</td>\n                                        <td>{item.log}</td>\n                                        <td>{item.from_ip}</td>\n                                        <td>{item.user_agent}</td>\n                                    </tr>\n\n                                )) : (\n                                        <tr>\n                                            <td colSpan={6}>\n                                                <div className=\"notification\">\n                                                    <p>Data is empty</p>\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    )}\n\n\n                            </tbody>\n                        </table>\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import React from 'react'\nimport Logs from './Logs'\n\nexport default {\n    routeProps: {\n        path: '/sism/log',\n        exact: true,\n        component: Logs,\n    },\n    name: 'Logs',\n}","import React,{Component, Fragment} from 'react'\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button, ListItem, List, Subheader, Divider, FontIcon,Card,Avatar} from 'react-md'\nimport axios from 'axios'\nimport io from 'socket.io-client'\nimport {socket_address} from '../../../../components/socket-address'\n\nimport dateformat from 'dateformat'\nimport {Session} from 'bc-react-session'\nconst {payload} =Session.get()\n\nexport default class Notifications extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            data:[],\n            _id:'',\n            avg_rating:0,\n            client_code:'',\n            client_name:'',\n            tab:'onprogress',\n            currentPage : 1,\n            displayPerPage : 25,\n            totalShowed : 0,\n            isLoading : true\n        }\n    \n        this.socket = io(socket_address) \n        \n            this.socket.on('RECEIVE_NOTIFICATION', (data) => {\n                if (data.to_user_id === payload.userId) {\n                    this.componentDidMount()\n                }\n                \n            })\n            this.socket.on('READ_NOTIFICATION', (data) => {\n                this.componentDidMount()\n            })\n\n    }\n    \n\n\n    componentDidMount= async  () => {\n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                response.data.data.map((item,i) => {\n                     module_id = item._id\n                })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n\n        this.setState({module_id:module_id})\n\n\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        \n\n        try{\n            await  axios.get(`/api/notifications-per-user-total/${payload.userId}?displayPerPage=${0}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({total_data : response.data.data[0].total})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${this.state.displayPerPage}&module_id=${module_id}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data,isLoading:false})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n\n    }\n\n    readNotif = async (notif_id) => {\n        const body = {\n          is_read : 1\n        }\n         try{\n           axios.put(`/api/notification/${notif_id}`,body)\n           .then(response => {\n             if (response.data.status === 200) {\n   \n             }\n           })\n         }catch(e){\n           console.log(e)\n         }\n    }\n\n    loadMore = async() => {\n\n        const currentPage = this.state.currentPage+1\n        const displayPerPage = this.state.displayPerPage * currentPage\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}?displayPerPage=${displayPerPage}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n        this.setState({\n            currentPage: currentPage,\n            totalShowed: displayPerPage\n        })\n    }\n    \n\n    render() \n    {\n       if (this.state.isLoading) {\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <div className=\"notification\">\n                        <p>Loading ... </p>\n                    </div>\n                </Cell>\n             </Grid>\n        )\n       }  else \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>All Notifications</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                </Cell>\n                <Cell size={12}>\n                    <Card style={{padding: '2.5vw',}}>\n                        <List className=\"md-cell \" style={{width:'100%',listStyle:'none'}}>\n                            <Subheader primaryText=\"Notifications\" />\n                            {this.state.data.map((item,i) => (\n                                <Link to={item.link} onClick={() => this.readNotif(item._id)} >\n                                    <ListItem\n                                        //  style={{backgroundColor: item.is_read === 0 ? '#cae7fa' : ''}}\n                                        leftAvatar={<Avatar src={item.avatar_url}/>}\n                                        primaryText={<Fragment> <b>{item.full_name !== '' &&  item.full_name !== null ? item.full_name : item.client_name}</b> &nbsp; {item.is_read === 0 ? <span className=\"tag \" style={{backgroundColor:'#cae7fa'}}><b>UNREAD</b></span>:''} </Fragment>}\n                                        secondaryText={<Fragment>  {item.notification} &nbsp; <p>{dateformat(item.created_at,'dd mmm yyyy, HH:MM' )}</p> </Fragment> }\n                                        threeLines\n                                    />\n                                </Link>\n                            ))}\n                            \n                                                       \n                        </List>\n                        { this.state.totalShowed < this.state.total_data ? (\n                            <a onClick={this.loadMore}><h4 >Load More ... </h4></a>\n                        ):'' }\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import letter_in from './letter-in'\nimport detail_letter_in from './letter-in/detail'\nimport detail_unapprove from './letter-in/detail_unapprove'\nimport form_letter_in from './letter-in/form'\nimport form_edit_letter_in from './letter-in/formedit'\nimport letter_out from \"./letter-out\"\nimport detail_letter_out from './letter-out/detail'\nimport form_letter_out from './letter-out/form'\nimport form_edit_letter_out from './letter-out/formedit'\nimport tracking from \"./tracking\"\nimport archives from \"./archives\"\nimport report from \"./report\"\nimport status from \"./status\"\nimport sending_methods from \"./sending-methods\"\nimport home from '../home'\nimport preferences from \"./preferences\"\nimport profile from \"./profile\"\nimport changepwd from \"./changepwd\"\nimport unapproved_letter_in from \"./letter-in/unapproved-letter-in\"\nimport detail_archive from './archives/detail_archive'\nimport detail_tracking from './tracking/detail_tracking'\nimport  log  from './log'\nimport notifications from './notifications'\n\nexport default [\n    letter_in,letter_out,tracking,archives,report,status,sending_methods,home\n    ,preferences,profile,changepwd,detail_letter_in,detail_letter_out,form_letter_in,form_edit_letter_in,\n    form_letter_out,form_edit_letter_out,unapproved_letter_in,\n    detail_archive,detail_tracking,log,detail_unapprove, notifications\n]","import React from 'react'\nimport Notifications from './Notifications'\n\nexport default {\n    routeProps: {\n        path: '/sism/notifications',\n        exact: true,\n        component: Notifications,\n    },\n    name: 'Notifications',\n}","import React, { Component } from 'react'\nimport { Switch, BrowserRouter as Router, Route, Redirect } from 'react-router-dom'\nimport { Button, Drawer, Toolbar } from 'react-md'\nimport { UserDropdownMenu, Notifications, ApplicationMenu, NavLink } from '../../../components'\nimport axios from 'axios'\nimport menus from '../menus'\nimport { Session } from 'bc-react-session'\n\nconst { payload } = Session.get()\nvar inboxListItems = []\n\nexport default class Home extends Component {\n\n  state = { visible: false, module_id: '', position: 'left', module_title: this.props.module_title, avatar_url: '' }\n\n  async componentDidMount() {\n\n    window.document.title = 'SISM PT MSO'\n\n    var moduleName = window.location.href.split('/')\n    try {\n      await axios.get(`/api/menu-by-module-link/${moduleName[3]}`)\n        .then(response => {\n          var dt = []\n          response.data.data.map((item, i) => {\n            var obj = {\n              label: item.menu,\n              to: item.link,\n              icon: 'list',\n            }\n            dt[i] = (<NavLink key={i} label={item.menu} to={item.link} icon={item.icon} />)\n          })\n          inboxListItems = dt\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n    try {\n      await axios.get(`/api/user/${payload.userId}`)\n        .then(response => {\n          if (response.data.status === 200) {\n            response.data.data.map((item, i) => {\n              this.setState({\n                avatar_url: item.avatar_url\n              })\n            })\n\n          }\n\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n\n    var module_id = ''\n    var moduleName = window.location.href.split('/')\n    try {\n      await axios.get(`/api/module-by-link/${moduleName[3]}`)\n        .then(response => {\n\n          response.data.data.map(async (item, i) => {\n            module_id = item._id\n            this.setState({ module_id: item._id })\n            try {\n              await axios.get(`/api/user-role/${item._id}/${payload.userId}`)\n                .then(async (response) => {\n\n                  if (response.data.status === 200) {\n                    this.state.role = response.data.data[0].role\n                    this.state.role_id = response.data.data[0].role_id\n                    try {\n                      await axios.get(`/api/menu-by-module-link-role-id/${moduleName[3]}/${response.data.data[0].role_id}`)\n                        .then(response => {\n                          var dt = []\n                          response.data.data.map((item, i) => {\n                            var obj = {\n                              label: item.menu,\n                              to: item.link,\n                              icon: 'list',\n                            }\n                            dt[i] = (<NavLink key={i} label={item.menu} to={item.link} icon={item.icon} />)\n                          })\n\n                          inboxListItems = dt\n                        })\n                    } catch (error) {\n                      console.error('Data Not Loaded ', error)\n                    }\n                  }\n\n                })\n            } catch (error) {\n              console.log(error)\n            }\n            return false\n          })\n        })\n    } catch (error) {\n      console.error('Data Not Loaded ', error)\n    }\n\n\n\n\n\n\n\n    console.log(this.state.role_id)\n\n  }\n  openDrawerLeft = () => {\n    this.setState({ visible: true, position: 'left' });\n  };\n\n\n  closeDrawer = () => {\n    this.setState({ visible: false });\n  };\n\n  handleVisibility = (visible) => {\n    this.setState({ visible });\n  };\n\n  render() {\n    const { visible, position } = this.state;\n    const isLeft = position === 'left';\n\n    const closeBtn = <Button icon onClick={this.closeDrawer}>{isLeft ? 'arrow_back' : 'close'}</Button>;\n    if (payload.userId === '' || payload.userId === null || payload.userId === undefined) {\n      return (\n        <Redirect to='/' />\n      )\n    } else\n      return (\n        <Router>\n          <div style={{ marginTop: '70px' }}>\n            <Toolbar\n              fixed\n              themed\n              nav={<Button icon onClick={this.openDrawerLeft} >menu</Button>}\n              title={this.state.module_title}\n              style={{ backgroundColor: this.props.bg_color }}\n              actions={[(<ApplicationMenu />), (<Notifications />), (<UserDropdownMenu avatar={this.state.avatar_url} />)]}\n            />\n            <div className=\"content\">\n              <Switch>\n                { /* menus.map((_,i) => (\n                  <Route {..._.routeProps} key={_.name} />\n                )) */}\n\n                {menus.map((_, i) => (\n                  <Route path={_.routeProps.path} exact={_.routeProps.exact} key={_.name} component={() => <_.routeProps.component role={this.state.role} role_id={this.state.role_id} />} />\n                ))}\n              </Switch>\n            </div>\n            <Drawer\n              id=\"simple-drawer-example\"\n              type={Drawer.DrawerTypes.TEMPORARY}\n              visible={visible}\n              position={position}\n              onVisibilityChange={this.handleVisibility}\n              navItems={inboxListItems}\n              header={(\n                <Toolbar\n                  nav={isLeft ? (<Button icon onClick={() => window.location.href = '/'} >home</Button>) : closeBtn}\n                  actions={isLeft ? closeBtn : null}\n                  className=\"md-divider-border md-divider-border--bottom\"\n                />\n              )}\n            />\n          </div>\n        </Router>\n      );\n  }\n} \n","import React,{Component} from 'react'\nimport Home from './home/Home'\n\nclass SISM extends Component{\n    render() {\n        return(\n            <Home module_title='SISM' bg_color='#fafafa'/>\n        )\n    }\n} \n\nexport default {\n    routeProps: {\n        path: '/sism',\n        exact: true,\n        component: SISM,\n    },\n    name: 'SISM',\n}","import React,{PureComponent} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Card,CardTitle,CardText,TextField,Toolbar,Button, FontIcon} from 'react-md'\nimport axios from 'axios'\n\nexport default class Landingpage extends PureComponent {\n    constructor(props){\n        super(props)\n        this.state = {\n            modules:[],\n        }\n    }\n    async componentDidMount() {\n        try{\n            await axios.get(`/api/modules`)\n            .then(response => {\n                if (response.data.status === 200) {\n                    this.setState({modules:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    searchModule = async (evt) => {\n        if (evt === '') {\n            this.componentDidMount()\n        }else {\n            try{\n                await axios.get(`/api/search_module?key=${evt}`)\n                .then(response => {\n                    if (response.data.status === 200) {\n                        this.setState({modules:response.data.data})\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n\n\n    render() {\n        return(\n            <div  style={{\n                backgroundImage:('/images/home.jpg')\n            }} >\n\n            \n            <Card  primary style={{height:'100vh',backgroundColor:'lightblue',background:('/images/home.jpg')}} className=\"md-block-centered\">\n\n                <div className=\"container\">\n                    <div className=\"columns is-vcentered\">\n                        <div className=\"column is-1\" style={{alignItems:\"center\"}}>\n                            <figure>\n                                <img  width=\"100px\" src=\"/LogoMSObaru.png\" />\n                            </figure>\n                        </div>\n                        <div className=\"column is-11\">\n                            <h4>\n                                <b>PT MITRANET SOFTWARE ONLINE</b>\n                            </h4>\n                            <p style={{fontSize:'8pt'}}><b>IT Consultant & Software Develpment</b></p> \n                            <p style={{fontSize:'8pt'}}><a target=\"_blank\" href=\"https://www.microbanking-online.com\" >www.microbanking-online.com</a></p>\n                        </div>\n                    </div>\n                    \n                    \n                </div>\n                <CardText>\n                    <div className=\"level box\">\n                        <div className=\"level-item\">\n                            <div className=\"field\">\n                                <div className=\"control\">\n                                    <TextField \n                                        leftIcon={<FontIcon>search</FontIcon>}\n                                        className=\"md-cell md-cell-tablet--8\"\n                                        placeholder=\"Search ...\" \n                                        fullWidth   \n                                        style={{width:'400px'}} \n                                        onChange={this.searchModule}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                   \n                    <div className=\"columns is-multiline is-centered box\">\n                        {this.state.modules.map((item,i) => (\n                            <div className=\"column is-2\">\n                                <Link to ={item.link} >\n                                    <figure>\n                                        <img  width=\"100px\" src={item.icon} />\n                                    </figure>\n                                    <br /> \n                                    <b>{item.module}</b>\n                                    </Link>\n                            </div>\n                        ))}\n                        \n                    </div>\n                    \n                </CardText>\n            </Card>\n            </div>\n        )\n    }\n}","import React,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport qs from 'query-string'\nimport { Grid,Cell} from 'react-md'\nimport axios from 'axios'\nimport Landingpage from './Landingpage'\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\n\nexport default class Container extends Component{\n    constructor(props){\n        super(props)\n         this.state = {\n             _id:'',\n             role:'',\n             data:[],\n             contain:'',\n         }\n \n         \n       \n     }\n\n    async componentDidMount() {\n\n        this.setState({contain:'form'})\n\n       \n\n        var module_id = ''\n        var moduleName = window.location.href.split('/')\n\n        try {\n            await axios.get(`/api/module-by-link/${moduleName[3]}`)\n            .then(response => {\n                   \n                    response.data.data.map((item,i) => {\n                        module_id = item._id\n                    })\n            })\n        }catch(error){\n            console.error('Data Not Loaded ',error)\n        }\n       \n        try {\n            await axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n            .then(response => {\n           \n                if (response.data.status === 200) {\n                    this.setState({role:response.data.data[0].role})\n                }\n            \n            })\n        }catch(error){\n            console.log(error)\n        }\n\n        \n    }\n\n    render(){\n        const parsed = qs.parse(window.location.search)\n        console.log(parsed)\n        var list_contain = parsed.tab_name !== undefined ?  parsed.tab_name : 'client'\n        var  tabList = [\n            {color:'pink',action:'client',icon:'fa fa-ticket',tooltip:'BPR/Clients'},\n            {color:'lightblue',action:'status',icon:'fa fa-ticket',tooltip:'Status'},\n        ] \n\n        return(\n            <div>\n               \n                    <Landingpage />\n               \n            </div>\n        )\n    }\n}","\nimport home from '../home'\nimport preferences from './preferences'\nimport profile from './profile'\nimport changepwd from './changepwd'\n\nexport default [\n    home, preferences,profile,changepwd\n]","import Landingpage from './Container'\n\nexport default {\n    routeProps: {\n        path: '/landing/',\n        exact: true,\n        component: Landingpage,\n    },\n    name: 'Landingpage',\n}","import Preferences from '../../../components/Preferences'\n\nexport default {\n    routeProps: {\n        path: '/landing/setting/preferences',\n        exact: true,\n        component: Preferences,\n    },\n    name: 'Preferences',\n}","import Profile from '../../../components/Profile'\n\nexport default {\n    routeProps: {\n        path: '/landing/setting/profile',\n        exact: true,\n        component: Profile,\n    },\n    name: 'Profile',\n}","import ChangePassword from '../../../components/ChangePassword'\n\nexport default {\n    routeProps: {\n        path: '/landing/setting/changepwd',\n        exact: true,\n        component: ChangePassword,\n    },\n    name: 'ChangePassword',\n}","import React,{Component} from 'react'\nimport {Link,Switch,BrowserRouter as Router, Route  } from 'react-router-dom'\nimport { Button, Drawer, Toolbar } from 'react-md'\nimport {UserDropdownMenu,Notifications, ApplicationMenu,NavLink} from '../../../components'\nimport axios from 'axios'\nimport menus from '../menus'\nimport {Session} from 'bc-react-session'\n\nconst {payload}  = Session.get()\nvar inboxListItems = []\n\nexport default class Home extends Component{\n  state = { visible: false, position: 'left',module_title:this.props.module_title,avatar_url:'' }\n\n  async componentDidMount() {\n    window.document.title = ' PT MSO'\n    var moduleName = window.location.href.split('/')\n    try {\n        await axios.get(`/api/menu-by-module-link/${moduleName[3]}`)\n        .then(response => {\n                var dt  = []\n                response.data.data.map((item,i) => {\n                var obj = {\n                    label: item.menu,\n                    to: item.link,\n                    icon: 'list',\n                }\n                dt[i] = (<NavLink key={i} label={item.menu } to={item.link} icon={item.icon} />)\n                })\n                inboxListItems = dt\n        })\n    }catch(error){\n        console.error('Data Not Loaded ',error)\n    }\n\n    try {\n        await axios.get(`/api/user/${payload.userId}`)\n        .then(response => {\n                if (response.data.status === 200 ) {\n                  response.data.data.map((item,i) => {\n                        this.setState({\n                          avatar_url : item.avatar_url\n                        })\n                    })\n                    \n                }\n              \n        })\n    }catch(error){\n        console.error('Data Not Loaded ',error)\n    }\n\n\n    var module_id = ''\n      var moduleName = window.location.href.split('/')\n      try {\n          await  axios.get(`/api/module-by-link/${moduleName[3]}`)\n          .then(response => {\n                  \n                  response.data.data.map((item,i) => {\n                      module_id = item._id\n                      return false\n                  })\n          })\n      }catch(error){\n          console.error('Data Not Loaded ',error)\n      }\n      \n      try {\n          await  axios.get(`/api/user-role/${module_id}/${payload.userId}`)\n          .then(response => {\n          \n              if (response.data.status === 200) {\n                  this.setState({role:response.data.data[0].role})\n              }\n          \n          })\n      }catch(error){\n          console.log(error)\n      }\n\n      try {\n        await  axios.get(`/api/ccs-notifications-per-user/${payload.userId}`)\n        .then(response => {\n        \n            if (response.data.status === 200) {\n                this.setState({notifications:response.data.data})\n            }\n        \n        })\n    }catch(error){\n        console.log(error)\n    }\n}\n\n\n\n  handleVisibility = (visible) => {\n    this.setState({ visible });\n  };\n\n  render() {\n    const { visible, position } = this.state;\n    const isLeft = position === 'left';\n\n    const closeBtn = <Button icon onClick={this.closeDrawer}>{isLeft ? 'arrow_back' : 'close'}</Button>;\n    return (\n      <Router>\n     <div style={{marginTop:'70px'}}>\n          <Toolbar\n          fixed\n          colored\n          nav={<a href ={'/'} style={{color:'#fff'}} ><Button icon  >home</Button></a>}\n          title={this.state.module_title}\n          style={{backgroundColor:this.props.bg_color}}\n          actions={[(<ApplicationMenu />),(<Notifications />),(<UserDropdownMenu avatar={this.state.avatar_url} />)]}\n        />\n        <div className=\"content\">\n            <Switch>\n                { menus.map((_,i) => (\n                  <Route path={_.routeProps.path} exact = {_.routeProps.exact} key={_.name} component={() => <_.routeProps.component role={this.state.role} />}/>\n                )) }\n            </Switch>\n        </div>\n        \n      </div>\n      </Router>\n    );\n  }\n} \n","import React,{Component} from 'react'\nimport Home from './home/Home'\n\nclass Clients extends Component{\n    render() {\n        return(\n            <Home module_title='PT MSO' bg_color='#fff'/>\n        )\n    }\n} \n\nexport default {\n    routeProps: {\n        path: '/landing/',\n        exact: true,\n        component: Clients,\n    },\n    name: 'Clients',\n}","import React,{Component, Fragment} from 'react'\nimport {Link, useRouteMatch} from 'react-router-dom'\nimport qs from 'query-string'\nimport {Grid,Toolbar,Cell,Button, ListItem, List, Subheader, Divider, FontIcon,Card,Avatar} from 'react-md'\nimport axios from 'axios'\nimport dateformat from 'dateformat'\nimport {Session} from 'bc-react-session'\nconst {payload} =Session.get()\n\nexport default class Notifications extends Component {\n    state = {\n        data:[],\n        _id:'',\n        avg_rating:0,\n        client_code:'',\n        client_name:'',\n        tab:'onprogress',\n    }\n\n    componentDidMount= async  () => {\n        const parsed = qs.parse(window.location.search)\n       \n        this.setState({_id:parsed.id})\n\n        try{\n            await  axios.get(`/api/notifications-per-user/${payload.userId}`)\n            .then(response => {\n                if (response.data.status ===200) {\n                   this.setState({data:response.data.data})\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n\n    }\n\n    \n\n    render() \n    {\n       \n         \n        \n\n        return(\n            <Grid>\n                <Cell size={12}>\n                    <Toolbar\n                            title={<b>All Notifications</b>}\n                            nav={<a onClick={() => window.history.go(-1)}  ><Button icon >arrow_back</Button></a> }\n                            /*actions={<KebabMenu  menuItems={menuItems} id=\"toolbar-transparent-kebab-menu\" />} */\n                        />\n                </Cell>\n                <Cell size={12}>\n                    <Card style={{padding: '2.5vw',}}>\n                        <List className=\"md-cell \" style={{width:'100%',listStyle:'none'}}>\n                            <Subheader primaryText=\"Notifications\" />\n                            {this.state.data.map((item,i) => (\n                                <Link to={item.link} >\n                                    <ListItem\n                                        leftAvatar={<Avatar src={item.avatar_url}/>}\n                                        primaryText={<b>{item.full_name !== '' &&  item.full_name !== null ? item.full_name : item.client_name}</b>}\n                                        secondaryText={<Fragment>  {item.notification} &nbsp; <p>{dateformat(item.created_at,'dd mmm yyyy, HH:MM' )}</p> </Fragment> }\n                                        threeLines\n                                    />\n                                </Link>\n                            ))}\n                            \n                                                       \n                        </List>\n                    </Card>\n                </Cell>\n            </Grid>\n        )\n    }\n}","import ccs from './ccs'\nimport clients from './clients'\nimport control from './control'\nimport employees from './employees'\nimport sism from './sism'\nimport landing from './landing'\nimport notifications from '../notifications'\n\n\nexport default [\n    ccs, clients, control, employees, sism,landing, notifications\n]","import React from 'react'\nimport Notifications from './Notifications'\n\nexport default {\n    routeProps: {\n        path: '/notifications',\n        exact: true,\n        component: Notifications,\n    },\n    name: 'Notifications',\n}","import React,{Component,Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid, Cell, Card, TextField,DialogContainer, Button,Toolbar} from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nimport {Session} from 'bc-react-session'\nconst {payload}  = Session.get()\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            _id :'',\n           validOldPassword:false,\n           dialogVisible:false,\n           old_password:'',\n           new_password:'',\n           new_password_confirm :'',\n           created_by : payload.userId\n        }\n    }\n\n    async componentDidMount() {\n        var parsed = qs.parse(window.location.search)\n        console.log(parsed.user_id)\n        this.setState({_id:parsed.user_id})\n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    onChangeOldPassword = (evt) => {\n        this.setState({old_password:evt})\n    }\n    onChangeNewPassword= (evt) => {\n        this.setState({new_password:evt})\n    }\n    onChangeNewPasswordConfim = (evt) => {\n        this.setState({new_password_confirm:evt})\n    }\n\n    confirmReset = () => {\n        if (this.state.new_password === this.state.new_password_confirm) {\n             this.setState({\n                 dialogVisible:true\n             })\n        }else{\n            this.notify('ERROR','Invalid New Password Confirmation !')\n        }\n        \n    }\n\n    \n\n\n    checkPassword = async () => {\n        const body = {\n            password_hash : this.state.old_password\n        }\n        try{\n            await axios.post(`/api/check_password/${this.state._id}`,body)\n            .then(responseEmployee => {\n                if(responseEmployee.data.status ==200) {\n                    if (responseEmployee.data.data.length === 1) {\n                        this.setState({validOldPassword:true})\n                    }else {\n                        this.notify('ERROR','Wrong Old Password!')\n                    }\n                    \n                }else {\n                    this.notify('ERROR','Wrong Old Password!')\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    save  = async() => {\n        if (this.state.validOldPassword) {\n            if (this.state.new_password === this.state.new_password_confirm) {\n                const body = {\n                    password_hash : this.state.new_password,\n                    updated_by : this.state.created_by\n                }\n                try {\n                    await axios.put(`/api/edit_profile/${this.state._id}`,body)\n                    .then( async response => {\n                        if (response.data.status === 200 ) {\n                        \n                            this.componentDidMount()\n                            this.setState({\n                                validOldPassword:false,\n                                dialogVisible:false,\n                                old_password:'',\n                                new_password:'',\n                                new_password_confirm:''\n                            })\n                            this.notify('SUCCESS','Password Changed!')\n                        }else {\n                            this.notify('ERROR','Failed Change Password !')\n                        }\n                    })\n                }catch(e){\n                    console.log(e)\n                }\n            }else {\n                this.notify('ERROR','Invalid New Password Confirmation !')\n            }\n        }else {\n            this.notify('ERROR','Invalid Old Password !')\n        }\n    }\n       \n   \n    \n\n    render(){\n        return(\n            <div>\n                <ToastContainer />\n                <Grid className=\"grid-example\">\n                    <Toolbar \n                        title={<b>Change Password</b>}\n                        nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    \n                        <Cell size={12}>\n                        <Card style={{padding:'2.5vw'}}>\n                            \n                            \n                            \n                           \n                            {this.state.validOldPassword ? (\n                                <Fragment>\n                                    <TextField \n                                        label=\"New Password\"\n                                        placeholder=\"New Password\"\n                                        type=\"password\"\n                                        value={this.state.new_password}\n                                        onChange={this.onChangeNewPassword}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <TextField \n                                        type=\"password\"\n                                        label=\"Confirm New Password\"\n                                        placeholder=\"Confirm New Password\"\n                                        value={this.state.new_password_confirm}\n                                        onChange={this.onChangeNewPasswordConfim}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <br />\n                                    <Button primary raised onClick={this.confirmReset} >Change</Button>\n                                </Fragment>\n                            ): (\n                                <Fragment>\n                                    <TextField \n                                        placeholder=\"Old Password\"\n                                        type=\"password\"\n                                        label=\"Old Password\"\n                                        value={this.state.old_password}\n                                        onChange={this.onChangeOldPassword}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <br />\n                                    <Button primary raised onClick={this.checkPassword} >Submit</Button>\n                                </Fragment>\n                            )}\n                           \n                            \n                        </Card>\n                    </Cell>\n                    \n                </Grid>\n                <DialogContainer\n                    width={'600px'}\n                    id=\"simple-action-dialog\"\n                    visible={this.state.dialogVisible}\n                    onHide={() => !this.state.dialogVisible}\n                    actions={[<Button raised primary onClick={this.save} >YES</Button>,<Button onClick={() => this.setState({dialogVisible :false})} >NO</Button>]}\n                    title=\"Confirmation\"\n                    >\n                    <p>Are you sure CHANGE the password?</p>\n                </DialogContainer>\n            </div>\n        )\n    }\n}\n\n","import React,{Component,Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid, Cell, Card, TextField,Autocomplete, Chip,DatePicker,MenuButtonColumn,FileUpload, Button, SelectField, TimePicker,Toolbar} from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\nimport dateformat from \"dateformat\";\n\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nimport {Session} from 'bc-react-session'\nconst {payload}  = Session.get()\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            _id :'',\n            client_id:'',\n            avatar_url:'',\n            username:'',\n            employee_id:'',\n            full_name:'',\n            temp_avatar:'',\n            created_by:payload.userId\n        }\n    }\n\n    async componentDidMount() {\n        var parsed = qs.parse(window.location.search)\n        console.log(parsed.user_id)\n        this.setState({_id:parsed.user_id})\n        try{\n            await axios.get(`/api/user/${parsed.user_id}`)\n            .then(response => {\n                if (response.data.status === 200 ) {\n                    response.data.data.map((item,i) => {\n                        \n                        this.setState({\n                            _id: item._id,\n                            username:item.username,\n                            employee_id:item.employee_id,\n                            client_id:item.client_id,\n                            avatar_url:item.avatar_url,\n                        })\n                        return false\n                    })\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        console.log(this.state.client_id)\n        if (this.state.employee_id !== null ) {\n            try{\n                await axios.get(`/api/employee/${this.state.employee_id}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            \n                            this.setState({\n                                full_name:item.full_name,\n                                email:item.email,\n                                phone_number:item.phone_number,\n                                \n                            })\n                            return false\n                        })\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }else if (this.state.client_id !== null) {\n            try{\n                await axios.get(`/api/client/${this.state.client_id}`)\n                .then(response => {\n                    if (response.data.status === 200 ) {\n                        response.data.data.map((item,i) => {\n                            \n                            this.setState({\n                                full_name:item.client_name,\n                                email:item.email,\n                                phone_number:item.phone_number,\n                                address:item.address\n                            })\n                            return false\n                        })\n                    }\n                })\n            }catch(e){\n                console.log(e)\n            }\n        }\n    }\n\n    notify = (type,message) =>  toast(\n        ( message  ) , {\n        type:toast.TYPE[type],\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n       \n    })\n\n    onChangeUsername = (evt) => {\n        this.setState({username:evt})\n    }\n\n    onChangeFullName = (evt) => {\n        this.setState({full_name:evt})\n    }\n\n    onChangePhoneNumber = (evt) => {\n        this.setState({phone_number:evt})\n    }\n\n    onChangeEmail = (evt) => {\n        this.setState({email:evt})\n    }\n\n    onChangeAddress = (evt) => {\n        this.setState({address:evt})\n    }\n\n    save  = async() => {\n        const body = {\n            username : this.state.username,\n            avatar_url:this.state.avatar_url\n        }\n\n        const bodyEmployee = {\n            email : this.state.email,\n            phone_number:this.state.phone_number,\n            full_name : this.state.full_name\n        }\n\n        const bodyClient = {\n            email : this.state.email,\n            phone_number:this.state.phone_number,\n            client_name : this.state.full_name,\n            address:this.state.address\n        }\n        \n        \n        body.updated_by = this.state.created_by\n        try {\n            await axios.put(`/api/edit_profile/${this.state._id}`,body)\n            .then( async response => {\n                if (response.data.status === 200 ) {\n                  \n                    this.componentDidMount()\n                    \n                    if (this.state.employee_id !== null ) {\n                        try{\n                            await axios.put(`/api/employee/${this.state.employee_id}`,bodyEmployee)\n                            .then(responseEmployee => {\n                                if(responseEmployee.data.status ==200) {\n                                    this.notify('SUCCESS',response.data.message)\n                                }else {\n                                    this.notify('ERROR','FAILED')\n                                }\n                            })\n                        }catch(e){\n                            console.log(e)\n                        }\n                    }else  if (this.state.client_id !== null ) {\n                        try{\n                            await axios.put(`/api/client/${this.state.client_id}`,bodyClient)\n                            .then(responseEmployee => {\n                                if(responseEmployee.data.status ==200) {\n                                    this.notify('SUCCESS',response.data.message)\n                                }else {\n                                    this.notify('ERROR','FAILED')\n                                }\n                            })\n                        }catch(e){\n                            console.log(e)\n                        }\n                    }\n                }else {\n                    this.notify('ERROR','FAILED')\n                }\n            })\n        }catch(e){\n            console.log(e)\n        }\n        \n        \n    }\n\n    handleLoad = (uploadedFile, uploadedData) => {\n\n        this.setState({\n            avatar_url : (uploadedData),\n            \n        })\n        console.log(uploadedData)\n        \n    }\n\n    deleteFile = (file) => {\n        \n       this.setState({\n           avatar_url:'',\n           formdata:{}\n       })\n    }\n\n   \n    \n\n    render(){\n        return(\n            <div>\n                 <ToastContainer />\n                <Grid className=\"grid-example\">\n                    <Toolbar \n                        title={<b>Profile</b>}\n                        nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    \n                        <Cell size={12}>\n                            <Card style={{padding:'2.5vw'}}>\n                                <Grid>\n                                <Cell size={9}>\n                                    \n                                    <TextField \n                                        label=\"Username\"\n                                        placeholder=\"Username\"\n                                        value={this.state.username}\n                                        onChange={this.onChangeUsername}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                       \n                                    />\n                                    <TextField \n                                        label=\"Full Name\"\n                                        placeholder=\"Full Name\"\n                                        value={this.state.full_name}\n                                        onChange={this.onChangeFullName}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    <TextField \n                                        label=\"Phone Number\"\n                                        placeholder=\"Phone Number\"\n                                        value={this.state.phone_number}\n                                        onChange={this.onChangePhoneNumber}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n\n                                    <TextField \n                                        label=\"Email\"\n                                        placeholder=\"Email\"\n                                        value={this.state.email}\n                                        onChange={this.onChangeEmail}\n                                        className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                    />\n                                    {this.state.client_id !== null ? (\n                                        <TextField \n                                            rows={3}\n                                            label=\"Address\"\n                                            placeholder=\"Address\"\n                                            value={this.state.address}\n                                            onChange={this.onChangeAddress}\n                                            className=\"md-cell md-cell--4-tablet md-cell--6\"\n                                        />\n                                    ):''}\n                                     \n                                    <br />\n                                    \n                                    <Button primary raised onClick={this.save} >Update Profile</Button>\n                                    </Cell>\n                                    <Cell size={3}>\n                                        {this.state.avatar_url !== ''  ? (\n                                            <div>\n                                                <img src={this.state.temp_avatar !== '' ? this.state.temp_avatar : this.state.avatar_url} width='100vw' />\n                                                <br />\n                                                <Chip  className=\"state-chip\" label={'remove'} removable    onClick={() =>this.deleteFile(this.state.avatar_url)} />\n                                                <br />\n                                                \n                                            </div>\n                                            \n\n                                        ):(\n                                            <div>\n                                                \n                                                <br />\n                                                <FileUpload label=\"Select Avatar\"  id=\"a-file-upload\"\n                                                    accept=\"image/*\" name=\"images\"\n                                                    onLoad={this.handleLoad}\n                                                    style={{backgroundColor:'#359ce6'}}/>\n                                            </div>\n                                            \n                                        )}\n                                    </Cell>\n                                    </Grid>\n                            </Card>\n                        </Cell>\n                      \n                            \n\n                           \n                        \n                   \n                </Grid>\n            </div>\n        )\n    }\n}\n\n","import React,{Component,Fragment} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Grid, Cell, Card, TextField,Autocomplete, Chip,DatePicker,MenuButtonColumn,FileUpload, Button, SelectField, TimePicker,Toolbar} from 'react-md'\nimport qs from 'query-string'\nimport axios from 'axios'\nimport dateformat from \"dateformat\";\nimport $ from 'jquery/dist/jquery.js'\n\nimport * as summernote from 'summernote/dist/summernote-lite'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport {ApplicationMenu,Notifications,UserDropdownMenu} from '../../components'\nimport {Session} from 'bc-react-session'\nconst {payload}  = Session.get()\n\nexport default class Form extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            _id :'',\n           \n        }\n    }\n\n    async componentDidMount() {\n       \n    }\n\n   \n    \n\n    render(){\n        return(\n            <div>\n                 <Toolbar\n            \n            colored\n            \n            title=''\n            style={{backgroundColor:'#4aa6ed'}}\n            style={{backgroundColor:'#fff'}}\n            actions={[(<ApplicationMenu />),(<Notifications />),(<UserDropdownMenu avatar={'/avatar/user.png'} />)]}\n        />\n                <Grid className=\"grid-example\">\n                    <Toolbar \n                        title={<b>Preferences</b>}\n                        nav={<a onClick={() => window.history.go(-1)} ><Button icon >arrow_back</Button></a> }\n                     />\n                </Grid>\n                <Grid className=\"grid-example\">\n                    \n                        <Cell size={12}>\n                        <Card style={{padding:'2.5vw'}}>\n                            \n                            <TextField \n                                placeholder=\"Old Password\"\n                                \n                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                            />\n                            <TextField \n                                placeholder=\"New Password\"\n                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                            />\n                            <TextField \n                                placeholder=\"Confirm New Password\"\n                                className=\"md-cell md-cell--4-tablet md-cell--6\"\n                            />\n                            <br />\n                            \n                            <Button primary raised onClick={this.handleSubmit} >Submit</Button>\n                            <Button primary raised onClick={this.handleSubmit} >Change</Button>\n                            <Button  raised onClick={() => window.history.go(-1)}  >Cancel</Button>\n                        </Card>\n                    </Cell>\n                    \n                </Grid>\n            </div>\n        )\n    }\n}\n\n","import React, { Component, Fragment } from \"react\"\nimport { BrowserRouter as Router, Route, Switch, Redirect, Link } from 'react-router-dom'\nimport { Login, ForgotPassword, Landingpage } from './components'\nimport { Session } from 'bc-react-session'\nimport modules from './modules'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport io from 'socket.io-client'\nimport { socket_address } from './components/socket-address'\nimport axios from 'axios'\nimport { Avatar } from 'react-md'\nimport ChangePassword from './modules/setting/ChangePassword'\nimport Profile from './modules/setting/Profile'\nimport Preferences from './modules/setting/Preferences'\nimport dateformat from 'dateformat'\nconst { payload } = Session.get()\nconst session = Session.getSession()\n\nlet ring = new Audio('/sounds/just-saying.mp3')\n\nclass App extends Component {\n\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      userId: payload.userId,\n      username: payload.username,\n      loggedIn: session.isValid ? true : false\n    }\n\n    this.socket = io(socket_address)\n    this.socket.on('RECEIVE_MESSAGE', (data) => {\n      // console.log(data)\n    })\n\n    this.socket.on('RECEIVE_NOTIFICATION', (data) => {\n      if (data.to_user_id === payload.userId) {\n        console.log(data)\n        // ring.play()\n        try {\n          axios.get(`/api/user/${data.from_user_id}`)\n            .then(response => {\n              if (response.data.status === 200) {\n                var item = response.data.data[0]\n                // var created_at = dateformat(data.created_at,'yyyy') === dateformat(new Date(),'yyyy') ? dateformat(data.created_at,'dd/mmm hh:MM'): dateformat(data.created_at,'dd/mmm/yy hh:MM')\n                var notifComponent = (\n                  <Fragment>\n                    {/* <a href={data.link} >  */}\n                    <div className=\"container\" style={{ paddingRight: '20px', width: '30vw', height: '10vh',  }}>\n\n                      <div className=\"media\" style={{borderRadius: '10px'}}>\n                        <div className=\"media-left\">\n                          <Avatar src={item.avatar_url} />\n                        </div>\n                        <div className=\"media-content\">\n\n                          <b>{item.full_name !== '' && item.full_name !== null ? item.full_name : item.client_name}</b>\n                          {/* <p style={{fontSize:'8pt'}}>{dateformat(data.created_at,'dd mmm yyyy, HH:MM')}</p> */}\n\n                          <p>{data.notification}</p>\n\n\n                        </div>\n\n                      </div>\n                    </div>\n                    {/* </a> */}\n                  </Fragment>\n\n                )\n\n                this.notify('', notifComponent)\n              }\n            })\n        } catch (e) {\n          console.log(e)\n        }\n      }\n\n    })\n\n  }\n\n  componentDidMount() {\n    // ring.play()\n  }\n\n  notify = (type, message) => toast(\n    (message), {\n    type: toast.TYPE[type],\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: true,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n\n  })\n\n  readNotif = async (notif_id) => {\n    const body = {\n      is_read: 1\n    }\n    try {\n      axios.put(`/api/notification/${notif_id}`, body)\n        .then(response => {\n          if (response.data.status === 200) {\n\n          }\n        })\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            {modules.map(module => (\n              <Route {...module.routeProps} />\n            ))}\n            {modules.map(module => (\n              <Route path={module.routeProps.path + '/:menu_name'} exact={false} component={module.routeProps.component} />\n            ))}\n            <Route exact path=\"/\">\n              {!this.state.loggedIn ? <Redirect to=\"/login-page\" /> : <Landingpage />}\n            </Route>\n\n            <Route exact path=\"/login-page\">\n              {this.state.loggedIn ? <Redirect to=\"/\" /> : <Login />}\n            </Route>\n            <Route path=\"/forgot-pwd\" component={ForgotPassword} />\n\n            <Route exact path=\"/setting/profile\" component={Profile} />\n            <Route exact path=\"/setting/changepwd\" component={ChangePassword} />\n            <Route exact path=\"/setting/preferences\" component={Preferences} />\n          </Switch>\n\n        </Router>\n        <ToastContainer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bulma/css/bulma.min.css'\nimport 'react-md/dist/react-md.min'\nimport 'font-awesome/css/font-awesome.min.css'\nimport 'animate-css/dist/animate.css'\nimport \"./App/style.css\";\nimport App from \"./App\";\nimport WebFontLoader from 'webfontloader'\n\nWebFontLoader.load({\n    google: {\n      families: ['Roboto:300,400,500,700', 'Material Icons'],\n    },\n  })\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}